R version 4.2.2 Patched (2022-11-10 r83330) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> setwd('/home/weston/science/UMD/ORISE/bayTools/')
> library(bayTools)
> library(dplyr)
+ library(sf)
+ library(ggplot2)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(mapview) # html mapping
+ library(leaflet) # html mapping
+ library(leaflet.extras)
+ library(ggplot2) # plotting
+ library(dplyr) # wrangling data
+ library(here) # setting directories safely
+ library(viridis) # color scheme
+ library(USAboundaries) # county/state boundaries
+ library(nhdplusTools) # USGS/NHD rivers data
+ # further geospatial tools
+ library(nngeo)
+ library(measurements)
+ library(lwgeom)
+ library(elevatr)
+ library(rgeos)
Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1; sf_use_s2() is TRUE
> > load('data/conmon_eotb_2001_2022_2023_08_11_1707.rda')
+ load('data/conmon_vecos_2003_2022_2023_08_11_1739_rev2023_10_28.rda')
> here() starts at /home/weston/science/UMD/ORISE/bayTools
> Loading required package: viridisLite
> The USAboundariesData package needs to be installed.
 Please try installing the package using the following command:
     install.packages("USAboundariesData", repos = "https://ropensci.r-universe.dev", type = "source")
> > Linking to liblwgeom 3.0.0beta1 r16016, GEOS 3.8.0, PROJ 6.3.1

Attaching package: ‘lwgeom’

The following object is masked from ‘package:sf’:

    st_perimeter

> > Loading required package: sp
rgeos version: 0.6-1, (SVN revision 692)
 GEOS runtime version: 3.8.0-CAPI-1.13.1
 Please note that rgeos will be retired during 2023,
plan transition to sf functions using GEOS at your earliest convenience.
 Linking to sp version: 1.5-1
 Polygon checking: TRUE


Attaching package: ‘rgeos’

The following object is masked from ‘package:dplyr’:

    symdiff

> > # find common columns between MDDNR and VECOS
+ common_cols <- intersect(colnames(conmon_eotb_2001_2022), colnames(conmon_vecos_2003_2022))
> > conmon_eotb <- subset(conmon_eotb_2001_2022, select = common_cols)
+ conmon_vecos <- subset(conmon_vecos_2003_2022, select = common_cols)
> cb_stations_manual <- googlesheets4::read_sheet(ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0"
+                                                 )
+ The googlesheets4 package is requesting access to your Google account.
Enter '1' to start a new auth process or select a pre-authorized account.
1: Send me to the browser for a new auth process.
2: wslaught@umd.edu
Selection: 2
✔ Reading from stations_manual.
✔ Range Sheet1.
> cb_stations_manual <- cb_stations_manual %>%
+   filter(!is.na(site_code)) %>%
+   rename(station = site_code)
> # enter POI of most downstream station, or, downstream reference
+ poi_ds <- c(37.983763, -76.316517)
> # enter POI of most downstream station, or, downstream reference
+ poi_ds <- c(37.983763, -76.316517)
+ ds_station_poi <- st_sfc(st_point(poi_ds), crs = 4326)
> (ds_station_poi_comid <- discover_nhdplus_id(ds_station_poi))
NULL
> # enter POI of most downstream station, or, downstream reference
+ poi_ds <- c(37.983763, -76.316517)
+ ds_station_poi <- st_sfc(st_point(poi_ds), crs = 4326)
> (ds_station_poi_comid <- discover_nhdplus_id(ds_station_poi))
NULL
> # enter POI of most downstream station, or, downstream reference
+ poi_ds <- c(-76.316517, 37.983763)
+ ds_station_poi <- st_sfc(st_point(poi_ds), crs = 4326)
> (ds_station_poi_comid <- discover_nhdplus_id(ds_station_poi))
[1] 4539715
> # first make a list defining the sourcetype and ID
+ ds_station_poi_list <- list(featureSource = "comid",
+                   featureID = ds_station_poi_comid)
> # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UM",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UM",  :
  data source specified as flowline or '' is deprecated
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UT_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
Error in subset_nhdplus(comids = as.integer(all_comids), simplified = TRUE,  :
  comids must be NULL or non-empty
> all_comids
NULL
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid)
> all_comids
 [1] "4539715" "4535881" "4535555" "4536245" "4536247" "4536253" "4536263"
 [8] "4536265" "4535911" "4535587" "4535605"
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # check layers in database:
+ st_layers(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"))
> Driver: GPKG
Available layers:
           layer_name geometry_type features fields crs_name
1 NHDFlowline_Network   Line String       11    138    NAD83
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> # make a map
+ prettymapr::prettymap({
+   rosm::osm.plot(project = FALSE,
+                  bbox = matrix(st_bbox(ds_station_poi_streams), byrow = FALSE, ncol = 2,
+                                dimnames = list(c("x", "y"), c("min", "max"))),
+                  type = "cartolight", quiet = TRUE, progress = "none")
+   plot(ds_station_poi_streams$geom, col = "steelblue", lwd = (ds_station_poi_streams$streamorde / 4), add=TRUE)
+   plot(ds_station_poi, add=TRUE, pch=21, bg="orange", cex=1.5)
+   prettymapr::addnortharrow()
+ })
+ Zoom: 13
Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
Autodetect projection: assuming lat/lon (epsg 4326)
> m1 <- mapview(ds_station_poi, col.regions="black", cex=6, layer.name="Start Point") +
+   mapview(ds_station_poi_streams, zcol="slope", legend=TRUE, layer.name="Reach <br> Slope")
+ > m1
> # enter POI of most downstream station, or, downstream reference
+ poi_ds <- c(-76.388911, 38.023101)
+ ds_station_poi <- st_sfc(st_point(poi_ds), crs = 4326)
> (ds_station_poi_comid <- discover_nhdplus_id(ds_station_poi))
[1] 4532607
> # first make a list defining the sourcetype and ID
+ ds_station_poi_list <- list(featureSource = "comid",
+                   featureID = ds_station_poi_comid)
> # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UM",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UM",  :
  data source specified as flowline or '' is deprecated
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # check layers in database:
+ st_layers(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"))
> Driver: GPKG
Available layers:
           layer_name geometry_type features fields crs_name
1 NHDFlowline_Network   Line String      316    138    NAD83
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> # make a map
+ prettymapr::prettymap({
+   rosm::osm.plot(project = FALSE,
+                  bbox = matrix(st_bbox(ds_station_poi_streams), byrow = FALSE, ncol = 2,
+                                dimnames = list(c("x", "y"), c("min", "max"))),
+                  type = "cartolight", quiet = TRUE, progress = "none")
+   plot(ds_station_poi_streams$geom, col = "steelblue", lwd = (ds_station_poi_streams$streamorde / 4), add=TRUE)
+   plot(ds_station_poi, add=TRUE, pch=21, bg="orange", cex=1.5)
+   prettymapr::addnortharrow()
+ })
Zoom: 9
Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
Autodetect projection: assuming lat/lon (epsg 4326)
> m1
> # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UT",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UT",  :
  data source specified as flowline or '' is deprecated
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
Error in subset_nhdplus(comids = as.integer(all_comids), simplified = TRUE,  :
  comids must be NULL or non-empty
> all_coimds
Error: object 'all_coimds' not found
> all_comids
NULL
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UT_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
  C-c C-c
Warning message:
In get_flowline_subset(nhdplus_data, comids, output_file, status,  :
  Download functionality not tested for this many comids
Error in curl::curl_fetch_memory(url, handle = handle): Operation was aborted by an application callback
Request failed [ERROR]. Retrying in 1.7 seconds...
  C-c C-c  C-c C-c
Error in curl::curl_fetch_memory(url, handle = handle): Operation was aborted by an application callback
Request failed [ERROR]. Retrying in 1 seconds...
  C-c C-c
Spherical geometry (s2) switched on
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Request failed [504]. Retrying in 1 seconds...
  C-c C-c
Warning message:
In get_flowline_subset(nhdplus_data, comids, output_file, status,  :
  Download functionality not tested for this many comids
Error in curl::curl_fetch_memory(url, handle = handle): Operation was aborted by an application callback
Request failed [ERROR]. Retrying in 3.6 seconds...
  C-c C-c
Spherical geometry (s2) switched on
> # enter POI of most downstream station, or, downstream reference
+ poi_ds <- c(-77.264213, 38.365934)
+ ds_station_poi <- st_sfc(st_point(poi_ds), crs = 4326)
> (ds_station_poi_comid <- discover_nhdplus_id(ds_station_poi))
[1] 4534649
> # first make a list defining the sourcetype and ID
+ ds_station_poi_list <- list(featureSource = "comid",
+                   featureID = ds_station_poi_comid)
> # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UT",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UT",  :
  data source specified as flowline or '' is deprecated
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UT_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
  C-c C-c
Warning message:
In get_flowline_subset(nhdplus_data, comids, output_file, status,  :
  Download functionality not tested for this many comids
  C-c C-cError in curl::curl_fetch_memory(url, handle = handle): Operation was aborted by an application callback
Request failed [ERROR]. Retrying in 1 seconds...

Spherical geometry (s2) switched on
> # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UM",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UM",  :
  data source specified as flowline or '' is deprecated
> ds_station_poi_ds_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "D",
+                                    distance = 400,
+                                    data_source = "")
Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "D",  :
  data source specified as flowline or '' is deprecated
> # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UM",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UM",  :
  data source specified as flowline or '' is deprecated
> ds_station_poi_ds_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "D",
+                                    distance = 400,
+                                    data_source = "")
Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "D",  :
  data source specified as flowline or '' is deprecated
> ds_station_poi_ds_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "DM",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "DM",  :
  data source specified as flowline or '' is deprecated
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # check layers in database:
+ st_layers(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"))
> Driver: GPKG
Available layers:
           layer_name geometry_type features fields crs_name
1 NHDFlowline_Network   Line String      280    138    NAD83
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> > # make a map
+ prettymapr::prettymap({
+   rosm::osm.plot(project = FALSE,
+                  bbox = matrix(st_bbox(ds_station_poi_streams), byrow = FALSE, ncol = 2,
+                                dimnames = list(c("x", "y"), c("min", "max"))),
+                  type = "cartolight", quiet = TRUE, progress = "none")
+   plot(ds_station_poi_streams$geom, col = "steelblue", lwd = (ds_station_poi_streams$streamorde / 4), add=TRUE)
+   plot(ds_station_poi, add=TRUE, pch=21, bg="orange", cex=1.5)
+   prettymapr::addnortharrow()
+ })
Zoom: 9
Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
Autodetect projection: assuming lat/lon (epsg 4326)
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid, ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # check layers in database:
+ st_layers(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"))
> Driver: GPKG
Available layers:
           layer_name geometry_type features fields crs_name
1 NHDFlowline_Network   Line String      280    138    NAD83
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> # make a map
+ prettymapr::prettymap({
+   rosm::osm.plot(project = FALSE,
+                  bbox = matrix(st_bbox(ds_station_poi_streams), byrow = FALSE, ncol = 2,
+                                dimnames = list(c("x", "y"), c("min", "max"))),
+                  type = "cartolight", quiet = TRUE, progress = "none")
+   plot(ds_station_poi_streams$geom, col = "steelblue", lwd = (ds_station_poi_streams$streamorde / 4), add=TRUE)
+   plot(ds_station_poi, add=TRUE, pch=21, bg="orange", cex=1.5)
+   prettymapr::addnortharrow()
+ })
Zoom: 9
Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
Autodetect projection: assuming lat/lon (epsg 4326)
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid, ds_station_poi_ds_flowlines$UM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # check layers in database:
+ st_layers(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"))
> Driver: GPKG
Available layers:
           layer_name geometry_type features fields crs_name
1 NHDFlowline_Network   Line String      280    138    NAD83
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> # make a map
+ prettymapr::prettymap({
+   rosm::osm.plot(project = FALSE,
+                  bbox = matrix(st_bbox(ds_station_poi_streams), byrow = FALSE, ncol = 2,
+                                dimnames = list(c("x", "y"), c("min", "max"))),
+                  type = "cartolight", quiet = TRUE, progress = "none")
+   plot(ds_station_poi_streams$geom, col = "steelblue", lwd = (ds_station_poi_streams$streamorde / 4), add=TRUE)
+   plot(ds_station_poi, add=TRUE, pch=21, bg="orange", cex=1.5)
+   prettymapr::addnortharrow()
+ })
Zoom: 9
Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
Autodetect projection: assuming lat/lon (epsg 4326)
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid, ds_station_poi_ds_flowlines$DM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # check layers in database:
+ st_layers(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"))
> Driver: GPKG
Available layers:
           layer_name geometry_type features fields crs_name
1 NHDFlowline_Network   Line String      382    138    NAD83
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> # make a map
+ prettymapr::prettymap({
+   rosm::osm.plot(project = FALSE,
+                  bbox = matrix(st_bbox(ds_station_poi_streams), byrow = FALSE, ncol = 2,
+                                dimnames = list(c("x", "y"), c("min", "max"))),
+                  type = "cartolight", quiet = TRUE, progress = "none")
+   plot(ds_station_poi_streams$geom, col = "steelblue", lwd = (ds_station_poi_streams$streamorde / 4), add=TRUE)
+   plot(ds_station_poi, add=TRUE, pch=21, bg="orange", cex=1.5)
+   prettymapr::addnortharrow()
+ })
Zoom: 9
Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
Autodetect projection: assuming lat/lon (epsg 4326)
> # CB stations as spatial object
+ cb_station_sf <- st_as_sfc(cb_stations_manual, coords = c("lon", "lat"), crs = 4326)
> Error in UseMethod("st_as_sfc") :
  no applicable method for 'st_as_sfc' applied to an object of class "c('tbl_df', 'tbl', 'data.frame')"
> # CB stations as spatial object
+ cb_station_sf <- st_as_sf(cb_stations_manual, coords = c("lon", "lat"), crs = 4326)
> Error in `x[coords]`:
! Can't subset columns that don't exist.
✖ Column `lon` doesn't exist.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # CB stations as spatial object
+ cb_station_sf <- st_as_sf(cb_stations_manual, coords = c("long", "lat"), crs = 4326)
> m1 <- mapview(ds_station_poi, col.regions="black", cex=6, layer.name="Start Point") +
+   mapview(ds_station_poi_streams, zcol="slope", legend=TRUE, layer.name="Reach <br> Slope")
+   mapview(cb_station_sf, col.regions="orange", layer.name="conmon stations") +
+ > + m1
> d(ds_station_poi)
Error in d(ds_station_poi) : could not find function "d"
> head(ds_station_poi)
Geometry set for 1 feature
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -77.26421 ymin: 38.36593 xmax: -77.26421 ymax: 38.36593
Geodetic CRS:  WGS 84
POINT (-77.26421 38.36593)
> # loop through each and use lat/long to get NHD flowline comid, then attach comid and nhd data to df
+ cb_station_sf$comid <- c()
+ rm(cb_station_nhd)
Warning message:
In rm(cb_station_nhd) : object 'cb_station_nhd' not found
> for(i in 1:nrow(cb_station_sf)) {
+
+     poi <- c(cb_station_sf$long[i], cb_station_sf$lat[i])
+
+     # turn into spatial object
+     cb_station_i <- st_sfc(st_point(poi), crs = 4326)
+
+
+     # now figure out the nearest stream segment ID to our point
+     hgsite_comid <- discover_nhdplus_id(cb_station_i)
+     print(hgsite_comid)
+
+     # first make a list defining the sourcetype and ID
+     ## hgsite_list <- list(featureSource = "comid",
+     ##                   featureID = hgsite_comid)
+
+   if(!is.null(hgsite_comid)) {
+       cb_station_sf$comid[i] <- hgsite_comid
+       cb_station_i_nhd <- nhdplusTools::get_nhdplus(comid = hgsite_comid)
+
+       if(!exists('cb_station_nhd')) {
+         cb_station_nhd <- cb_station_i_nhd
+       } else {
+         cb_station_nhd <- rbind(cb_station_nhd, cb_station_i_nhd)
+       }
+   } else {
+       cb_station_sf$comid[i] <- NA
+   }
+
+ }
Error in st_point(poi) : is.numeric(x) is not TRUE
In addition: Warning messages:
1: Unknown or uninitialised column: `long`.
2: Unknown or uninitialised column: `lat`.
> for(i in 1:nrow(cb_station_sf)) {
+
+     ## poi <- c(cb_station_sf$long[i], cb_station_sf$lat[i])
+     poi <- cb_station_sf$geometry
+
+     # turn into spatial object
+     ## cb_station_i <- st_sfc(st_point(poi), crs = 4326)
+
+
+     # now figure out the nearest stream segment ID to our point
+     hgsite_comid <- discover_nhdplus_id(cb_station_i)
+     print(hgsite_comid)
+
+     # first make a list defining the sourcetype and ID
+     ## hgsite_list <- list(featureSource = "comid",
+     ##                   featureID = hgsite_comid)
+
+   if(!is.null(hgsite_comid)) {
+       cb_station_sf$comid[i] <- hgsite_comid
+       cb_station_i_nhd <- nhdplusTools::get_nhdplus(comid = hgsite_comid)
+
+       if(!exists('cb_station_nhd')) {
+         cb_station_nhd <- cb_station_i_nhd
+       } else {
+         cb_station_nhd <- rbind(cb_station_nhd, cb_station_i_nhd)
+       }
+   } else {
+       cb_station_sf$comid[i] <- NA
+   }
+
+ }
Error in discover_nhdplus_id(cb_station_i) :
  object 'cb_station_i' not found
> for(i in 1:nrow(cb_station_sf)) {
+
+     ## poi <- c(cb_station_sf$long[i], cb_station_sf$lat[i])
+
+     # turn into spatial object
+     ## cb_station_i <- st_sfc(st_point(poi), crs = 4326)
+     cb_station_i <- cb_station_sf$geometry
+
+
+     # now figure out the nearest stream segment ID to our point
+     hgsite_comid <- discover_nhdplus_id(cb_station_i)
+     print(hgsite_comid)
+
+     # first make a list defining the sourcetype and ID
+     ## hgsite_list <- list(featureSource = "comid",
+     ##                   featureID = hgsite_comid)
+
+   if(!is.null(hgsite_comid)) {
+       cb_station_sf$comid[i] <- hgsite_comid
+       cb_station_i_nhd <- nhdplusTools::get_nhdplus(comid = hgsite_comid)
+
+       if(!exists('cb_station_nhd')) {
+         cb_station_nhd <- cb_station_i_nhd
+       } else {
+         cb_station_nhd <- rbind(cb_station_nhd, cb_station_i_nhd)
+       }
+   } else {
+       cb_station_sf$comid[i] <- NA
+   }
+
+ }
+ Error in: https://labs.waterdata.usgs.gov/api/nldi/linked-data/comid/position?f=json&coords=POINT%28-76.5227%20-76.575%29
Error in: https://labs.waterdata.usgs.gov/api/nldi/linked-data/comid/NULL/
integer(0)
Spherical geometry (s2) switched off
Error in out[[1]] : subscript out of bounds
In addition: Warning message:
Unknown or uninitialised column: `comid`.
Spherical geometry (s2) switched on
> cb_station_sf$comid <- c()
+ rm(cb_station_nhd)
+
+ for(i in 1:nrow(cb_station_sf)) {
+
+     ## poi <- c(cb_station_sf$long[i], cb_station_sf$lat[i])
+
+     # turn into spatial object
+     ## cb_station_i <- st_sfc(st_point(poi), crs = 4326)
+     cb_station_i <- cb_station_sf$geometry[i]
+
+
+     # now figure out the nearest stream segment ID to our point
+     hgsite_comid <- discover_nhdplus_id(cb_station_i)
+     print(hgsite_comid)
+
+     # first make a list defining the sourcetype and ID
+     ## hgsite_list <- list(featureSource = "comid",
+     ##                   featureID = hgsite_comid)
+
+   if(!is.null(hgsite_comid)) {
+       cb_station_sf$comid[i] <- hgsite_comid
+       cb_station_i_nhd <- nhdplusTools::get_nhdplus(comid = hgsite_comid)
+
+       if(!exists('cb_station_nhd')) {
+         cb_station_nhd <- cb_station_i_nhd
+       } else {
+         cb_station_nhd <- rbind(cb_station_nhd, cb_station_i_nhd)
+       }
+   } else {
+       cb_station_sf$comid[i] <- NA
+   }
+
+ }
> Warning message:
In rm(cb_station_nhd) : object 'cb_station_nhd' not found
> > . + [1] 4532885
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4539849
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4534575
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4539795
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22340825
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4534781
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4529659
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532471
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22343523
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4530723
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4534465
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532399
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532401
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4539813
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532001
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532203
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22341031
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22340603
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532641
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532451
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4539757
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22340557
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22338109
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22338089
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22343533
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22343545
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4534677
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532299
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532523
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4539919
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Warning message:
Unknown or uninitialised column: `comid`.
> # snap to streamline
+ st_snap_points <- function(x, y, namevar, max_dist = 1000) {
+
+   # this evaluates the length of the data
+   if (inherits(x, "sf")) n = nrow(x)
+   if (inherits(x, "sfc")) n = length(x)
+
+   # this part:
+   # 1. loops through every piece of data (every point)
+   # 2. snaps a point to the nearest line geometries
+   # 3. calculates the distance from point to line geometries
+   # 4. retains only the shortest distances and generates a point at that intersection
+   out = do.call(c,
+                 lapply(seq(n), function(i) {
+                   nrst = st_nearest_points(st_geometry(x)[i], y)
+                   nrst_len = st_length(nrst)
+                   nrst_mn = which.min(nrst_len)
+                   if (as.vector(nrst_len[nrst_mn]) > max_dist) return(st_geometry(x)[i])
+                   return(st_cast(nrst[nrst_mn], "POINT")[2])
+                 })
+   )
+   # this part converts the data to a dataframe and adds a named column of your choice
+   out_xy <- st_coordinates(out) %>% as.data.frame()
+   out_xy <- out_xy %>%
+     mutate({{namevar}} := x[[namevar]]) %>%
+     st_as_sf(coords=c("X","Y"), crs=st_crs(x), remove=FALSE)
+
+   return(out_xy)
+ }
> crs(cb_station_data)
Error in crs(cb_station_data) : could not find function "crs"
> head(cb_station_data)
Error in head(cb_station_data) : object 'cb_station_data' not found
> # complete site dataframe
+ cb_station_data <- cb_station_sf %>%
+   left_join(cb_station_nhd, by = "comid")
Error: y should not have class sf; for spatial joins, use st_join
> # complete site dataframe
+ cb_station_data <- cb_station_sf %>%
+   st_join(cb_station_nhd, by = "comid")
Error in s2::s2_options(model = model, ...) :
  unused argument (by = "comid")
> # complete site dataframe
+ cb_station_data <- cb_station_sf %>%
+   merge(cb_station_nhd, by = "comid")
Error in merge.sf(., cb_station_nhd, by = "comid") :
  merge on two sf objects not supported
> # complete site dataframe
+ cb_station_data <- cb_station_sf %>%
+   st_join(cb_station_nhd)
> head(cb_station_data)
Simple feature collection with 6 features and 156 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -77.2728 ymin: 38.0905 xmax: -76.5227 ymax: 38.6699
Geodetic CRS:  WGS 84
# A tibble: 6 × 157
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XBE5486       2009
2 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
3 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
5 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Mallows… XDA8236       2018
# ℹ 149 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   geometry <POINT [°]>, comid.x <int>, id <chr>, comid.y <int>, fdate <dttm>,
#   resolution <chr>, gnis_id <chr>, gnis_name <chr>, lengthkm <dbl>,
#   reachcode <chr>, flowdir <chr>, wbareacomi <int>, ftype <chr>, fcode <int>,
#   shape_length <dbl>, streamleve <int>, streamorde <int>, streamcalc <int>, …
# ℹ Use `colnames()` to see all variable names
> crs(cb_station_data)
Error in crs(cb_station_data) : could not find function "crs"
> head(ds_station_poi_streams)
Simple feature collection with 6 features and 138 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: -77.68737 ymin: 39.30193 xmax: -77.56028 ymax: 39.32623
Geodetic CRS:  NAD83
# A tibble: 6 × 139
  id             comid fdate               resolution gnis_id gnis_name lengthkm
  <chr>          <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.19
2 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.141
3 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.483
4 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.084
5 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.779
6 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    1.53
# ℹ 132 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> all_gages_proj <- st_transform(cb_station_data, crs = 26910)
> cb_station_proj <- st_transform(cb_station_data, crs = 26910)
> cb_flowlines <- st_transform(ds_station_poi_streams, crs = 26910)
> head(cb_flowlines)
Simple feature collection with 6 features and 138 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: 4448014 ymin: 5471511 xmax: 4460612 ymax: 5476470
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 6 × 139
  id             comid fdate               resolution gnis_id gnis_name lengthkm
  <chr>          <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.19
2 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.141
3 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.483
4 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.084
5 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.779
6 nhdflowline_… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    1.53
# ℹ 132 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> head(cb_station_proj)
Simple feature collection with 6 features and 156 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4545362 ymin: 5398934 xmax: 4640455 ymax: 5430415
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 6 × 157
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XBE5486       2009
2 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
3 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
5 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Mallows… XDA8236       2018
# ℹ 149 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   geometry <POINT [m]>, comid.x <int>, id <chr>, comid.y <int>, fdate <dttm>,
#   resolution <chr>, gnis_id <chr>, gnis_name <chr>, lengthkm <dbl>,
#   reachcode <chr>, flowdir <chr>, wbareacomi <int>, ftype <chr>, fcode <int>,
#   shape_length <dbl>, streamleve <int>, streamorde <int>, streamcalc <int>, …
# ℹ Use `colnames()` to see all variable names
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "identifier",
+                                 max_dist = 500)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "identifier",
+                                 max_dist = 5000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "identifier",
+                                 max_dist = 15000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "identifier",
+                                 max_dist = 25000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > head(gages_snapped)
Simple feature collection with 6 features and 2 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4543733 ymin: 5397905 xmax: 4640574 ymax: 5430461
Projected CRS: NAD83 / UTM zone 10N
        X       Y                geometry
1 4640574 5399698 POINT (4640574 5399698)
2 4629779 5403798 POINT (4629779 5403798)
3 4566316 5398961 POINT (4566316 5398961)
4 4618015 5401418 POINT (4618015 5401418)
5 4544472 5430461 POINT (4544472 5430461)
6 4543733 5397905 POINT (4543733 5397905)
> # create a 1 meter buffer around snapped point
+ poi_snapped_buff <-  st_buffer(poi_snapped, 5)
> Error in st_buffer(poi_snapped, 5) : object 'poi_snapped' not found
> # create a 1 meter buffer around snapped point
+ poi_snapped_buff <-  st_buffer(gages_snapped, 5)
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > mapview(segs)
> head(segs)
Simple feature collection with 6 features and 139 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: 4448014 ymin: 5471511 xmax: 4460612 ymax: 5476470
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 6 × 140
  rowid id       comid fdate               resolution gnis_id gnis_name lengthkm
  <int> <chr>    <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1     1 nhdflo… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.19
2     2 nhdflo… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.141
3     3 nhdflo… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.483
4     4 nhdflo… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.084
5     5 nhdflo… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.779
6     6 nhdflo… 4.51e6 2008-07-22 00:00:00 Medium     597915  Potomac …    1.53
# ℹ 132 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> head(segs$gnis_id)
[1] "597915" "597915" "597915" "597915" "597915" "597915"
> unique(segs$gnis_id)
[1] "597915"  "1552968"
> unique(segs[segs$gnis_id == "1552968",])
Simple feature collection with 19 features and 139 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: 4348687 ymin: 5422141 xmax: 4358859 ymax: 5444990
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 19 × 140
   rowid id      comid fdate               resolution gnis_id gnis_name lengthkm
   <int> <chr>   <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
 1   332 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    0.021
 2   333 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    0.138
 3   334 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    1.70
 4   335 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    1.96
 5   336 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    5.42
 6   337 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    0.109
 7   338 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    0.368
 8   339 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    0.854
 9   340 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    1.72
10   341 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    0.502
11   342 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    9.17
12   343 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    0.835
13   344 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    2.61
14   345 nhdfl… 8.42e6 2009-09-14 00:00:00 Medium     1552968 South Br…    8.78
15   346 nhdfl… 8.43e6 2009-09-14 00:00:00 Medium     1552968 South Br…    3.18
16   347 nhdfl… 8.43e6 2009-09-14 00:00:00 Medium     1552968 South Br…    0.273
17   348 nhdfl… 8.43e6 2009-09-14 00:00:00 Medium     1552968 South Br…    1.64
18   437 nhdfl… 9.32e8 2009-09-14 00:00:00 Medium     1552968 South Br…    3.02
19   438 nhdfl… 9.32e8 2009-09-14 00:00:00 Medium     1552968 South Br…    2.34
# ℹ 132 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> unique(segs$gnis_id)
[1] "597915"  "1552968"
> # filter, if desired
+ segs_filt <- segs %>%
+   filter(
+       gnis_id != "1552968"
+     )
> segs_filt_dist <- segs_filt %>%
+   # drop the "loose ends" on either extent (upstream or downstream) of first/last gage
+   # filter(!rowid %in% c(232, 100, 66, 62, 63)) %>%
+   mutate(seg_len_m = units::drop_units(units::set_units(st_length(.), "m")),
+          seg_len_km = seg_len_m/1000) %>%
+   arrange(desc(hydroseq)) %>%
+   mutate(total_len_km = cumsum(seg_len_km)) # %>%
+   # filter to just cols of interest
+   # select(rowid, ogc_fid:comid, gnis_id:reachcode, streamorde, hydroseq, seg_len_km, total_len_km, geom)
> mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   mapview(gages_snapped, zcol="identifier", layer.name="conmon stations")
+ Error:
at least one of the following columns:
'identifier'
not found in gages_snapped
> mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   mapview(gages_snapped, zcol="", layer.name="conmon stations")
+ Error:
at least one of the following columns:
''
not found in gages_snapped
> head(gages_snapped)
Simple feature collection with 6 features and 2 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4543733 ymin: 5397905 xmax: 4640574 ymax: 5430461
Projected CRS: NAD83 / UTM zone 10N
        X       Y                geometry
1 4640574 5399698 POINT (4640574 5399698)
2 4629779 5403798 POINT (4629779 5403798)
3 4566316 5398961 POINT (4566316 5398961)
4 4618015 5401418 POINT (4618015 5401418)
5 4544472 5430461 POINT (4544472 5430461)
6 4543733 5397905 POINT (4543733 5397905)
> mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   mapview(gages_snapped, layer.name="conmon stations")
+ > mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   ## mapview(gages_snapped, layer.name="conmon stations") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages")
+ > colnames(cb_stations_manual)
 [1] "src"                 "src_sub"             "data_type"
 [4] "watershed"           "watershed_sub"       "site_name"
 [7] "station"             "lat"                 "long"
[10] "start_year"          "end_year"            "station_depth"
[13] "top_sensor_depth_m"  "station_depth_m"     "DO"
[16] "WQ_fixed"            "WQ_fixed_waterlevel" "url"
[19] "notes"
> cb_stations_manual <- cb_stations_manual %>%
+   filter(!is.na(site_code)) %>%
+   rename(station = site_code) %>%
+   filter(start_year < 2009, end_year > 2007)
Error in `filter()`:
ℹ In argument: `!is.na(site_code)`.
Caused by error:
! object 'site_code' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> cb_stations_manual.r <- googlesheets4::read_sheet(ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0"
+                                                 )
+ Auto-refreshing stale OAuth token.
✔ Reading from stations_manual.
✔ Range Sheet1.
> cb_stations_manual <- cb_stations_manual.r %>%
+   filter(!is.na(site_code)) %>%
+   rename(station = site_code) %>%
+   filter(start_year < 2009, end_year > 2007)
> # enter POI of most downstream station, or, downstream reference
+ poi_ds <- c(-77.264213, 38.365934)
+ ds_station_poi <- st_sfc(st_point(poi_ds), crs = 4326)
> (ds_station_poi_comid <- discover_nhdplus_id(ds_station_poi))
[1] 4534649
> # first make a list defining the sourcetype and ID
+ ds_station_poi_list <- list(featureSource = "comid",
+                   featureID = ds_station_poi_comid)
> # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UM",
+                                    distance = 200,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UM",  :
  data source specified as flowline or '' is deprecated
> ds_station_poi_ds_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "DM",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "DM",  :
  data source specified as flowline or '' is deprecated
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid, ds_station_poi_ds_flowlines$DM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # check layers in database:
+ st_layers(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"))
> Driver: GPKG
Available layers:
           layer_name geometry_type features fields crs_name
1 NHDFlowline_Network   Line String      251    138    NAD83
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> # CB stations as spatial object
+ cb_station_sf <- st_as_sf(cb_stations_manual, coords = c("long", "lat"), crs = 4326)
> # make a map
+ prettymapr::prettymap({
+   rosm::osm.plot(project = FALSE,
+                  bbox = matrix(st_bbox(ds_station_poi_streams), byrow = FALSE, ncol = 2,
+                                dimnames = list(c("x", "y"), c("min", "max"))),
+                  type = "cartolight", quiet = TRUE, progress = "none")
+   plot(ds_station_poi_streams$geom, col = "steelblue", lwd = (ds_station_poi_streams$streamorde / 4), add=TRUE)
+   plot(ds_station_poi, add=TRUE, pch=21, bg="orange", cex=1.5)
+   prettymapr::addnortharrow()
+ })
Zoom: 9
Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
Autodetect projection: assuming lat/lon (epsg 4326)
> # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UM",
+                                    distance = 100,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UM",  :
  data source specified as flowline or '' is deprecated
> ds_station_poi_ds_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "DM",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "DM",  :
  data source specified as flowline or '' is deprecated
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid, ds_station_poi_ds_flowlines$DM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # check layers in database:
+ st_layers(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"))
> Driver: GPKG
Available layers:
           layer_name geometry_type features fields crs_name
1 NHDFlowline_Network   Line String      171    138    NAD83
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> # CB stations as spatial object
+ cb_station_sf <- st_as_sf(cb_stations_manual, coords = c("long", "lat"), crs = 4326)
> # make a map
+ prettymapr::prettymap({
+   rosm::osm.plot(project = FALSE,
+                  bbox = matrix(st_bbox(ds_station_poi_streams), byrow = FALSE, ncol = 2,
+                                dimnames = list(c("x", "y"), c("min", "max"))),
+                  type = "cartolight", quiet = TRUE, progress = "none")
+   plot(ds_station_poi_streams$geom, col = "steelblue", lwd = (ds_station_poi_streams$streamorde / 4), add=TRUE)
+   plot(ds_station_poi, add=TRUE, pch=21, bg="orange", cex=1.5)
+   prettymapr::addnortharrow()
+ })
Zoom: 10
Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
Autodetect projection: assuming lat/lon (epsg 4326)
> # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UM",
+                                    distance = 80,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UM",  :
  data source specified as flowline or '' is deprecated
> ds_station_poi_ds_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "DM",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "DM",  :
  data source specified as flowline or '' is deprecated
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid, ds_station_poi_ds_flowlines$DM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> # CB stations as spatial object
+ cb_station_sf <- st_as_sf(cb_stations_manual, coords = c("long", "lat"), crs = 4326)
> # make a map
+ prettymapr::prettymap({
+   rosm::osm.plot(project = FALSE,
+                  bbox = matrix(st_bbox(ds_station_poi_streams), byrow = FALSE, ncol = 2,
+                                dimnames = list(c("x", "y"), c("min", "max"))),
+                  type = "cartolight", quiet = TRUE, progress = "none")
+   plot(ds_station_poi_streams$geom, col = "steelblue", lwd = (ds_station_poi_streams$streamorde / 4), add=TRUE)
+   plot(ds_station_poi, add=TRUE, pch=21, bg="orange", cex=1.5)
+   prettymapr::addnortharrow()
+ })
Zoom: 10
Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
Autodetect projection: assuming lat/lon (epsg 4326)
> # loop through each and use lat/long to get NHD flowline comid, then attach comid and nhd data to df
+ cb_station_sf$comid <- c()
+ rm(cb_station_nhd)
> for(i in 1:nrow(cb_station_sf)) {
+
+     ## poi <- c(cb_station_sf$long[i], cb_station_sf$lat[i])
+
+     # turn into spatial object
+     ## cb_station_i <- st_sfc(st_point(poi), crs = 4326)
+     cb_station_i <- cb_station_sf$geometry[i]
+
+
+     # now figure out the nearest stream segment ID to our point
+     hgsite_comid <- discover_nhdplus_id(cb_station_i)
+     print(hgsite_comid)
+
+     # first make a list defining the sourcetype and ID
+     ## hgsite_list <- list(featureSource = "comid",
+     ##                   featureID = hgsite_comid)
+
+   if(!is.null(hgsite_comid)) {
+       cb_station_sf$comid[i] <- hgsite_comid
+       cb_station_i_nhd <- nhdplusTools::get_nhdplus(comid = hgsite_comid)
+
+       if(!exists('cb_station_nhd')) {
+         cb_station_nhd <- cb_station_i_nhd
+       } else {
+         cb_station_nhd <- rbind(cb_station_nhd, cb_station_i_nhd)
+       }
+   } else {
+       cb_station_sf$comid[i] <- NA
+   }
+
+ }
+
+
+ # complete site dataframe
+ cb_station_data <- cb_station_sf %>%
+   st_join(cb_station_nhd)
+ [1] 4539849
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4534575
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4539795
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22340825
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4529659
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532471
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22343523
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4530723
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4534465
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532401
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4539813
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532001
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532203
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22341031
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532451
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22343533
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 22343545
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4534677
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532299
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4532523
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] 4539919
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Warning message:
Unknown or uninitialised column: `comid`.
> > > > + > # reproject all
+ cb_station_proj <- st_transform(cb_station_data, crs = 26910)
> cb_flowlines <- st_transform(ds_station_poi_streams, crs = 26910)
> st_snap_points <- function(x, y, namevar, max_dist = 1000) {
+
+   # this evaluates the length of the data
+   if (inherits(x, "sf")) n = nrow(x)
+   if (inherits(x, "sfc")) n = length(x)
+
+   # this part:
+   # 1. loops through every piece of data (every point)
+   # 2. snaps a point to the nearest line geometries
+   # 3. calculates the distance from point to line geometries
+   # 4. retains only the shortest distances and generates a point at that intersection
+   out = do.call(c,
+                 lapply(seq(n), function(i) {
+                   nrst = st_nearest_points(st_geometry(x)[i], y)
+                   nrst_len = st_length(nrst)
+                   nrst_mn = which.min(nrst_len)
+                   if (as.vector(nrst_len[nrst_mn]) > max_dist) return(st_geometry(x)[i])
+                   return(st_cast(nrst[nrst_mn], "POINT")[2])
+                 })
+   )
+   # this part converts the data to a dataframe and adds a named column of your choice
+   out_xy <- st_coordinates(out) %>% as.data.frame()
+   out_xy <- out_xy %>%
+     mutate({{namevar}} := x[[namevar]]) %>%
+     st_as_sf(coords=c("X","Y"), crs=st_crs(x), remove=FALSE)
+
+   return(out_xy)
+ }
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "identifier",
+                                 max_dist = 25000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > # create a 1 meter buffer around snapped point
+ poi_snapped_buff <-  st_buffer(gages_snapped, 5)
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > mapview(segs)
> # filter, if desired
+ segs_filt <- segs %>%
+   filter(
+       gnis_id != "1552968"
+     )
> mapview(segs_filt, zcol="gnis_name")  +
+   # mapview(segs, color="blue", lwd=0.3) +
+   mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages")
+ > segs_filt_dist <- segs_filt %>%
+   # drop the "loose ends" on either extent (upstream or downstream) of first/last gage
+   # filter(!rowid %in% c(232, 100, 66, 62, 63)) %>%
+   mutate(seg_len_m = units::drop_units(units::set_units(st_length(.), "m")),
+          seg_len_km = seg_len_m/1000) %>%
+   arrange(desc(hydroseq)) %>%
+   mutate(total_len_km = cumsum(seg_len_km)) # %>%
+   # filter to just cols of interest
+   # select(rowid, ogc_fid:comid, gnis_id:reachcode, streamorde, hydroseq, seg_len_km, total_len_km, geom)
> mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   ## mapview(gages_snapped, layer.name="conmon stations") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages")
+ > head(segs_filt_dist)
Simple feature collection with 6 features and 142 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: 4527842 ymin: 5456719 xmax: 4538911 ymax: 5459413
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 6 × 143
  rowid id       comid fdate               resolution gnis_id gnis_name lengthkm
  <int> <chr>    <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1   152 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    5.22
2   177 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.83
3   153 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    0.163
4   154 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
5   155 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
6   156 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
# ℹ 135 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> # reproject all
+ segs_proj <- st_transform(segs_filt_dist, crs = 4326)
> # reproject all
+ segs_df <- st_transform(segs_filt_dist, crs = 4326) %>%
+   stat_sf_coordinates()
Error in `layer_sf()`:
! `mapping` must be created by `aes()`.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # reproject all
+ segs_df <- st_transform(segs_filt_dist, crs = 4326) %>%
+   st_coordinates()
> head(segs_df)
             X        Y L1
[1,] -77.10678 38.92061  1
[2,] -77.10653 38.92063  1
[3,] -77.10321 38.91681  1
[4,] -77.10245 38.91529  1
[5,] -77.10245 38.91338  1
[6,] -77.10130 38.91205  1
> segs_df <- segs_filt_dist %>%
+   st_drop_geometry() %>%
+   mutate(
+     long = segs_xy$X,
+     lat = segs_xy$Y,
+   )
Error in `mutate()`:
ℹ In argument: `long = segs_xy$X`.
Caused by error:
! object 'segs_xy' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # reproject all
+ segs_xy <- st_transform(segs_filt_dist, crs = 4326) %>%
+   st_coordinates()
> segs_df <- segs_filt_dist %>%
+   st_drop_geometry() %>%
+   mutate(
+     long = segs_xy$X,
+     lat = segs_xy$Y,
+   )
Error in `mutate()`:
ℹ In argument: `long = segs_xy$X`.
Caused by error in `segs_xy$X`:
! $ operator is invalid for atomic vectors
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> head(segs_xy)
             X        Y L1
[1,] -77.10678 38.92061  1
[2,] -77.10653 38.92063  1
[3,] -77.10321 38.91681  1
[4,] -77.10245 38.91529  1
[5,] -77.10245 38.91338  1
[6,] -77.10130 38.91205  1
> as.data.frame(segs_xy)
            X        Y  L1
1   -77.10678 38.92061   1
2   -77.10653 38.92063   1
3   -77.10321 38.91681   1
4   -77.10245 38.91529   1
5   -77.10245 38.91338   1
6   -77.10130 38.91205   1
7   -77.09843 38.91033   1
8   -77.09581 38.90827   1
9   -77.09364 38.90705   1
10  -77.08575 38.90417   1
11  -77.08160 38.90353   1
12  -77.07876 38.90360   1
13  -77.07582 38.90340   1
14  -77.06892 38.90246   1
15  -77.06684 38.90150   1
16  -77.06128 38.90051   1
17  -77.05969 38.89963   1
18  -77.05867 38.89845   1
19  -77.05867 38.89845   2
20  -77.05816 38.89531   2
21  -77.05804 38.89262   2
22  -77.05696 38.89105   2
23  -77.05649 38.88907   2
24  -77.05595 38.88796   2
25  -77.05365 38.88531   2
26  -77.05133 38.88342   2
27  -77.04306 38.87756   2
28  -77.04306 38.87756   3
29  -77.04166 38.87657   3
30  -77.04166 38.87657   4
31  -77.03809 38.87373   4
32  -77.03504 38.87019   4
33  -77.03396 38.86838   4
34  -77.03396 38.86838   5
35  -77.03392 38.86831   5
36  -77.03392 38.86831   6
37  -77.03297 38.86669   6
38  -77.03237 38.86392   6
39  -77.03037 38.86080   6
40  -77.03037 38.86080   7
41  -77.03043 38.86056   7
42  -77.02941 38.85938   7
43  -77.02716 38.85470   7
44  -77.02535 38.85212   7
45  -77.02535 38.85212   8
46  -77.02822 38.84123   8
47  -77.02915 38.83959   8
48  -77.02986 38.83753   8
49  -77.03105 38.83619   8
50  -77.03230 38.83205   8
51  -77.03230 38.83205   9
52  -77.03215 38.82948   9
53  -77.03377 38.82208   9
54  -77.03329 38.82073   9
55  -77.03311 38.81765   9
56  -77.03337 38.81667   9
57  -77.03312 38.81446   9
58  -77.03201 38.81174   9
59  -77.03214 38.81061   9
60  -77.03113 38.80753   9
61  -77.03252 38.80163   9
62  -77.03252 38.80163  10
63  -77.03265 38.80050  10
64  -77.03237 38.79905  10
65  -77.03327 38.79563  10
66  -77.03283 38.79288  10
67  -77.03182 38.78979  10
68  -77.03320 38.78453  10
69  -77.03554 38.78260  10
70  -77.03731 38.77650  10
71  -77.03731 38.77650  11
72  -77.03643 38.77038  11
73  -77.03795 38.76462  11
74  -77.03681 38.76202  11
75  -77.03720 38.75864  11
76  -77.03670 38.75614  11
77  -77.03638 38.75482  11
78  -77.03638 38.75482  12
79  -77.03594 38.75399  12
80  -77.03566 38.74999  12
81  -77.03350 38.74749  12
82  -77.03412 38.74453  12
83  -77.03412 38.74453  13
84  -77.03544 38.73951  13
85  -77.03525 38.73769  13
86  -77.03564 38.73432  13
87  -77.03536 38.73287  13
88  -77.03607 38.72827  13
89  -77.03602 38.72596  13
90  -77.03647 38.72425  13
91  -77.03670 38.72148  13
92  -77.03767 38.71781  13
93  -77.03856 38.71629  13
94  -77.04022 38.71502  13
95  -77.04096 38.71412  13
96  -77.04224 38.71177  13
97  -77.04256 38.71054  13
98  -77.04366 38.70884  13
99  -77.04366 38.70884  14
100 -77.04368 38.70880  14
101 -77.04372 38.70878  14
102 -77.04372 38.70878  15
103 -77.04656 38.70734  15
104 -77.04656 38.70734  16
105 -77.05169 38.70482  16
106 -77.05635 38.70351  16
107 -77.05750 38.70292  16
108 -77.06062 38.70302  16
109 -77.06403 38.70266  16
110 -77.06403 38.70266  17
111 -77.06645 38.70291  17
112 -77.06980 38.70279  17
113 -77.07171 38.70245  17
114 -77.07372 38.70238  17
115 -77.08192 38.69830  17
116 -77.08310 38.69823  17
117 -77.08310 38.69823  18
118 -77.08406 38.69774  18
119 -77.08763 38.69677  18
120 -77.08935 38.69589  18
121 -77.08935 38.69589  19
122 -77.09787 38.69249  19
123 -77.10010 38.69220  19
124 -77.10226 38.69152  19
125 -77.10574 38.69091  19
126 -77.11186 38.68778  19
127 -77.11362 38.68487  19
128 -77.11362 38.68487  20
129 -77.11647 38.67906  20
130 -77.11991 38.67603  20
131 -77.12194 38.67382  20
132 -77.12194 38.67382  21
133 -77.12200 38.67376  21
134 -77.12200 38.67376  22
135 -77.12269 38.67302  22
136 -77.12428 38.67072  22
137 -77.12553 38.66785  22
138 -77.12617 38.66722  22
139 -77.12617 38.66722  23
140 -77.12620 38.66719  23
141 -77.12621 38.66716  23
142 -77.12621 38.66716  24
143 -77.12838 38.65887  24
144 -77.12619 38.65521  24
145 -77.12619 38.65521  25
146 -77.12584 38.65501  25
147 -77.12562 38.65487  25
148 -77.12562 38.65487  26
149 -77.12479 38.65360  26
150 -77.12454 38.65139  26
151 -77.12282 38.64781  26
152 -77.12168 38.64330  26
153 -77.12086 38.64203  26
154 -77.12074 38.63934  26
155 -77.12026 38.63735  26
156 -77.12206 38.63049  26
157 -77.12836 38.62727  26
158 -77.12836 38.62727  27
159 -77.12967 38.62670  27
160 -77.13298 38.62607  27
161 -77.13550 38.62531  27
162 -77.14085 38.62321  27
163 -77.14534 38.62250  27
164 -77.14582 38.62258  27
165 -77.14897 38.62192  27
166 -77.15700 38.61781  27
167 -77.16142 38.61671  27
168 -77.16190 38.61678  27
169 -77.16706 38.61605  27
170 -77.16901 38.61572  27
171 -77.16901 38.61572  28
172 -77.19347 38.60843  28
173 -77.19347 38.60843  29
174 -77.19351 38.60841  29
175 -77.19355 38.60839  29
176 -77.19355 38.60839  30
177 -77.22015 38.59216  30
178 -77.22015 38.59216  31
179 -77.22395 38.58636  31
180 -77.22395 38.58636  32
181 -77.22783 38.58097  32
182 -77.22783 38.58097  33
183 -77.22866 38.58033  33
184 -77.22906 38.57941  33
185 -77.22906 38.57941  34
186 -77.22907 38.57938  34
187 -77.22910 38.57935  34
188 -77.22910 38.57935  35
189 -77.23069 38.57759  35
190 -77.23069 38.57759  36
191 -77.23244 38.57595  36
192 -77.24393 38.56167  36
193 -77.24396 38.56123  36
194 -77.24396 38.56123  37
195 -77.24561 38.55900  37
196 -77.24561 38.55900  38
197 -77.24892 38.55454  38
198 -77.25172 38.55204  38
199 -77.25207 38.55133  38
200 -77.25500 38.54834  38
201 -77.25779 38.54584  38
202 -77.25960 38.54459  38
203 -77.26078 38.54325  38
204 -77.26269 38.53590  38
205 -77.26596 38.53283  38
206 -77.26714 38.53085  38
207 -77.26714 38.53021  38
208 -77.26714 38.53021  39
209 -77.26752 38.53002  39
210 -77.26825 38.52879  39
211 -77.26825 38.52879  40
212 -77.26939 38.52725  40
213 -77.26977 38.52705  40
214 -77.27111 38.52191  40
215 -77.27514 38.51718  40
216 -77.27514 38.51718  41
217 -77.27657 38.51422  41
218 -77.27816 38.51191  41
219 -77.27991 38.50836  41
220 -77.28124 38.50640  41
221 -77.28124 38.50640  42
222 -77.28191 38.50510  42
223 -77.28279 38.50231  42
224 -77.28337 38.50138  42
225 -77.28369 38.50013  42
226 -77.28369 38.50013  43
227 -77.28372 38.50003  43
228 -77.28826 38.49334  43
229 -77.28826 38.49334  44
230 -77.28832 38.49310  44
231 -77.29450 38.47622  44
232 -77.29450 38.47622  45
233 -77.29583 38.46744  45
234 -77.29583 38.46744  46
235 -77.29637 38.46390  46
236 -77.29637 38.46390  47
237 -77.29643 38.45640  47
238 -77.29448 38.44883  47
239 -77.29448 38.44883  48
240 -77.29432 38.44562  48
241 -77.29432 38.44562  49
242 -77.28801 38.40682  49
243 -77.28801 38.40682  50
244 -77.28633 38.40376  50
245 -77.28648 38.40315  50
246 -77.28563 38.40200  50
247 -77.28566 38.40124  50
248 -77.28505 38.40038  50
249 -77.28515 38.40002  50
250 -77.28493 38.39896  50
251 -77.28397 38.39627  50
252 -77.27355 38.37658  50
253 -77.27355 38.37658  51
254 -77.26534 38.36847  51
255 -77.26534 38.36847  52
256 -77.26528 38.36841  52
257 -77.26528 38.36841  53
258 -77.25109 38.35439  53
259 -77.25109 38.35439  54
260 -77.24474 38.35336  54
261 -77.24474 38.35336  55
262 -77.22865 38.35085  55
263 -77.22865 38.35085  56
264 -77.22248 38.35022  56
265 -77.22248 38.35022  57
266 -77.20970 38.34990  57
267 -77.20970 38.34990  58
268 -77.20938 38.34985  58
269 -77.20849 38.35010  58
270 -77.20500 38.35019  58
271 -77.20158 38.35068  58
272 -77.20009 38.35071  58
273 -77.19796 38.35127  58
274 -77.19117 38.35200  58
275 -77.18454 38.35339  58
276 -77.18236 38.35357  58
277 -77.17801 38.35506  58
278 -77.16639 38.36103  58
279 -77.16639 38.36103  59
280 -77.16506 38.36171  59
281 -77.16373 38.36304  59
282 -77.16062 38.36485  59
283 -77.15751 38.36729  59
284 -77.15744 38.36754  59
285 -77.15443 38.36962  59
286 -77.15198 38.37204  59
287 -77.15198 38.37204  60
288 -77.14223 38.37715  60
289 -77.13608 38.37862  60
290 -77.13373 38.37940  60
291 -77.13150 38.37969  60
292 -77.13077 38.37996  60
293 -77.12859 38.38013  60
294 -77.12576 38.38084  60
295 -77.12449 38.38128  60
296 -77.11477 38.38627  60
297 -77.11446 38.38622  60
298 -77.11017 38.38810  60
299 -77.10951 38.38823  60
300 -77.10951 38.38823  61
301 -77.10947 38.38824  61
302 -77.10942 38.38824  61
303 -77.10942 38.38824  62
304 -77.10741 38.38792  62
305 -77.10493 38.38792  62
306 -77.10436 38.38821  62
307 -77.10166 38.38780  62
308 -77.10109 38.38809  62
309 -77.09916 38.38791  62
310 -77.09808 38.38826  62
311 -77.09551 38.38798  62
312 -77.09494 38.38828  62
313 -77.09319 38.38801  62
314 -77.08004 38.39475  62
315 -77.08004 38.39475  63
316 -77.07870 38.39543  63
317 -77.07807 38.39661  63
318 -77.07807 38.39661  64
319 -77.07746 38.39702  64
320 -77.07568 38.39879  64
321 -77.07504 38.39996  64
322 -77.07466 38.40016  64
323 -77.07447 38.40089  64
324 -77.07259 38.40302  64
325 -77.07215 38.40410  64
326 -77.07154 38.40451  64
327 -77.07138 38.40512  64
328 -77.07100 38.40532  64
329 -77.07062 38.40615  64
330 -77.06855 38.40774  64
331 -77.05425 38.41507  64
332 -77.05283 38.41559  64
333 -77.05283 38.41559  65
334 -77.05279 38.41561  65
335 -77.05279 38.41561  66
336 -77.05274 38.41559  66
337 -77.05274 38.41559  67
338 -77.02113 38.40786  67
339 -77.02113 38.40786  68
340 -77.01911 38.40551  68
341 -77.01911 38.40551  69
342 -77.00964 38.39449  69
343 -77.00964 38.39449  70
344 -77.00572 38.38993  70
345 -77.00572 38.38993  71
346 -77.00570 38.38990  71
347 -77.00568 38.38987  71
348 -77.00568 38.38987  72
349 -77.00488 38.38799  72
350 -77.00141 38.38235  72
351 -77.00141 38.38235  73
352 -76.99970 38.37941  73
353 -76.99970 38.37939  73
354 -76.99970 38.37939  74
355 -76.99854 38.37629  74
356 -76.99826 38.37485  74
357 -76.99855 38.37247  74
358 -76.99970 38.36811  74
359 -76.99970 38.36811  75
360 -77.00000 38.36696  75
361 -76.99970 38.36600  75
362 -76.99970 38.36600  76
363 -76.99961 38.36572  76
364 -76.99813 38.35650  76
365 -76.99813 38.35650  77
366 -76.99745 38.34902  77
367 -76.99749 38.34770  77
368 -76.99739 38.34546  77
369 -76.99678 38.34040  77
370 -76.99678 38.34040  78
371 -76.99566 38.33506  78
372 -76.99557 38.33489  78
373 -76.99557 38.33489  79
374 -76.99500 38.33381  79
375 -76.99449 38.33264  79
376 -76.99418 38.33190  79
377 -76.99348 38.32972  79
378 -76.99348 38.32972  80
379 -76.99327 38.32908  80
380 -76.99226 38.32727  80
381 -76.99223 38.32675  80
382 -76.98614 38.31965  80
383 -76.98614 38.31965  81
384 -76.97855 38.31080  81
385 -76.97855 38.31080  82
386 -76.97661 38.30854  82
387 -76.97661 38.30854  83
388 -76.97519 38.30687  83
389 -76.97519 38.30687  84
390 -76.96955 38.30382  84
391 -76.96648 38.30033  84
392 -76.96648 38.30033  85
393 -76.96409 38.29760  85
394 -76.96409 38.29760  86
395 -76.96087 38.29393  86
396 -76.96087 38.29393  87
397 -76.95910 38.29192  87
398 -76.95910 38.29192  88
399 -76.95728 38.28951  88
400 -76.95728 38.28951  89
401 -76.95334 38.28583  89
402 -76.95334 38.28583  90
403 -76.95328 38.28578  90
404 -76.95328 38.28578  91
405 -76.94491 38.27798  91
406 -76.93849 38.27271  91
407 -76.93849 38.27271  92
408 -76.93842 38.27266  92
409 -76.93842 38.27266  93
410 -76.92713 38.26340  93
411 -76.92713 38.26340  94
412 -76.92542 38.26222  94
413 -76.92184 38.25835  94
414 -76.92184 38.25835  95
415 -76.92183 38.25834  95
416 -76.92084 38.25730  95
417 -76.92084 38.25730  96
418 -76.92078 38.25724  96
419 -76.92078 38.25724  97
420 -76.91882 38.25517  97
421 -76.91882 38.25517  98
422 -76.91757 38.25385  98
423 -76.91284 38.24832  98
424 -76.91284 38.24832  99
425 -76.91045 38.24554  99
426 -76.90557 38.24072  99
427 -76.90557 38.24072 100
428 -76.90302 38.23911 100
429 -76.90084 38.23781 100
430 -76.89846 38.23658 100
431 -76.89516 38.23448 100
432 -76.89516 38.23448 101
433 -76.89425 38.23407 101
434 -76.89316 38.23365 101
435 -76.89114 38.23275 101
436 -76.88905 38.23202 101
437 -76.88905 38.23202 102
438 -76.88904 38.23202 102
439 -76.88550 38.23044 102
440 -76.88323 38.22906 102
441 -76.88243 38.22860 102
442 -76.88243 38.22860 103
443 -76.88080 38.22766 103
444 -76.88080 38.22766 104
445 -76.87707 38.22554 104
446 -76.87398 38.22352 104
447 -76.86278 38.21753 104
448 -76.86278 38.21753 105
449 -76.85810 38.21502 105
450 -76.85810 38.21502 106
451 -76.85421 38.21415 106
452 -76.84331 38.21052 106
453 -76.83629 38.20839 106
454 -76.83597 38.20834 106
455 -76.83590 38.20831 106
456 -76.83590 38.20831 107
457 -76.83070 38.20648 107
458 -76.82944 38.20565 107
459 -76.82944 38.20565 108
460 -76.82701 38.20526 108
461 -76.82701 38.20526 109
462 -76.81669 38.20363 109
463 -76.81669 38.20363 110
464 -76.81267 38.20299 110
465 -76.81267 38.20299 111
466 -76.79364 38.19990 111
467 -76.79364 38.19990 112
468 -76.78852 38.19907 112
469 -76.78852 38.19907 113
470 -76.78199 38.19797 113
471 -76.78029 38.19743 113
472 -76.77811 38.19626 113
473 -76.77811 38.19626 114
474 -76.77650 38.19512 114
475 -76.77650 38.19512 115
476 -76.77361 38.19374 115
477 -76.77361 38.19374 116
478 -76.76925 38.19215 116
479 -76.76581 38.19084 116
480 -76.76092 38.18908 116
481 -76.75674 38.18752 116
482 -76.75674 38.18752 117
483 -76.75674 38.18753 117
484 -76.73990 38.18481 117
485 -76.73990 38.18481 118
486 -76.73212 38.18370 118
487 -76.72556 38.18316 118
488 -76.72556 38.18316 119
489 -76.72551 38.18316 119
490 -76.72547 38.18317 119
491 -76.72547 38.18317 120
492 -76.72393 38.18354 120
493 -76.72041 38.18502 120
494 -76.71443 38.18807 120
495 -76.71443 38.18807 121
496 -76.70693 38.19189 121
497 -76.70693 38.19189 122
498 -76.70035 38.19525 122
499 -76.70035 38.19525 123
500 -76.69868 38.19610 123
501 -76.69820 38.19602 123
502 -76.69706 38.19661 123
503 -76.69295 38.19595 123
504 -76.69236 38.19603 123
505 -76.69236 38.19603 124
506 -76.69210 38.19607 124
507 -76.68743 38.19534 124
508 -76.68743 38.19534 125
509 -76.68734 38.19532 125
510 -76.68734 38.19532 126
511 -76.65319 38.18996 126
512 -76.65319 38.18996 127
513 -76.64345 38.18844 127
514 -76.64345 38.18844 128
515 -76.64133 38.18809 128
516 -76.64133 38.18809 129
517 -76.63885 38.18795 129
518 -76.63885 38.18795 130
519 -76.63298 38.18701 130
520 -76.63298 38.18701 131
521 -76.62810 38.18623 131
522 -76.62810 38.18623 132
523 -76.62059 38.18497 132
524 -76.60831 38.18217 132
525 -76.60831 38.18217 133
526 -76.60182 38.17934 133
527 -76.60182 38.17934 134
528 -76.59960 38.17891 134
529 -76.59960 38.17891 135
530 -76.59821 38.17864 135
531 -76.59728 38.17819 135
532 -76.59614 38.17755 135
533 -76.59501 38.17693 135
534 -76.59387 38.17578 135
535 -76.59387 38.17578 136
536 -76.58850 38.16950 136
537 -76.58850 38.16950 137
538 -76.58493 38.16533 137
539 -76.58493 38.16533 138
540 -76.58265 38.16267 138
541 -76.58265 38.16267 139
542 -76.58260 38.16261 139
543 -76.58260 38.16261 140
544 -76.57831 38.15759 140
545 -76.57831 38.15759 141
546 -76.57725 38.15602 141
547 -76.57690 38.15499 141
548 -76.57690 38.15499 142
549 -76.57651 38.15386 142
550 -76.57602 38.15199 142
551 -76.57479 38.14797 142
552 -76.57479 38.14797 143
553 -76.57391 38.14387 143
554 -76.57249 38.13994 143
555 -76.57249 38.13994 144
556 -76.57227 38.13985 144
557 -76.56947 38.13525 144
558 -76.56699 38.13064 144
559 -76.56699 38.13064 145
560 -76.56667 38.12970 145
561 -76.56535 38.12814 145
562 -76.56535 38.12814 146
563 -76.56446 38.12708 146
564 -76.56446 38.12708 147
565 -76.56207 38.12426 147
566 -76.56207 38.12426 148
567 -76.55880 38.12041 148
568 -76.55880 38.12041 149
569 -76.55875 38.12035 149
570 -76.55875 38.12035 150
571 -76.55752 38.11890 150
572 -76.55752 38.11890 151
573 -76.55275 38.11375 151
574 -76.55275 38.11375 152
575 -76.55223 38.11334 152
576 -76.55223 38.11334 153
577 -76.55083 38.11261 153
578 -76.55083 38.11261 154
579 -76.54882 38.11152 154
580 -76.54790 38.11124 154
581 -76.54703 38.11021 154
582 -76.54116 38.10939 154
583 -76.54116 38.10939 155
584 -76.53644 38.10750 155
585 -76.53644 38.10750 156
586 -76.53640 38.10748 156
587 -76.53637 38.10745 156
588 -76.53637 38.10745 157
589 -76.53606 38.10707 157
590 -76.53606 38.10707 158
591 -76.52968 38.10211 158
592 -76.52968 38.10211 159
593 -76.52961 38.10206 159
594 -76.52961 38.10206 160
595 -76.49205 38.07277 160
596 -76.48954 38.07042 160
597 -76.48954 38.07042 161
598 -76.48948 38.07036 161
599 -76.48948 38.07036 162
600 -76.48942 38.07031 162
601 -76.48028 38.06577 162
602 -76.47754 38.06431 162
603 -76.47449 38.06279 162
604 -76.46500 38.06123 162
605 -76.46500 38.06123 163
606 -76.45028 38.05879 163
607 -76.45028 38.05879 164
608 -76.44644 38.05816 164
609 -76.44644 38.05816 165
610 -76.43778 38.05673 165
611 -76.43423 38.05526 165
612 -76.43181 38.05385 165
613 -76.42839 38.05169 165
614 -76.42839 38.05169 166
615 -76.42745 38.05110 166
616 -76.42441 38.04895 166
617 -76.42441 38.04895 167
618 -76.42432 38.04874 167
619 -76.42116 38.04494 167
620 -76.42116 38.04494 168
621 -76.42033 38.04395 168
622 -76.42033 38.04395 169
623 -76.41581 38.03875 169
624 -76.41581 38.03875 170
625 -76.41271 38.03504 170
626 -76.41271 38.03504 171
627 -76.40971 38.03145 171
628 -76.40971 38.03145 172
629 -76.40664 38.02776 172
630 -76.40664 38.02776 173
631 -76.40225 38.02251 173
632 -76.40043 38.02139 173
633 -76.40043 38.02139 174
634 -76.40000 38.02113 174
635 -76.39258 38.01667 174
636 -76.39258 38.01667 175
637 -76.38186 38.01001 175
638 -76.38186 38.01001 176
639 -76.37632 38.00739 176
640 -76.37324 38.00631 176
641 -76.37324 38.00631 177
642 -76.36779 38.00275 177
643 -76.36779 38.00275 178
644 -76.36770 38.00266 178
645 -76.36457 38.00192 178
646 -76.35476 38.00150 178
647 -76.35192 38.00143 178
648 -76.35192 38.00143 179
649 -76.34088 38.00117 179
650 -76.34088 38.00117 180
651 -76.32748 38.00085 180
652 -76.32748 38.00085 181
653 -76.29815 38.00014 181
> as.data.frame(segs_xy)$X
  [1] -77.10678 -77.10653 -77.10321 -77.10245 -77.10245 -77.10130 -77.09843
  [8] -77.09581 -77.09364 -77.08575 -77.08160 -77.07876 -77.07582 -77.06892
 [15] -77.06684 -77.06128 -77.05969 -77.05867 -77.05867 -77.05816 -77.05804
 [22] -77.05696 -77.05649 -77.05595 -77.05365 -77.05133 -77.04306 -77.04306
 [29] -77.04166 -77.04166 -77.03809 -77.03504 -77.03396 -77.03396 -77.03392
 [36] -77.03392 -77.03297 -77.03237 -77.03037 -77.03037 -77.03043 -77.02941
 [43] -77.02716 -77.02535 -77.02535 -77.02822 -77.02915 -77.02986 -77.03105
 [50] -77.03230 -77.03230 -77.03215 -77.03377 -77.03329 -77.03311 -77.03337
 [57] -77.03312 -77.03201 -77.03214 -77.03113 -77.03252 -77.03252 -77.03265
 [64] -77.03237 -77.03327 -77.03283 -77.03182 -77.03320 -77.03554 -77.03731
 [71] -77.03731 -77.03643 -77.03795 -77.03681 -77.03720 -77.03670 -77.03638
 [78] -77.03638 -77.03594 -77.03566 -77.03350 -77.03412 -77.03412 -77.03544
 [85] -77.03525 -77.03564 -77.03536 -77.03607 -77.03602 -77.03647 -77.03670
 [92] -77.03767 -77.03856 -77.04022 -77.04096 -77.04224 -77.04256 -77.04366
 [99] -77.04366 -77.04368 -77.04372 -77.04372 -77.04656 -77.04656 -77.05169
[106] -77.05635 -77.05750 -77.06062 -77.06403 -77.06403 -77.06645 -77.06980
[113] -77.07171 -77.07372 -77.08192 -77.08310 -77.08310 -77.08406 -77.08763
[120] -77.08935 -77.08935 -77.09787 -77.10010 -77.10226 -77.10574 -77.11186
[127] -77.11362 -77.11362 -77.11647 -77.11991 -77.12194 -77.12194 -77.12200
[134] -77.12200 -77.12269 -77.12428 -77.12553 -77.12617 -77.12617 -77.12620
[141] -77.12621 -77.12621 -77.12838 -77.12619 -77.12619 -77.12584 -77.12562
[148] -77.12562 -77.12479 -77.12454 -77.12282 -77.12168 -77.12086 -77.12074
[155] -77.12026 -77.12206 -77.12836 -77.12836 -77.12967 -77.13298 -77.13550
[162] -77.14085 -77.14534 -77.14582 -77.14897 -77.15700 -77.16142 -77.16190
[169] -77.16706 -77.16901 -77.16901 -77.19347 -77.19347 -77.19351 -77.19355
[176] -77.19355 -77.22015 -77.22015 -77.22395 -77.22395 -77.22783 -77.22783
[183] -77.22866 -77.22906 -77.22906 -77.22907 -77.22910 -77.22910 -77.23069
[190] -77.23069 -77.23244 -77.24393 -77.24396 -77.24396 -77.24561 -77.24561
[197] -77.24892 -77.25172 -77.25207 -77.25500 -77.25779 -77.25960 -77.26078
[204] -77.26269 -77.26596 -77.26714 -77.26714 -77.26714 -77.26752 -77.26825
[211] -77.26825 -77.26939 -77.26977 -77.27111 -77.27514 -77.27514 -77.27657
[218] -77.27816 -77.27991 -77.28124 -77.28124 -77.28191 -77.28279 -77.28337
[225] -77.28369 -77.28369 -77.28372 -77.28826 -77.28826 -77.28832 -77.29450
[232] -77.29450 -77.29583 -77.29583 -77.29637 -77.29637 -77.29643 -77.29448
[239] -77.29448 -77.29432 -77.29432 -77.28801 -77.28801 -77.28633 -77.28648
[246] -77.28563 -77.28566 -77.28505 -77.28515 -77.28493 -77.28397 -77.27355
[253] -77.27355 -77.26534 -77.26534 -77.26528 -77.26528 -77.25109 -77.25109
[260] -77.24474 -77.24474 -77.22865 -77.22865 -77.22248 -77.22248 -77.20970
[267] -77.20970 -77.20938 -77.20849 -77.20500 -77.20158 -77.20009 -77.19796
[274] -77.19117 -77.18454 -77.18236 -77.17801 -77.16639 -77.16639 -77.16506
[281] -77.16373 -77.16062 -77.15751 -77.15744 -77.15443 -77.15198 -77.15198
[288] -77.14223 -77.13608 -77.13373 -77.13150 -77.13077 -77.12859 -77.12576
[295] -77.12449 -77.11477 -77.11446 -77.11017 -77.10951 -77.10951 -77.10947
[302] -77.10942 -77.10942 -77.10741 -77.10493 -77.10436 -77.10166 -77.10109
[309] -77.09916 -77.09808 -77.09551 -77.09494 -77.09319 -77.08004 -77.08004
[316] -77.07870 -77.07807 -77.07807 -77.07746 -77.07568 -77.07504 -77.07466
[323] -77.07447 -77.07259 -77.07215 -77.07154 -77.07138 -77.07100 -77.07062
[330] -77.06855 -77.05425 -77.05283 -77.05283 -77.05279 -77.05279 -77.05274
[337] -77.05274 -77.02113 -77.02113 -77.01911 -77.01911 -77.00964 -77.00964
[344] -77.00572 -77.00572 -77.00570 -77.00568 -77.00568 -77.00488 -77.00141
[351] -77.00141 -76.99970 -76.99970 -76.99970 -76.99854 -76.99826 -76.99855
[358] -76.99970 -76.99970 -77.00000 -76.99970 -76.99970 -76.99961 -76.99813
[365] -76.99813 -76.99745 -76.99749 -76.99739 -76.99678 -76.99678 -76.99566
[372] -76.99557 -76.99557 -76.99500 -76.99449 -76.99418 -76.99348 -76.99348
[379] -76.99327 -76.99226 -76.99223 -76.98614 -76.98614 -76.97855 -76.97855
[386] -76.97661 -76.97661 -76.97519 -76.97519 -76.96955 -76.96648 -76.96648
[393] -76.96409 -76.96409 -76.96087 -76.96087 -76.95910 -76.95910 -76.95728
[400] -76.95728 -76.95334 -76.95334 -76.95328 -76.95328 -76.94491 -76.93849
[407] -76.93849 -76.93842 -76.93842 -76.92713 -76.92713 -76.92542 -76.92184
[414] -76.92184 -76.92183 -76.92084 -76.92084 -76.92078 -76.92078 -76.91882
[421] -76.91882 -76.91757 -76.91284 -76.91284 -76.91045 -76.90557 -76.90557
[428] -76.90302 -76.90084 -76.89846 -76.89516 -76.89516 -76.89425 -76.89316
[435] -76.89114 -76.88905 -76.88905 -76.88904 -76.88550 -76.88323 -76.88243
[442] -76.88243 -76.88080 -76.88080 -76.87707 -76.87398 -76.86278 -76.86278
[449] -76.85810 -76.85810 -76.85421 -76.84331 -76.83629 -76.83597 -76.83590
[456] -76.83590 -76.83070 -76.82944 -76.82944 -76.82701 -76.82701 -76.81669
[463] -76.81669 -76.81267 -76.81267 -76.79364 -76.79364 -76.78852 -76.78852
[470] -76.78199 -76.78029 -76.77811 -76.77811 -76.77650 -76.77650 -76.77361
[477] -76.77361 -76.76925 -76.76581 -76.76092 -76.75674 -76.75674 -76.75674
[484] -76.73990 -76.73990 -76.73212 -76.72556 -76.72556 -76.72551 -76.72547
[491] -76.72547 -76.72393 -76.72041 -76.71443 -76.71443 -76.70693 -76.70693
[498] -76.70035 -76.70035 -76.69868 -76.69820 -76.69706 -76.69295 -76.69236
[505] -76.69236 -76.69210 -76.68743 -76.68743 -76.68734 -76.68734 -76.65319
[512] -76.65319 -76.64345 -76.64345 -76.64133 -76.64133 -76.63885 -76.63885
[519] -76.63298 -76.63298 -76.62810 -76.62810 -76.62059 -76.60831 -76.60831
[526] -76.60182 -76.60182 -76.59960 -76.59960 -76.59821 -76.59728 -76.59614
[533] -76.59501 -76.59387 -76.59387 -76.58850 -76.58850 -76.58493 -76.58493
[540] -76.58265 -76.58265 -76.58260 -76.58260 -76.57831 -76.57831 -76.57725
[547] -76.57690 -76.57690 -76.57651 -76.57602 -76.57479 -76.57479 -76.57391
[554] -76.57249 -76.57249 -76.57227 -76.56947 -76.56699 -76.56699 -76.56667
[561] -76.56535 -76.56535 -76.56446 -76.56446 -76.56207 -76.56207 -76.55880
[568] -76.55880 -76.55875 -76.55875 -76.55752 -76.55752 -76.55275 -76.55275
[575] -76.55223 -76.55223 -76.55083 -76.55083 -76.54882 -76.54790 -76.54703
[582] -76.54116 -76.54116 -76.53644 -76.53644 -76.53640 -76.53637 -76.53637
[589] -76.53606 -76.53606 -76.52968 -76.52968 -76.52961 -76.52961 -76.49205
[596] -76.48954 -76.48954 -76.48948 -76.48948 -76.48942 -76.48028 -76.47754
[603] -76.47449 -76.46500 -76.46500 -76.45028 -76.45028 -76.44644 -76.44644
[610] -76.43778 -76.43423 -76.43181 -76.42839 -76.42839 -76.42745 -76.42441
[617] -76.42441 -76.42432 -76.42116 -76.42116 -76.42033 -76.42033 -76.41581
[624] -76.41581 -76.41271 -76.41271 -76.40971 -76.40971 -76.40664 -76.40664
[631] -76.40225 -76.40043 -76.40043 -76.40000 -76.39258 -76.39258 -76.38186
[638] -76.38186 -76.37632 -76.37324 -76.37324 -76.36779 -76.36779 -76.36770
[645] -76.36457 -76.35476 -76.35192 -76.35192 -76.34088 -76.34088 -76.32748
[652] -76.32748 -76.29815
> # reproject all
+ segs_xy <- st_transform(segs_filt_dist, crs = 4326) %>%
+   st_coordinates() %>%
+   as.data.frame()
> segs_df <- segs_filt_dist %>%
+   st_drop_geometry() %>%
+   mutate(
+     long = segs_xy$X,
+     lat = segs_xy$Y,
+   )
Error in `mutate()`:
ℹ In argument: `long = segs_xy$X`.
Caused by error:
! `long` must be size 181 or 1, not 653.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # reproject all
+ segs_xy <- st_transform(segs_filt_dist, crs = 4326) %>%
+   st_coordinates()
> head(segs_xy)
             X        Y L1
[1,] -77.10678 38.92061  1
[2,] -77.10653 38.92063  1
[3,] -77.10321 38.91681  1
[4,] -77.10245 38.91529  1
[5,] -77.10245 38.91338  1
[6,] -77.10130 38.91205  1
> # reproject all
+ segs_xy <- st_transform(segs_filt_dist, crs = 4326) %>%
+   st_coordinates() %>%
+   st_drop_geometry()
> head(segs_xy)
             X        Y L1
[1,] -77.10678 38.92061  1
[2,] -77.10653 38.92063  1
[3,] -77.10321 38.91681  1
[4,] -77.10245 38.91529  1
[5,] -77.10245 38.91338  1
[6,] -77.10130 38.91205  1
> head(segs_xy$X)
Error in segs_xy$X : $ operator is invalid for atomic vectors
> head(segs_xy$X[1,])
Error in segs_xy$X : $ operator is invalid for atomic vectors
> segs_xy[1,]
        X         Y        L1
-77.10678  38.92061   1.00000
> segs_xy[1,2]
       Y
38.92061
> segs_xy[,1]
  [1] -77.10678 -77.10653 -77.10321 -77.10245 -77.10245 -77.10130 -77.09843
  [8] -77.09581 -77.09364 -77.08575 -77.08160 -77.07876 -77.07582 -77.06892
 [15] -77.06684 -77.06128 -77.05969 -77.05867 -77.05867 -77.05816 -77.05804
 [22] -77.05696 -77.05649 -77.05595 -77.05365 -77.05133 -77.04306 -77.04306
 [29] -77.04166 -77.04166 -77.03809 -77.03504 -77.03396 -77.03396 -77.03392
 [36] -77.03392 -77.03297 -77.03237 -77.03037 -77.03037 -77.03043 -77.02941
 [43] -77.02716 -77.02535 -77.02535 -77.02822 -77.02915 -77.02986 -77.03105
 [50] -77.03230 -77.03230 -77.03215 -77.03377 -77.03329 -77.03311 -77.03337
 [57] -77.03312 -77.03201 -77.03214 -77.03113 -77.03252 -77.03252 -77.03265
 [64] -77.03237 -77.03327 -77.03283 -77.03182 -77.03320 -77.03554 -77.03731
 [71] -77.03731 -77.03643 -77.03795 -77.03681 -77.03720 -77.03670 -77.03638
 [78] -77.03638 -77.03594 -77.03566 -77.03350 -77.03412 -77.03412 -77.03544
 [85] -77.03525 -77.03564 -77.03536 -77.03607 -77.03602 -77.03647 -77.03670
 [92] -77.03767 -77.03856 -77.04022 -77.04096 -77.04224 -77.04256 -77.04366
 [99] -77.04366 -77.04368 -77.04372 -77.04372 -77.04656 -77.04656 -77.05169
[106] -77.05635 -77.05750 -77.06062 -77.06403 -77.06403 -77.06645 -77.06980
[113] -77.07171 -77.07372 -77.08192 -77.08310 -77.08310 -77.08406 -77.08763
[120] -77.08935 -77.08935 -77.09787 -77.10010 -77.10226 -77.10574 -77.11186
[127] -77.11362 -77.11362 -77.11647 -77.11991 -77.12194 -77.12194 -77.12200
[134] -77.12200 -77.12269 -77.12428 -77.12553 -77.12617 -77.12617 -77.12620
[141] -77.12621 -77.12621 -77.12838 -77.12619 -77.12619 -77.12584 -77.12562
[148] -77.12562 -77.12479 -77.12454 -77.12282 -77.12168 -77.12086 -77.12074
[155] -77.12026 -77.12206 -77.12836 -77.12836 -77.12967 -77.13298 -77.13550
[162] -77.14085 -77.14534 -77.14582 -77.14897 -77.15700 -77.16142 -77.16190
[169] -77.16706 -77.16901 -77.16901 -77.19347 -77.19347 -77.19351 -77.19355
[176] -77.19355 -77.22015 -77.22015 -77.22395 -77.22395 -77.22783 -77.22783
[183] -77.22866 -77.22906 -77.22906 -77.22907 -77.22910 -77.22910 -77.23069
[190] -77.23069 -77.23244 -77.24393 -77.24396 -77.24396 -77.24561 -77.24561
[197] -77.24892 -77.25172 -77.25207 -77.25500 -77.25779 -77.25960 -77.26078
[204] -77.26269 -77.26596 -77.26714 -77.26714 -77.26714 -77.26752 -77.26825
[211] -77.26825 -77.26939 -77.26977 -77.27111 -77.27514 -77.27514 -77.27657
[218] -77.27816 -77.27991 -77.28124 -77.28124 -77.28191 -77.28279 -77.28337
[225] -77.28369 -77.28369 -77.28372 -77.28826 -77.28826 -77.28832 -77.29450
[232] -77.29450 -77.29583 -77.29583 -77.29637 -77.29637 -77.29643 -77.29448
[239] -77.29448 -77.29432 -77.29432 -77.28801 -77.28801 -77.28633 -77.28648
[246] -77.28563 -77.28566 -77.28505 -77.28515 -77.28493 -77.28397 -77.27355
[253] -77.27355 -77.26534 -77.26534 -77.26528 -77.26528 -77.25109 -77.25109
[260] -77.24474 -77.24474 -77.22865 -77.22865 -77.22248 -77.22248 -77.20970
[267] -77.20970 -77.20938 -77.20849 -77.20500 -77.20158 -77.20009 -77.19796
[274] -77.19117 -77.18454 -77.18236 -77.17801 -77.16639 -77.16639 -77.16506
[281] -77.16373 -77.16062 -77.15751 -77.15744 -77.15443 -77.15198 -77.15198
[288] -77.14223 -77.13608 -77.13373 -77.13150 -77.13077 -77.12859 -77.12576
[295] -77.12449 -77.11477 -77.11446 -77.11017 -77.10951 -77.10951 -77.10947
[302] -77.10942 -77.10942 -77.10741 -77.10493 -77.10436 -77.10166 -77.10109
[309] -77.09916 -77.09808 -77.09551 -77.09494 -77.09319 -77.08004 -77.08004
[316] -77.07870 -77.07807 -77.07807 -77.07746 -77.07568 -77.07504 -77.07466
[323] -77.07447 -77.07259 -77.07215 -77.07154 -77.07138 -77.07100 -77.07062
[330] -77.06855 -77.05425 -77.05283 -77.05283 -77.05279 -77.05279 -77.05274
[337] -77.05274 -77.02113 -77.02113 -77.01911 -77.01911 -77.00964 -77.00964
[344] -77.00572 -77.00572 -77.00570 -77.00568 -77.00568 -77.00488 -77.00141
[351] -77.00141 -76.99970 -76.99970 -76.99970 -76.99854 -76.99826 -76.99855
[358] -76.99970 -76.99970 -77.00000 -76.99970 -76.99970 -76.99961 -76.99813
[365] -76.99813 -76.99745 -76.99749 -76.99739 -76.99678 -76.99678 -76.99566
[372] -76.99557 -76.99557 -76.99500 -76.99449 -76.99418 -76.99348 -76.99348
[379] -76.99327 -76.99226 -76.99223 -76.98614 -76.98614 -76.97855 -76.97855
[386] -76.97661 -76.97661 -76.97519 -76.97519 -76.96955 -76.96648 -76.96648
[393] -76.96409 -76.96409 -76.96087 -76.96087 -76.95910 -76.95910 -76.95728
[400] -76.95728 -76.95334 -76.95334 -76.95328 -76.95328 -76.94491 -76.93849
[407] -76.93849 -76.93842 -76.93842 -76.92713 -76.92713 -76.92542 -76.92184
[414] -76.92184 -76.92183 -76.92084 -76.92084 -76.92078 -76.92078 -76.91882
[421] -76.91882 -76.91757 -76.91284 -76.91284 -76.91045 -76.90557 -76.90557
[428] -76.90302 -76.90084 -76.89846 -76.89516 -76.89516 -76.89425 -76.89316
[435] -76.89114 -76.88905 -76.88905 -76.88904 -76.88550 -76.88323 -76.88243
[442] -76.88243 -76.88080 -76.88080 -76.87707 -76.87398 -76.86278 -76.86278
[449] -76.85810 -76.85810 -76.85421 -76.84331 -76.83629 -76.83597 -76.83590
[456] -76.83590 -76.83070 -76.82944 -76.82944 -76.82701 -76.82701 -76.81669
[463] -76.81669 -76.81267 -76.81267 -76.79364 -76.79364 -76.78852 -76.78852
[470] -76.78199 -76.78029 -76.77811 -76.77811 -76.77650 -76.77650 -76.77361
[477] -76.77361 -76.76925 -76.76581 -76.76092 -76.75674 -76.75674 -76.75674
[484] -76.73990 -76.73990 -76.73212 -76.72556 -76.72556 -76.72551 -76.72547
[491] -76.72547 -76.72393 -76.72041 -76.71443 -76.71443 -76.70693 -76.70693
[498] -76.70035 -76.70035 -76.69868 -76.69820 -76.69706 -76.69295 -76.69236
[505] -76.69236 -76.69210 -76.68743 -76.68743 -76.68734 -76.68734 -76.65319
[512] -76.65319 -76.64345 -76.64345 -76.64133 -76.64133 -76.63885 -76.63885
[519] -76.63298 -76.63298 -76.62810 -76.62810 -76.62059 -76.60831 -76.60831
[526] -76.60182 -76.60182 -76.59960 -76.59960 -76.59821 -76.59728 -76.59614
[533] -76.59501 -76.59387 -76.59387 -76.58850 -76.58850 -76.58493 -76.58493
[540] -76.58265 -76.58265 -76.58260 -76.58260 -76.57831 -76.57831 -76.57725
[547] -76.57690 -76.57690 -76.57651 -76.57602 -76.57479 -76.57479 -76.57391
[554] -76.57249 -76.57249 -76.57227 -76.56947 -76.56699 -76.56699 -76.56667
[561] -76.56535 -76.56535 -76.56446 -76.56446 -76.56207 -76.56207 -76.55880
[568] -76.55880 -76.55875 -76.55875 -76.55752 -76.55752 -76.55275 -76.55275
[575] -76.55223 -76.55223 -76.55083 -76.55083 -76.54882 -76.54790 -76.54703
[582] -76.54116 -76.54116 -76.53644 -76.53644 -76.53640 -76.53637 -76.53637
[589] -76.53606 -76.53606 -76.52968 -76.52968 -76.52961 -76.52961 -76.49205
[596] -76.48954 -76.48954 -76.48948 -76.48948 -76.48942 -76.48028 -76.47754
[603] -76.47449 -76.46500 -76.46500 -76.45028 -76.45028 -76.44644 -76.44644
[610] -76.43778 -76.43423 -76.43181 -76.42839 -76.42839 -76.42745 -76.42441
[617] -76.42441 -76.42432 -76.42116 -76.42116 -76.42033 -76.42033 -76.41581
[624] -76.41581 -76.41271 -76.41271 -76.40971 -76.40971 -76.40664 -76.40664
[631] -76.40225 -76.40043 -76.40043 -76.40000 -76.39258 -76.39258 -76.38186
[638] -76.38186 -76.37632 -76.37324 -76.37324 -76.36779 -76.36779 -76.36770
[645] -76.36457 -76.35476 -76.35192 -76.35192 -76.34088 -76.34088 -76.32748
[652] -76.32748 -76.29815
> segs_df <- segs_filt_dist %>%
+   st_drop_geometry() %>%
+   mutate(
+     long = segs_xy[,1],
+     lat = segs_xy[,2],
+   )
Error in `mutate()`:
ℹ In argument: `long = segs_xy[, 1]`.
Caused by error:
! `long` must be size 181 or 1, not 653.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # reproject all
+ segs_xy <- st_transform(segs_filt_dist, crs = 4326) %>%
+   st_coordinates()
> segs_df <- segs_filt_dist %>%
+   st_drop_geometry() %>%
+   mutate(
+     long = segs_xy[,1],
+     lat = segs_xy[,2],
+   )
Error in `mutate()`:
ℹ In argument: `long = segs_xy[, 1]`.
Caused by error:
! `long` must be size 181 or 1, not 653.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # reproject all
+ segs_xy <- st_transform(segs_filt_dist, crs = 4326) %>%
+   st_coordinates()
> segs_xy[,1]
  [1] -77.10678 -77.10653 -77.10321 -77.10245 -77.10245 -77.10130 -77.09843
  [8] -77.09581 -77.09364 -77.08575 -77.08160 -77.07876 -77.07582 -77.06892
 [15] -77.06684 -77.06128 -77.05969 -77.05867 -77.05867 -77.05816 -77.05804
 [22] -77.05696 -77.05649 -77.05595 -77.05365 -77.05133 -77.04306 -77.04306
 [29] -77.04166 -77.04166 -77.03809 -77.03504 -77.03396 -77.03396 -77.03392
 [36] -77.03392 -77.03297 -77.03237 -77.03037 -77.03037 -77.03043 -77.02941
 [43] -77.02716 -77.02535 -77.02535 -77.02822 -77.02915 -77.02986 -77.03105
 [50] -77.03230 -77.03230 -77.03215 -77.03377 -77.03329 -77.03311 -77.03337
 [57] -77.03312 -77.03201 -77.03214 -77.03113 -77.03252 -77.03252 -77.03265
 [64] -77.03237 -77.03327 -77.03283 -77.03182 -77.03320 -77.03554 -77.03731
 [71] -77.03731 -77.03643 -77.03795 -77.03681 -77.03720 -77.03670 -77.03638
 [78] -77.03638 -77.03594 -77.03566 -77.03350 -77.03412 -77.03412 -77.03544
 [85] -77.03525 -77.03564 -77.03536 -77.03607 -77.03602 -77.03647 -77.03670
 [92] -77.03767 -77.03856 -77.04022 -77.04096 -77.04224 -77.04256 -77.04366
 [99] -77.04366 -77.04368 -77.04372 -77.04372 -77.04656 -77.04656 -77.05169
[106] -77.05635 -77.05750 -77.06062 -77.06403 -77.06403 -77.06645 -77.06980
[113] -77.07171 -77.07372 -77.08192 -77.08310 -77.08310 -77.08406 -77.08763
[120] -77.08935 -77.08935 -77.09787 -77.10010 -77.10226 -77.10574 -77.11186
[127] -77.11362 -77.11362 -77.11647 -77.11991 -77.12194 -77.12194 -77.12200
[134] -77.12200 -77.12269 -77.12428 -77.12553 -77.12617 -77.12617 -77.12620
[141] -77.12621 -77.12621 -77.12838 -77.12619 -77.12619 -77.12584 -77.12562
[148] -77.12562 -77.12479 -77.12454 -77.12282 -77.12168 -77.12086 -77.12074
[155] -77.12026 -77.12206 -77.12836 -77.12836 -77.12967 -77.13298 -77.13550
[162] -77.14085 -77.14534 -77.14582 -77.14897 -77.15700 -77.16142 -77.16190
[169] -77.16706 -77.16901 -77.16901 -77.19347 -77.19347 -77.19351 -77.19355
[176] -77.19355 -77.22015 -77.22015 -77.22395 -77.22395 -77.22783 -77.22783
[183] -77.22866 -77.22906 -77.22906 -77.22907 -77.22910 -77.22910 -77.23069
[190] -77.23069 -77.23244 -77.24393 -77.24396 -77.24396 -77.24561 -77.24561
[197] -77.24892 -77.25172 -77.25207 -77.25500 -77.25779 -77.25960 -77.26078
[204] -77.26269 -77.26596 -77.26714 -77.26714 -77.26714 -77.26752 -77.26825
[211] -77.26825 -77.26939 -77.26977 -77.27111 -77.27514 -77.27514 -77.27657
[218] -77.27816 -77.27991 -77.28124 -77.28124 -77.28191 -77.28279 -77.28337
[225] -77.28369 -77.28369 -77.28372 -77.28826 -77.28826 -77.28832 -77.29450
[232] -77.29450 -77.29583 -77.29583 -77.29637 -77.29637 -77.29643 -77.29448
[239] -77.29448 -77.29432 -77.29432 -77.28801 -77.28801 -77.28633 -77.28648
[246] -77.28563 -77.28566 -77.28505 -77.28515 -77.28493 -77.28397 -77.27355
[253] -77.27355 -77.26534 -77.26534 -77.26528 -77.26528 -77.25109 -77.25109
[260] -77.24474 -77.24474 -77.22865 -77.22865 -77.22248 -77.22248 -77.20970
[267] -77.20970 -77.20938 -77.20849 -77.20500 -77.20158 -77.20009 -77.19796
[274] -77.19117 -77.18454 -77.18236 -77.17801 -77.16639 -77.16639 -77.16506
[281] -77.16373 -77.16062 -77.15751 -77.15744 -77.15443 -77.15198 -77.15198
[288] -77.14223 -77.13608 -77.13373 -77.13150 -77.13077 -77.12859 -77.12576
[295] -77.12449 -77.11477 -77.11446 -77.11017 -77.10951 -77.10951 -77.10947
[302] -77.10942 -77.10942 -77.10741 -77.10493 -77.10436 -77.10166 -77.10109
[309] -77.09916 -77.09808 -77.09551 -77.09494 -77.09319 -77.08004 -77.08004
[316] -77.07870 -77.07807 -77.07807 -77.07746 -77.07568 -77.07504 -77.07466
[323] -77.07447 -77.07259 -77.07215 -77.07154 -77.07138 -77.07100 -77.07062
[330] -77.06855 -77.05425 -77.05283 -77.05283 -77.05279 -77.05279 -77.05274
[337] -77.05274 -77.02113 -77.02113 -77.01911 -77.01911 -77.00964 -77.00964
[344] -77.00572 -77.00572 -77.00570 -77.00568 -77.00568 -77.00488 -77.00141
[351] -77.00141 -76.99970 -76.99970 -76.99970 -76.99854 -76.99826 -76.99855
[358] -76.99970 -76.99970 -77.00000 -76.99970 -76.99970 -76.99961 -76.99813
[365] -76.99813 -76.99745 -76.99749 -76.99739 -76.99678 -76.99678 -76.99566
[372] -76.99557 -76.99557 -76.99500 -76.99449 -76.99418 -76.99348 -76.99348
[379] -76.99327 -76.99226 -76.99223 -76.98614 -76.98614 -76.97855 -76.97855
[386] -76.97661 -76.97661 -76.97519 -76.97519 -76.96955 -76.96648 -76.96648
[393] -76.96409 -76.96409 -76.96087 -76.96087 -76.95910 -76.95910 -76.95728
[400] -76.95728 -76.95334 -76.95334 -76.95328 -76.95328 -76.94491 -76.93849
[407] -76.93849 -76.93842 -76.93842 -76.92713 -76.92713 -76.92542 -76.92184
[414] -76.92184 -76.92183 -76.92084 -76.92084 -76.92078 -76.92078 -76.91882
[421] -76.91882 -76.91757 -76.91284 -76.91284 -76.91045 -76.90557 -76.90557
[428] -76.90302 -76.90084 -76.89846 -76.89516 -76.89516 -76.89425 -76.89316
[435] -76.89114 -76.88905 -76.88905 -76.88904 -76.88550 -76.88323 -76.88243
[442] -76.88243 -76.88080 -76.88080 -76.87707 -76.87398 -76.86278 -76.86278
[449] -76.85810 -76.85810 -76.85421 -76.84331 -76.83629 -76.83597 -76.83590
[456] -76.83590 -76.83070 -76.82944 -76.82944 -76.82701 -76.82701 -76.81669
[463] -76.81669 -76.81267 -76.81267 -76.79364 -76.79364 -76.78852 -76.78852
[470] -76.78199 -76.78029 -76.77811 -76.77811 -76.77650 -76.77650 -76.77361
[477] -76.77361 -76.76925 -76.76581 -76.76092 -76.75674 -76.75674 -76.75674
[484] -76.73990 -76.73990 -76.73212 -76.72556 -76.72556 -76.72551 -76.72547
[491] -76.72547 -76.72393 -76.72041 -76.71443 -76.71443 -76.70693 -76.70693
[498] -76.70035 -76.70035 -76.69868 -76.69820 -76.69706 -76.69295 -76.69236
[505] -76.69236 -76.69210 -76.68743 -76.68743 -76.68734 -76.68734 -76.65319
[512] -76.65319 -76.64345 -76.64345 -76.64133 -76.64133 -76.63885 -76.63885
[519] -76.63298 -76.63298 -76.62810 -76.62810 -76.62059 -76.60831 -76.60831
[526] -76.60182 -76.60182 -76.59960 -76.59960 -76.59821 -76.59728 -76.59614
[533] -76.59501 -76.59387 -76.59387 -76.58850 -76.58850 -76.58493 -76.58493
[540] -76.58265 -76.58265 -76.58260 -76.58260 -76.57831 -76.57831 -76.57725
[547] -76.57690 -76.57690 -76.57651 -76.57602 -76.57479 -76.57479 -76.57391
[554] -76.57249 -76.57249 -76.57227 -76.56947 -76.56699 -76.56699 -76.56667
[561] -76.56535 -76.56535 -76.56446 -76.56446 -76.56207 -76.56207 -76.55880
[568] -76.55880 -76.55875 -76.55875 -76.55752 -76.55752 -76.55275 -76.55275
[575] -76.55223 -76.55223 -76.55083 -76.55083 -76.54882 -76.54790 -76.54703
[582] -76.54116 -76.54116 -76.53644 -76.53644 -76.53640 -76.53637 -76.53637
[589] -76.53606 -76.53606 -76.52968 -76.52968 -76.52961 -76.52961 -76.49205
[596] -76.48954 -76.48954 -76.48948 -76.48948 -76.48942 -76.48028 -76.47754
[603] -76.47449 -76.46500 -76.46500 -76.45028 -76.45028 -76.44644 -76.44644
[610] -76.43778 -76.43423 -76.43181 -76.42839 -76.42839 -76.42745 -76.42441
[617] -76.42441 -76.42432 -76.42116 -76.42116 -76.42033 -76.42033 -76.41581
[624] -76.41581 -76.41271 -76.41271 -76.40971 -76.40971 -76.40664 -76.40664
[631] -76.40225 -76.40043 -76.40043 -76.40000 -76.39258 -76.39258 -76.38186
[638] -76.38186 -76.37632 -76.37324 -76.37324 -76.36779 -76.36779 -76.36770
[645] -76.36457 -76.35476 -76.35192 -76.35192 -76.34088 -76.34088 -76.32748
[652] -76.32748 -76.29815
> segs_xy[1,]
        X         Y        L1
-77.10678  38.92061   1.00000
> segs_xy[,1]
  [1] -77.10678 -77.10653 -77.10321 -77.10245 -77.10245 -77.10130 -77.09843
  [8] -77.09581 -77.09364 -77.08575 -77.08160 -77.07876 -77.07582 -77.06892
 [15] -77.06684 -77.06128 -77.05969 -77.05867 -77.05867 -77.05816 -77.05804
 [22] -77.05696 -77.05649 -77.05595 -77.05365 -77.05133 -77.04306 -77.04306
 [29] -77.04166 -77.04166 -77.03809 -77.03504 -77.03396 -77.03396 -77.03392
 [36] -77.03392 -77.03297 -77.03237 -77.03037 -77.03037 -77.03043 -77.02941
 [43] -77.02716 -77.02535 -77.02535 -77.02822 -77.02915 -77.02986 -77.03105
 [50] -77.03230 -77.03230 -77.03215 -77.03377 -77.03329 -77.03311 -77.03337
 [57] -77.03312 -77.03201 -77.03214 -77.03113 -77.03252 -77.03252 -77.03265
 [64] -77.03237 -77.03327 -77.03283 -77.03182 -77.03320 -77.03554 -77.03731
 [71] -77.03731 -77.03643 -77.03795 -77.03681 -77.03720 -77.03670 -77.03638
 [78] -77.03638 -77.03594 -77.03566 -77.03350 -77.03412 -77.03412 -77.03544
 [85] -77.03525 -77.03564 -77.03536 -77.03607 -77.03602 -77.03647 -77.03670
 [92] -77.03767 -77.03856 -77.04022 -77.04096 -77.04224 -77.04256 -77.04366
 [99] -77.04366 -77.04368 -77.04372 -77.04372 -77.04656 -77.04656 -77.05169
[106] -77.05635 -77.05750 -77.06062 -77.06403 -77.06403 -77.06645 -77.06980
[113] -77.07171 -77.07372 -77.08192 -77.08310 -77.08310 -77.08406 -77.08763
[120] -77.08935 -77.08935 -77.09787 -77.10010 -77.10226 -77.10574 -77.11186
[127] -77.11362 -77.11362 -77.11647 -77.11991 -77.12194 -77.12194 -77.12200
[134] -77.12200 -77.12269 -77.12428 -77.12553 -77.12617 -77.12617 -77.12620
[141] -77.12621 -77.12621 -77.12838 -77.12619 -77.12619 -77.12584 -77.12562
[148] -77.12562 -77.12479 -77.12454 -77.12282 -77.12168 -77.12086 -77.12074
[155] -77.12026 -77.12206 -77.12836 -77.12836 -77.12967 -77.13298 -77.13550
[162] -77.14085 -77.14534 -77.14582 -77.14897 -77.15700 -77.16142 -77.16190
[169] -77.16706 -77.16901 -77.16901 -77.19347 -77.19347 -77.19351 -77.19355
[176] -77.19355 -77.22015 -77.22015 -77.22395 -77.22395 -77.22783 -77.22783
[183] -77.22866 -77.22906 -77.22906 -77.22907 -77.22910 -77.22910 -77.23069
[190] -77.23069 -77.23244 -77.24393 -77.24396 -77.24396 -77.24561 -77.24561
[197] -77.24892 -77.25172 -77.25207 -77.25500 -77.25779 -77.25960 -77.26078
[204] -77.26269 -77.26596 -77.26714 -77.26714 -77.26714 -77.26752 -77.26825
[211] -77.26825 -77.26939 -77.26977 -77.27111 -77.27514 -77.27514 -77.27657
[218] -77.27816 -77.27991 -77.28124 -77.28124 -77.28191 -77.28279 -77.28337
[225] -77.28369 -77.28369 -77.28372 -77.28826 -77.28826 -77.28832 -77.29450
[232] -77.29450 -77.29583 -77.29583 -77.29637 -77.29637 -77.29643 -77.29448
[239] -77.29448 -77.29432 -77.29432 -77.28801 -77.28801 -77.28633 -77.28648
[246] -77.28563 -77.28566 -77.28505 -77.28515 -77.28493 -77.28397 -77.27355
[253] -77.27355 -77.26534 -77.26534 -77.26528 -77.26528 -77.25109 -77.25109
[260] -77.24474 -77.24474 -77.22865 -77.22865 -77.22248 -77.22248 -77.20970
[267] -77.20970 -77.20938 -77.20849 -77.20500 -77.20158 -77.20009 -77.19796
[274] -77.19117 -77.18454 -77.18236 -77.17801 -77.16639 -77.16639 -77.16506
[281] -77.16373 -77.16062 -77.15751 -77.15744 -77.15443 -77.15198 -77.15198
[288] -77.14223 -77.13608 -77.13373 -77.13150 -77.13077 -77.12859 -77.12576
[295] -77.12449 -77.11477 -77.11446 -77.11017 -77.10951 -77.10951 -77.10947
[302] -77.10942 -77.10942 -77.10741 -77.10493 -77.10436 -77.10166 -77.10109
[309] -77.09916 -77.09808 -77.09551 -77.09494 -77.09319 -77.08004 -77.08004
[316] -77.07870 -77.07807 -77.07807 -77.07746 -77.07568 -77.07504 -77.07466
[323] -77.07447 -77.07259 -77.07215 -77.07154 -77.07138 -77.07100 -77.07062
[330] -77.06855 -77.05425 -77.05283 -77.05283 -77.05279 -77.05279 -77.05274
[337] -77.05274 -77.02113 -77.02113 -77.01911 -77.01911 -77.00964 -77.00964
[344] -77.00572 -77.00572 -77.00570 -77.00568 -77.00568 -77.00488 -77.00141
[351] -77.00141 -76.99970 -76.99970 -76.99970 -76.99854 -76.99826 -76.99855
[358] -76.99970 -76.99970 -77.00000 -76.99970 -76.99970 -76.99961 -76.99813
[365] -76.99813 -76.99745 -76.99749 -76.99739 -76.99678 -76.99678 -76.99566
[372] -76.99557 -76.99557 -76.99500 -76.99449 -76.99418 -76.99348 -76.99348
[379] -76.99327 -76.99226 -76.99223 -76.98614 -76.98614 -76.97855 -76.97855
[386] -76.97661 -76.97661 -76.97519 -76.97519 -76.96955 -76.96648 -76.96648
[393] -76.96409 -76.96409 -76.96087 -76.96087 -76.95910 -76.95910 -76.95728
[400] -76.95728 -76.95334 -76.95334 -76.95328 -76.95328 -76.94491 -76.93849
[407] -76.93849 -76.93842 -76.93842 -76.92713 -76.92713 -76.92542 -76.92184
[414] -76.92184 -76.92183 -76.92084 -76.92084 -76.92078 -76.92078 -76.91882
[421] -76.91882 -76.91757 -76.91284 -76.91284 -76.91045 -76.90557 -76.90557
[428] -76.90302 -76.90084 -76.89846 -76.89516 -76.89516 -76.89425 -76.89316
[435] -76.89114 -76.88905 -76.88905 -76.88904 -76.88550 -76.88323 -76.88243
[442] -76.88243 -76.88080 -76.88080 -76.87707 -76.87398 -76.86278 -76.86278
[449] -76.85810 -76.85810 -76.85421 -76.84331 -76.83629 -76.83597 -76.83590
[456] -76.83590 -76.83070 -76.82944 -76.82944 -76.82701 -76.82701 -76.81669
[463] -76.81669 -76.81267 -76.81267 -76.79364 -76.79364 -76.78852 -76.78852
[470] -76.78199 -76.78029 -76.77811 -76.77811 -76.77650 -76.77650 -76.77361
[477] -76.77361 -76.76925 -76.76581 -76.76092 -76.75674 -76.75674 -76.75674
[484] -76.73990 -76.73990 -76.73212 -76.72556 -76.72556 -76.72551 -76.72547
[491] -76.72547 -76.72393 -76.72041 -76.71443 -76.71443 -76.70693 -76.70693
[498] -76.70035 -76.70035 -76.69868 -76.69820 -76.69706 -76.69295 -76.69236
[505] -76.69236 -76.69210 -76.68743 -76.68743 -76.68734 -76.68734 -76.65319
[512] -76.65319 -76.64345 -76.64345 -76.64133 -76.64133 -76.63885 -76.63885
[519] -76.63298 -76.63298 -76.62810 -76.62810 -76.62059 -76.60831 -76.60831
[526] -76.60182 -76.60182 -76.59960 -76.59960 -76.59821 -76.59728 -76.59614
[533] -76.59501 -76.59387 -76.59387 -76.58850 -76.58850 -76.58493 -76.58493
[540] -76.58265 -76.58265 -76.58260 -76.58260 -76.57831 -76.57831 -76.57725
[547] -76.57690 -76.57690 -76.57651 -76.57602 -76.57479 -76.57479 -76.57391
[554] -76.57249 -76.57249 -76.57227 -76.56947 -76.56699 -76.56699 -76.56667
[561] -76.56535 -76.56535 -76.56446 -76.56446 -76.56207 -76.56207 -76.55880
[568] -76.55880 -76.55875 -76.55875 -76.55752 -76.55752 -76.55275 -76.55275
[575] -76.55223 -76.55223 -76.55083 -76.55083 -76.54882 -76.54790 -76.54703
[582] -76.54116 -76.54116 -76.53644 -76.53644 -76.53640 -76.53637 -76.53637
[589] -76.53606 -76.53606 -76.52968 -76.52968 -76.52961 -76.52961 -76.49205
[596] -76.48954 -76.48954 -76.48948 -76.48948 -76.48942 -76.48028 -76.47754
[603] -76.47449 -76.46500 -76.46500 -76.45028 -76.45028 -76.44644 -76.44644
[610] -76.43778 -76.43423 -76.43181 -76.42839 -76.42839 -76.42745 -76.42441
[617] -76.42441 -76.42432 -76.42116 -76.42116 -76.42033 -76.42033 -76.41581
[624] -76.41581 -76.41271 -76.41271 -76.40971 -76.40971 -76.40664 -76.40664
[631] -76.40225 -76.40043 -76.40043 -76.40000 -76.39258 -76.39258 -76.38186
[638] -76.38186 -76.37632 -76.37324 -76.37324 -76.36779 -76.36779 -76.36770
[645] -76.36457 -76.35476 -76.35192 -76.35192 -76.34088 -76.34088 -76.32748
[652] -76.32748 -76.29815
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "identifier",
+                                 max_dist = 250000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > # create a 1 meter buffer around snapped point
+ poi_snapped_buff <-  st_buffer(gages_snapped, 5)
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > nrow(segs)
[1] 181
> nrow(gages_snppead)
Error in nrow(gages_snppead) : object 'gages_snppead' not found
> nrow(gages_snapped)
[1] 21
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "identifier",
+                                 max_dist = 5000000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > # create a 1 meter buffer around snapped point
+ poi_snapped_buff <-  st_buffer(gages_snapped, 5)
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > mapview(segs)
> nrow(segs)
[1] 181
> segs_on_points <- segs_filt_dist %>%
+   st_intersects(gages_snapped)
> mapview(segs_on_points)
Error in (function (classes, fdef, mtable)  :
  unable to find an inherited method for function ‘mapView’ for signature ‘"sgbp"’
> head(segs_on_points)
Error in .Primitive("[")(x, 1:6, , drop = FALSE) :
  incorrect number of dimensions
> segs_on_points <- segs_filt_dist %>%
+   filter(st_intersects(gages_snapped))
+ Error in `stopifnot()`:
ℹ In argument: `st_intersects(gages_snapped)`.
Caused by error:
! `..1` must be of size 181 or 1, not size 21.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> segs_on_points <- segs_filt_dist %>%
+   st_filter(gages_snapped)
> head(segs_on_points)
Simple feature collection with 6 features and 142 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: 4538042 ymin: 5413722 xmax: 4548831 ymax: 5457364
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 6 × 143
  rowid id       comid fdate               resolution gnis_id gnis_name lengthkm
  <int> <chr>    <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1   155 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
2   164 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    4.47
3   171 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    3.69
4   173 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    3.69
5   179 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    5.2
6     4 nhdflo… 4.53e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.458
# ℹ 135 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> nrow(segs_on_points)
[1] 17
> nrow(gages_snapped)
[1] 21
> segs_on_points <- segs_filt_dist %>%
+   st_filter(poi_snapped_buff)
> nrow(segs_on_points)
[1] 40
> segs_on_points <- segs_filt_dist %>%
+   st_filter(st_buffer(gages_snapped, 1m))
+ Error: unexpected symbol in:
"segs_on_points <- segs_filt_dist %>%
  st_filter(st_buffer(gages_snapped, 1m"
> segs_on_points <- segs_filt_dist %>%
+   st_filter(st_buffer(gages_snapped, 1))
> nrow(segs_on_points)
[1] 21
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_coordinates()
> segs_df <- segs_on_points %>%
+   st_drop_geometry() %>%
+   mutate(
+     long = segs_xy[,1],
+     lat = segs_xy[,2],
+   )
Error in `mutate()`:
ℹ In argument: `long = segs_xy[, 1]`.
Caused by error:
! `long` must be size 21 or 1, not 50.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> head(segs_xy)
             X        Y L1
[1,] -77.03396 38.86838  1
[2,] -77.03392 38.86831  1
[3,] -77.04366 38.70884  2
[4,] -77.04368 38.70880  2
[5,] -77.04372 38.70878  2
[6,] -77.12194 38.67382  3
> nrow(segs_on_points)
[1] 21
> nrow(segs_xy)
[1] 50
> segs_w_points <- segs_filt_dist %>%
+   st_join(st_buffer(gages_snapped, 1))
> head(segs_w_points)
Simple feature collection with 6 features and 144 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: 4527842 ymin: 5456719 xmax: 4538911 ymax: 5459413
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 6 × 145
  rowid id       comid fdate               resolution gnis_id gnis_name lengthkm
  <int> <chr>    <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1   152 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    5.22
2   177 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.83
3   153 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    0.163
4   154 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
5   155 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
6   156 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
# ℹ 137 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> nrow(segs_w_points)
[1] 182
> segs_on_points <- segs_filt_dist %>%
+   st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(gages_snapped)
> nrow(segs_on_points)
[1] 22
> head(segs_on_points)
Simple feature collection with 6 features and 144 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: 4538042 ymin: 5413722 xmax: 4548831 ymax: 5457364
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 6 × 145
  rowid id       comid fdate               resolution gnis_id gnis_name lengthkm
  <int> <chr>    <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1   155 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
2   164 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    4.47
3   171 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    3.69
4   173 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    3.69
5   179 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    5.2
6     4 nhdflo… 4.53e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.458
# ℹ 137 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> # complete site dataframe
+ cb_station_complete <- segs_on_points %>%
+   st_join(cb_station_nhd)
Error in st_geos_binop("intersects", x, y, sparse = sparse, prepared = prepared,  :
  st_crs(x) == st_crs(y) is not TRUE
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326)
> # complete site dataframe
+ cb_station_complete <- segs_xy %>%
+   st_join(cb_station_nhd)
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> cb_station_complete <- cb_station_data %>%
+   left_join(segs_xy)
+ Joining with `by = join_by(id, fdate, resolution, gnis_id, gnis_name, lengthkm, reachcode, flowdir,
wbareacomi, ftype, fcode, shape_length, streamleve, streamorde, streamcalc, fromnode, tonode, hydroseq,
levelpathi, pathlength, terminalpa, arbolatesu, divergence, startflag, terminalfl, dnlevel, uplevelpat,
uphydroseq, dnlevelpat, dnminorhyd, dndraincou, dnhydroseq, frommeas, tomeas, rtndiv, vpuin, vpuout,
areasqkm, totdasqkm, divdasqkm, tidal, totma, wbareatype, pathtimema, hwnodesqkm, maxelevraw, minelevraw,
maxelevsmo, minelevsmo, slope, elevfixed, hwtype, slopelenkm, qa_ma, va_ma, qc_ma, vc_ma, qe_ma, ve_ma,
qa_01, va_01, qc_01, vc_01, qe_01, ve_01, qa_02, va_02, qc_02, vc_02, qe_02, ve_02, qa_03, va_03, qc_03,
vc_03, qe_03, ve_03, qa_04, va_04, qc_04, vc_04, qe_04, ve_04, qa_05, va_05, qc_05, vc_05, qe_05, ve_05,
qa_06, va_06, qc_06, vc_06, qe_06, ve_06, qa_07, va_07, qc_07, vc_07, qe_07, ve_07, qa_08, va_08, qc_08,
vc_08, qe_08, ve_08, qa_09, va_09, qc_09, vc_09, qe_09, ve_09, qa_10, va_10, qc_10, vc_10, qe_10, ve_10,
qa_11, va_11, qc_11, vc_11, qe_11, ve_11, qa_12, va_12, qc_12, vc_12, qe_12, ve_12, lakefract, surfarea,
rareahload, rpuid, vpuid, enabled)`
> cb_station_complete <- cb_station_data %>%
+   left_join(segs_xy, by = 'comid')
+ Error in `sf_column %in% names(g)`:
! Join columns in `x` must be present in the data.
✖ Problem with `comid`.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> head(segs_xy)
# A tibble: 6 × 144
  rowid id       comid fdate               resolution gnis_id gnis_name lengthkm
  <int> <chr>    <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1   155 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
2   164 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    4.47
3   171 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    3.69
4   173 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    3.69
5   179 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    5.2
6     4 nhdflo… 4.53e6 2008-07-22 00:00:00 Medium     597915  Potomac …    0.458
# ℹ 136 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> head(cb_station_data)
Simple feature collection with 6 features and 156 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -77.1887 ymin: 38.1378 xmax: -76.5058 ymax: 38.6699
Geodetic CRS:  WGS 84
# A tibble: 6 × 157
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
2 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
3 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
5 MDDNR EOTB      WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Piney P… XBE8396       2004
# ℹ 149 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   geometry <POINT [°]>, comid.x <int>, id <chr>, comid.y <int>, fdate <dttm>,
#   resolution <chr>, gnis_id <chr>, gnis_name <chr>, lengthkm <dbl>,
#   reachcode <chr>, flowdir <chr>, wbareacomi <int>, ftype <chr>, fcode <int>,
#   shape_length <dbl>, streamleve <int>, streamorde <int>, streamcalc <int>, …
# ℹ Use `colnames()` to see all variable names
> head(cb_station_data$comid.x)
[1]  4539849  4534575  4539795 22340825  4529659  4532471
> cb_station_data <- cb_station_data %>%
+   select(-comid.y, comid = comid.x)
> cb_station_complete <- cb_station_data %>%
+   left_join(segs_xy, by = 'comid')
> googlesheets4::write_sheet(ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            seet = 'data_flowlines')
+ Error in googlesheets4::write_sheet(ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",  :
  unused argument (seet = "data_flowlines")
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
Error in `map()`:
ℹ In index: 18.
ℹ With name: geometry.
Caused by error in `abort_unsupported_conversion()`:
! Don't know how to make an instance of <CellData> from something of class <sfc_POINT/sfc>.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> colnames(cb_station_data)
  [1] "src"                 "src_sub"             "data_type"
  [4] "watershed"           "watershed_sub"       "site_name"
  [7] "station"             "start_year"          "end_year"
 [10] "station_depth"       "top_sensor_depth_m"  "station_depth_m"
 [13] "DO"                  "WQ_fixed"            "WQ_fixed_waterlevel"
 [16] "url"                 "notes"               "geometry"
 [19] "comid"               "id"                  "fdate"
 [22] "resolution"          "gnis_id"             "gnis_name"
 [25] "lengthkm"            "reachcode"           "flowdir"
 [28] "wbareacomi"          "ftype"               "fcode"
 [31] "shape_length"        "streamleve"          "streamorde"
 [34] "streamcalc"          "fromnode"            "tonode"
 [37] "hydroseq"            "levelpathi"          "pathlength"
 [40] "terminalpa"          "arbolatesu"          "divergence"
 [43] "startflag"           "terminalfl"          "dnlevel"
 [46] "uplevelpat"          "uphydroseq"          "dnlevelpat"
 [49] "dnminorhyd"          "dndraincou"          "dnhydroseq"
 [52] "frommeas"            "tomeas"              "rtndiv"
 [55] "vpuin"               "vpuout"              "areasqkm"
 [58] "totdasqkm"           "divdasqkm"           "tidal"
 [61] "totma"               "wbareatype"          "pathtimema"
 [64] "hwnodesqkm"          "maxelevraw"          "minelevraw"
 [67] "maxelevsmo"          "minelevsmo"          "slope"
 [70] "elevfixed"           "hwtype"              "slopelenkm"
 [73] "qa_ma"               "va_ma"               "qc_ma"
 [76] "vc_ma"               "qe_ma"               "ve_ma"
 [79] "qa_01"               "va_01"               "qc_01"
 [82] "vc_01"               "qe_01"               "ve_01"
 [85] "qa_02"               "va_02"               "qc_02"
 [88] "vc_02"               "qe_02"               "ve_02"
 [91] "qa_03"               "va_03"               "qc_03"
 [94] "vc_03"               "qe_03"               "ve_03"
 [97] "qa_04"               "va_04"               "qc_04"
[100] "vc_04"               "qe_04"               "ve_04"
[103] "qa_05"               "va_05"               "qc_05"
[106] "vc_05"               "qe_05"               "ve_05"
[109] "qa_06"               "va_06"               "qc_06"
[112] "vc_06"               "qe_06"               "ve_06"
[115] "qa_07"               "va_07"               "qc_07"
[118] "vc_07"               "qe_07"               "ve_07"
[121] "qa_08"               "va_08"               "qc_08"
[124] "vc_08"               "qe_08"               "ve_08"
[127] "qa_09"               "va_09"               "qc_09"
[130] "vc_09"               "qe_09"               "ve_09"
[133] "qa_10"               "va_10"               "qc_10"
[136] "vc_10"               "qe_10"               "ve_10"
[139] "qa_11"               "va_11"               "qc_11"
[142] "vc_11"               "qe_11"               "ve_11"
[145] "qa_12"               "va_12"               "qc_12"
[148] "vc_12"               "qe_12"               "ve_12"
[151] "lakefract"           "surfarea"            "rareahload"
[154] "rpuid"               "vpuid"               "enabled"
> cb_station_complete <- cb_station_data %>%
+   left_join(segs_xy, by = 'comid') %>%
+   select(-geometry)
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
Error in `map()`:
ℹ In index: 299.
ℹ With name: geometry.
Caused by error in `abort_unsupported_conversion()`:
! Don't know how to make an instance of <CellData> from something of class <sfc_POINT/sfc>.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> colnames(cb_station_complete)
  [1] "src"                 "src_sub"             "data_type"
  [4] "watershed"           "watershed_sub"       "site_name"
  [7] "station"             "start_year"          "end_year"
 [10] "station_depth"       "top_sensor_depth_m"  "station_depth_m"
 [13] "DO"                  "WQ_fixed"            "WQ_fixed_waterlevel"
 [16] "url"                 "notes"               "comid"
 [19] "id.x"                "fdate.x"             "resolution.x"
 [22] "gnis_id.x"           "gnis_name.x"         "lengthkm.x"
 [25] "reachcode.x"         "flowdir.x"           "wbareacomi.x"
 [28] "ftype.x"             "fcode.x"             "shape_length.x"
 [31] "streamleve.x"        "streamorde.x"        "streamcalc.x"
 [34] "fromnode.x"          "tonode.x"            "hydroseq.x"
 [37] "levelpathi.x"        "pathlength.x"        "terminalpa.x"
 [40] "arbolatesu.x"        "divergence.x"        "startflag.x"
 [43] "terminalfl.x"        "dnlevel.x"           "uplevelpat.x"
 [46] "uphydroseq.x"        "dnlevelpat.x"        "dnminorhyd.x"
 [49] "dndraincou.x"        "dnhydroseq.x"        "frommeas.x"
 [52] "tomeas.x"            "rtndiv.x"            "vpuin.x"
 [55] "vpuout.x"            "areasqkm.x"          "totdasqkm.x"
 [58] "divdasqkm.x"         "tidal.x"             "totma.x"
 [61] "wbareatype.x"        "pathtimema.x"        "hwnodesqkm.x"
 [64] "maxelevraw.x"        "minelevraw.x"        "maxelevsmo.x"
 [67] "minelevsmo.x"        "slope.x"             "elevfixed.x"
 [70] "hwtype.x"            "slopelenkm.x"        "qa_ma.x"
 [73] "va_ma.x"             "qc_ma.x"             "vc_ma.x"
 [76] "qe_ma.x"             "ve_ma.x"             "qa_01.x"
 [79] "va_01.x"             "qc_01.x"             "vc_01.x"
 [82] "qe_01.x"             "ve_01.x"             "qa_02.x"
 [85] "va_02.x"             "qc_02.x"             "vc_02.x"
 [88] "qe_02.x"             "ve_02.x"             "qa_03.x"
 [91] "va_03.x"             "qc_03.x"             "vc_03.x"
 [94] "qe_03.x"             "ve_03.x"             "qa_04.x"
 [97] "va_04.x"             "qc_04.x"             "vc_04.x"
[100] "qe_04.x"             "ve_04.x"             "qa_05.x"
[103] "va_05.x"             "qc_05.x"             "vc_05.x"
[106] "qe_05.x"             "ve_05.x"             "qa_06.x"
[109] "va_06.x"             "qc_06.x"             "vc_06.x"
[112] "qe_06.x"             "ve_06.x"             "qa_07.x"
[115] "va_07.x"             "qc_07.x"             "vc_07.x"
[118] "qe_07.x"             "ve_07.x"             "qa_08.x"
[121] "va_08.x"             "qc_08.x"             "vc_08.x"
[124] "qe_08.x"             "ve_08.x"             "qa_09.x"
[127] "va_09.x"             "qc_09.x"             "vc_09.x"
[130] "qe_09.x"             "ve_09.x"             "qa_10.x"
[133] "va_10.x"             "qc_10.x"             "vc_10.x"
[136] "qe_10.x"             "ve_10.x"             "qa_11.x"
[139] "va_11.x"             "qc_11.x"             "vc_11.x"
[142] "qe_11.x"             "ve_11.x"             "qa_12.x"
[145] "va_12.x"             "qc_12.x"             "vc_12.x"
[148] "qe_12.x"             "ve_12.x"             "lakefract.x"
[151] "surfarea.x"          "rareahload.x"        "rpuid.x"
[154] "vpuid.x"             "enabled.x"           "rowid"
[157] "id.y"                "fdate.y"             "resolution.y"
[160] "gnis_id.y"           "gnis_name.y"         "lengthkm.y"
[163] "reachcode.y"         "flowdir.y"           "wbareacomi.y"
[166] "ftype.y"             "fcode.y"             "shape_length.y"
[169] "streamleve.y"        "streamorde.y"        "streamcalc.y"
[172] "fromnode.y"          "tonode.y"            "hydroseq.y"
[175] "levelpathi.y"        "pathlength.y"        "terminalpa.y"
[178] "arbolatesu.y"        "divergence.y"        "startflag.y"
[181] "terminalfl.y"        "dnlevel.y"           "uplevelpat.y"
[184] "uphydroseq.y"        "dnlevelpat.y"        "dnminorhyd.y"
[187] "dndraincou.y"        "dnhydroseq.y"        "frommeas.y"
[190] "tomeas.y"            "rtndiv.y"            "vpuin.y"
[193] "vpuout.y"            "areasqkm.y"          "totdasqkm.y"
[196] "divdasqkm.y"         "tidal.y"             "totma.y"
[199] "wbareatype.y"        "pathtimema.y"        "hwnodesqkm.y"
[202] "maxelevraw.y"        "minelevraw.y"        "maxelevsmo.y"
[205] "minelevsmo.y"        "slope.y"             "elevfixed.y"
[208] "hwtype.y"            "slopelenkm.y"        "qa_ma.y"
[211] "va_ma.y"             "qc_ma.y"             "vc_ma.y"
[214] "qe_ma.y"             "ve_ma.y"             "qa_01.y"
[217] "va_01.y"             "qc_01.y"             "vc_01.y"
[220] "qe_01.y"             "ve_01.y"             "qa_02.y"
[223] "va_02.y"             "qc_02.y"             "vc_02.y"
[226] "qe_02.y"             "ve_02.y"             "qa_03.y"
[229] "va_03.y"             "qc_03.y"             "vc_03.y"
[232] "qe_03.y"             "ve_03.y"             "qa_04.y"
[235] "va_04.y"             "qc_04.y"             "vc_04.y"
[238] "qe_04.y"             "ve_04.y"             "qa_05.y"
[241] "va_05.y"             "qc_05.y"             "vc_05.y"
[244] "qe_05.y"             "ve_05.y"             "qa_06.y"
[247] "va_06.y"             "qc_06.y"             "vc_06.y"
[250] "qe_06.y"             "ve_06.y"             "qa_07.y"
[253] "va_07.y"             "qc_07.y"             "vc_07.y"
[256] "qe_07.y"             "ve_07.y"             "qa_08.y"
[259] "va_08.y"             "qc_08.y"             "vc_08.y"
[262] "qe_08.y"             "ve_08.y"             "qa_09.y"
[265] "va_09.y"             "qc_09.y"             "vc_09.y"
[268] "qe_09.y"             "ve_09.y"             "qa_10.y"
[271] "va_10.y"             "qc_10.y"             "vc_10.y"
[274] "qe_10.y"             "ve_10.y"             "qa_11.y"
[277] "va_11.y"             "qc_11.y"             "vc_11.y"
[280] "qe_11.y"             "ve_11.y"             "qa_12.y"
[283] "va_12.y"             "qc_12.y"             "vc_12.y"
[286] "qe_12.y"             "ve_12.y"             "lakefract.y"
[289] "surfarea.y"          "rareahload.y"        "rpuid.y"
[292] "vpuid.y"             "enabled.y"           "seg_len_m"
[295] "seg_len_km"          "total_len_km"        "X"
[298] "Y"                   "geometry"
> cb_station_complete <- cb_station_data %>%
+   left_join(segs_xy, by = 'comid') %>%
+   select(-geometry)
> colnames(cb_station_complete)
  [1] "src"                 "src_sub"             "data_type"
  [4] "watershed"           "watershed_sub"       "site_name"
  [7] "station"             "start_year"          "end_year"
 [10] "station_depth"       "top_sensor_depth_m"  "station_depth_m"
 [13] "DO"                  "WQ_fixed"            "WQ_fixed_waterlevel"
 [16] "url"                 "notes"               "comid"
 [19] "id.x"                "fdate.x"             "resolution.x"
 [22] "gnis_id.x"           "gnis_name.x"         "lengthkm.x"
 [25] "reachcode.x"         "flowdir.x"           "wbareacomi.x"
 [28] "ftype.x"             "fcode.x"             "shape_length.x"
 [31] "streamleve.x"        "streamorde.x"        "streamcalc.x"
 [34] "fromnode.x"          "tonode.x"            "hydroseq.x"
 [37] "levelpathi.x"        "pathlength.x"        "terminalpa.x"
 [40] "arbolatesu.x"        "divergence.x"        "startflag.x"
 [43] "terminalfl.x"        "dnlevel.x"           "uplevelpat.x"
 [46] "uphydroseq.x"        "dnlevelpat.x"        "dnminorhyd.x"
 [49] "dndraincou.x"        "dnhydroseq.x"        "frommeas.x"
 [52] "tomeas.x"            "rtndiv.x"            "vpuin.x"
 [55] "vpuout.x"            "areasqkm.x"          "totdasqkm.x"
 [58] "divdasqkm.x"         "tidal.x"             "totma.x"
 [61] "wbareatype.x"        "pathtimema.x"        "hwnodesqkm.x"
 [64] "maxelevraw.x"        "minelevraw.x"        "maxelevsmo.x"
 [67] "minelevsmo.x"        "slope.x"             "elevfixed.x"
 [70] "hwtype.x"            "slopelenkm.x"        "qa_ma.x"
 [73] "va_ma.x"             "qc_ma.x"             "vc_ma.x"
 [76] "qe_ma.x"             "ve_ma.x"             "qa_01.x"
 [79] "va_01.x"             "qc_01.x"             "vc_01.x"
 [82] "qe_01.x"             "ve_01.x"             "qa_02.x"
 [85] "va_02.x"             "qc_02.x"             "vc_02.x"
 [88] "qe_02.x"             "ve_02.x"             "qa_03.x"
 [91] "va_03.x"             "qc_03.x"             "vc_03.x"
 [94] "qe_03.x"             "ve_03.x"             "qa_04.x"
 [97] "va_04.x"             "qc_04.x"             "vc_04.x"
[100] "qe_04.x"             "ve_04.x"             "qa_05.x"
[103] "va_05.x"             "qc_05.x"             "vc_05.x"
[106] "qe_05.x"             "ve_05.x"             "qa_06.x"
[109] "va_06.x"             "qc_06.x"             "vc_06.x"
[112] "qe_06.x"             "ve_06.x"             "qa_07.x"
[115] "va_07.x"             "qc_07.x"             "vc_07.x"
[118] "qe_07.x"             "ve_07.x"             "qa_08.x"
[121] "va_08.x"             "qc_08.x"             "vc_08.x"
[124] "qe_08.x"             "ve_08.x"             "qa_09.x"
[127] "va_09.x"             "qc_09.x"             "vc_09.x"
[130] "qe_09.x"             "ve_09.x"             "qa_10.x"
[133] "va_10.x"             "qc_10.x"             "vc_10.x"
[136] "qe_10.x"             "ve_10.x"             "qa_11.x"
[139] "va_11.x"             "qc_11.x"             "vc_11.x"
[142] "qe_11.x"             "ve_11.x"             "qa_12.x"
[145] "va_12.x"             "qc_12.x"             "vc_12.x"
[148] "qe_12.x"             "ve_12.x"             "lakefract.x"
[151] "surfarea.x"          "rareahload.x"        "rpuid.x"
[154] "vpuid.x"             "enabled.x"           "rowid"
[157] "id.y"                "fdate.y"             "resolution.y"
[160] "gnis_id.y"           "gnis_name.y"         "lengthkm.y"
[163] "reachcode.y"         "flowdir.y"           "wbareacomi.y"
[166] "ftype.y"             "fcode.y"             "shape_length.y"
[169] "streamleve.y"        "streamorde.y"        "streamcalc.y"
[172] "fromnode.y"          "tonode.y"            "hydroseq.y"
[175] "levelpathi.y"        "pathlength.y"        "terminalpa.y"
[178] "arbolatesu.y"        "divergence.y"        "startflag.y"
[181] "terminalfl.y"        "dnlevel.y"           "uplevelpat.y"
[184] "uphydroseq.y"        "dnlevelpat.y"        "dnminorhyd.y"
[187] "dndraincou.y"        "dnhydroseq.y"        "frommeas.y"
[190] "tomeas.y"            "rtndiv.y"            "vpuin.y"
[193] "vpuout.y"            "areasqkm.y"          "totdasqkm.y"
[196] "divdasqkm.y"         "tidal.y"             "totma.y"
[199] "wbareatype.y"        "pathtimema.y"        "hwnodesqkm.y"
[202] "maxelevraw.y"        "minelevraw.y"        "maxelevsmo.y"
[205] "minelevsmo.y"        "slope.y"             "elevfixed.y"
[208] "hwtype.y"            "slopelenkm.y"        "qa_ma.y"
[211] "va_ma.y"             "qc_ma.y"             "vc_ma.y"
[214] "qe_ma.y"             "ve_ma.y"             "qa_01.y"
[217] "va_01.y"             "qc_01.y"             "vc_01.y"
[220] "qe_01.y"             "ve_01.y"             "qa_02.y"
[223] "va_02.y"             "qc_02.y"             "vc_02.y"
[226] "qe_02.y"             "ve_02.y"             "qa_03.y"
[229] "va_03.y"             "qc_03.y"             "vc_03.y"
[232] "qe_03.y"             "ve_03.y"             "qa_04.y"
[235] "va_04.y"             "qc_04.y"             "vc_04.y"
[238] "qe_04.y"             "ve_04.y"             "qa_05.y"
[241] "va_05.y"             "qc_05.y"             "vc_05.y"
[244] "qe_05.y"             "ve_05.y"             "qa_06.y"
[247] "va_06.y"             "qc_06.y"             "vc_06.y"
[250] "qe_06.y"             "ve_06.y"             "qa_07.y"
[253] "va_07.y"             "qc_07.y"             "vc_07.y"
[256] "qe_07.y"             "ve_07.y"             "qa_08.y"
[259] "va_08.y"             "qc_08.y"             "vc_08.y"
[262] "qe_08.y"             "ve_08.y"             "qa_09.y"
[265] "va_09.y"             "qc_09.y"             "vc_09.y"
[268] "qe_09.y"             "ve_09.y"             "qa_10.y"
[271] "va_10.y"             "qc_10.y"             "vc_10.y"
[274] "qe_10.y"             "ve_10.y"             "qa_11.y"
[277] "va_11.y"             "qc_11.y"             "vc_11.y"
[280] "qe_11.y"             "ve_11.y"             "qa_12.y"
[283] "va_12.y"             "qc_12.y"             "vc_12.y"
[286] "qe_12.y"             "ve_12.y"             "lakefract.y"
[289] "surfarea.y"          "rareahload.y"        "rpuid.y"
[292] "vpuid.y"             "enabled.y"           "seg_len_m"
[295] "seg_len_km"          "total_len_km"        "X"
[298] "Y"                   "geometry"
> cb_station_complete <- cb_station_data %>%
+   left_join(segs_xy, by = 'comid') %>%
+   select(-geometry) %>%
+   st_drop_geometry()
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
✖ Request failed [429]. Retry 1 happens in 1.3 seconds ...
✖ Request failed [429]. Retry 2 happens in 5.2 seconds ...
✖ Request failed [429]. Retry 3 happens in 25.5 seconds ...
  C-c C-c
> head(cb_station_complete)
# A tibble: 6 × 298
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
2 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
3 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
5 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
# ℹ 290 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   comid <int>, id.x <chr>, fdate.x <dttm>, resolution.x <chr>,
#   gnis_id.x <chr>, gnis_name.x <chr>, lengthkm.x <dbl>, reachcode.x <chr>,
#   flowdir.x <chr>, wbareacomi.x <int>, ftype.x <chr>, fcode.x <int>,
#   shape_length.x <dbl>, streamleve.x <int>, streamorde.x <int>, …
# ℹ Use `colnames()` to see all variable names
> nrow(cb_station_complete)
[1] 22
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
✖ Request failed [429]. Retry 1 happens in 5.6 seconds ...
✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> head(segs_filt_dist)
Simple feature collection with 6 features and 142 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: 4527842 ymin: 5456719 xmax: 4538911 ymax: 5459413
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 6 × 143
  rowid id       comid fdate               resolution gnis_id gnis_name lengthkm
  <int> <chr>    <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1   152 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    5.22
2   177 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.83
3   153 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    0.163
4   154 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
5   155 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
6   156 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
# ℹ 135 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> head(segs_filt_dist$total_len_km)
[1]  6.317261  9.716950  9.914216 11.287858 11.297855 12.380019
> cb_station_data$comid
 [1]  4539849  4534575  4539795 22340825  4529659  4532471 22343523  4530723
 [9]  4534465  4532401  4539813  4532001  4532203 22341031  4532451 22343533
[17] 22343545  4534677  4532299  4532523  4539919
> # complete site dataframe
+ cb_station_xy <- segs_filt_dist %>%
+   drop_geometry()
Error in drop_geometry(.) : could not find function "drop_geometry"
> # complete site dataframe
+ cb_station_xy <- segs_filt_dist %>%
+    st_drop_geometry()
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs)
Joining with `by = join_by(comid, id, fdate, resolution, gnis_id, gnis_name, lengthkm, reachcode,
flowdir, wbareacomi, ftype, fcode, shape_length, streamleve, streamorde, streamcalc, fromnode, tonode,
hydroseq, levelpathi, pathlength, terminalpa, arbolatesu, divergence, startflag, terminalfl, dnlevel,
uplevelpat, uphydroseq, dnlevelpat, dnminorhyd, dndraincou, dnhydroseq, frommeas, tomeas, rtndiv, vpuin,
vpuout, areasqkm, totdasqkm, divdasqkm, tidal, totma, wbareatype, pathtimema, hwnodesqkm, maxelevraw,
minelevraw, maxelevsmo, minelevsmo, slope, elevfixed, hwtype, slopelenkm, qa_ma, va_ma, qc_ma, vc_ma,
qe_ma, ve_ma, qa_01, va_01, qc_01, vc_01, qe_01, ve_01, qa_02, va_02, qc_02, vc_02, qe_02, ve_02, qa_03,
va_03, qc_03, vc_03, qe_03, ve_03, qa_04, va_04, qc_04, vc_04, qe_04, ve_04, qa_05, va_05, qc_05, vc_05,
qe_05, ve_05, qa_06, va_06, qc_06, vc_06, qe_06, ve_06, qa_07, va_07, qc_07, vc_07, qe_07, ve_07, qa_08,
va_08, qc_08, vc_08, qe_08, ve_08, qa_09, va_09, qc_09, vc_09, qe_09, ve_09, qa_10, va_10, qc_10, vc_10,
qe_10, ve_10, qa_11, va_11, qc_11, vc_11, qe_11, ve_11, qa_12, va_12, qc_12, vc_12, qe_12, ve_12,
lakefract, surfarea, rareahload, rpuid, vpuid, enabled)`
> # reproject all
+ segs_xy <- st_transform(segs_filt_dist, crs = 4326) %>%
+   st_drop_geometry()
> head(segs_xy)
# A tibble: 6 × 142
  rowid id       comid fdate               resolution gnis_id gnis_name lengthkm
  <int> <chr>    <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1   152 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    5.22
2   177 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.83
3   153 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    0.163
4   154 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
5   155 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
6   156 nhdflo… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
# ℹ 134 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <dbl>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> # complete site dataframe
+ cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'comid')
> head(cb_station_complete)
# A tibble: 6 × 296
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      Potomac … XCE0055       2007
2 MDDNR EOTB      WQ        Potomac … mainstem      Blossom … XDB4544       2006
3 MDDNR EOTB      WQ        Potomac … mainstem      Breton B… XCD5599       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      Fenwick   XFB0231       2004
5 MDDNR EOTB      WQ        Potomac … mainstem      Fenwick   XFB0231       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      Fenwick   XFB0231       2004
# ℹ 288 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   comid <int>, id.x <chr>, fdate.x <dttm>, resolution.x <chr>,
#   gnis_id.x <chr>, gnis_name.x <chr>, lengthkm.x <dbl>, reachcode.x <chr>,
#   flowdir.x <chr>, wbareacomi.x <int>, ftype.x <chr>, fcode.x <int>,
#   shape_length.x <dbl>, streamleve.x <int>, streamorde.x <int>, …
# ℹ Use `colnames()` to see all variable names
> nrow(cb_station_complete)
[1] 25
> head(cb_station_complete$comid)
[1]  4539849  4534575  4539795 22340825 22340825 22340825
> head(cb_station_complete$total_len_km)
[1]       NA       NA       NA 43.63487 43.64487 44.63321
> cb_station_complete$total_len_km
 [1]       NA       NA       NA 43.63487 43.64487 44.63321 44.64321 46.31846
 [9]       NA       NA       NA       NA       NA       NA       NA       NA
[17]       NA       NA       NA       NA       NA       NA       NA       NA
[25]       NA
> segs_on_points <- segs_filt_dist %>%
+   ## st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(gages_snapped)
> nrow(segs_on_points)
[1] 182
> segs_on_points <- gages_snapped %>%
+   ## st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(segs_filt_dist)
> nrow(segs_on_points)
[1] 22
> head(segs_on_points)
Simple feature collection with 6 features and 144 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4541853 ymin: 5398961 xmax: 4637977 ymax: 5430461
Projected CRS: NAD83 / UTM zone 10N
        X       Y rowid                         id    comid      fdate
1 4629779 5403798    38 nhdflowline_network.160914  4532325 2008-07-22
2 4566316 5398961   127 nhdflowline_network.161077  4534599 2008-07-22
3 4618015 5401418    NA                       <NA>       NA       <NA>
4 4544472 5430461   171 nhdflowline_network.159245 22340825 2008-07-22
5 4541853 5413727     4 nhdflowline_network.163319  4529649 2008-07-22
6 4637977 5400242   102 nhdflowline_network.163275  4532981 2008-07-22
  resolution gnis_id     gnis_name lengthkm      reachcode        flowdir
1     Medium  597915 Potomac River    1.041 02070011000040 With Digitized
2     Medium  597915 Potomac River    6.985 02070011000203 With Digitized
3       <NA>    <NA>          <NA>       NA           <NA>           <NA>
4     Medium  597915 Potomac River    3.688 02070010000004 With Digitized
5     Medium  597915 Potomac River    0.458 02070011001771 With Digitized
6     Medium  597915 Potomac River    0.520 02070011001750 With Digitized
  wbareacomi          ftype fcode shape_length streamleve streamorde streamcalc
1  120049843 ArtificialPath 55800  0.010190576          1          7          7
2  120049843 ArtificialPath 55800  0.077345846          1          7          7
3         NA           <NA>    NA           NA         NA         NA         NA
4  120049842 ArtificialPath 55800  0.034881270          1          7          7
5  120049843 ArtificialPath 55800  0.004499801          1          7          7
6  120049843 ArtificialPath 55800  0.005659154          1          7          7
   fromnode    tonode  hydroseq levelpathi pathlength terminalpa arbolatesu
1 200013957 200013963 200004967  200004858     32.552  200004858   27561.80
2 200014522 200014506 200005174  200004858     92.756  200004858   25753.90
3        NA        NA        NA         NA         NA         NA         NA
4 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
5 200013326 200013337 200005248  200004858    136.646  200004858   24764.56
6 200014231 200014188 200004927  200004858     25.399  200004858   27645.45
  divergence startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat
1          0         0          0       1  200004858  200004970  200004858
2          0         0          0       1  200004858  200005177  200004858
3         NA        NA         NA      NA         NA         NA         NA
4          0         0          0       1  200004858  200005277  200004858
5          0         0          0       1  200004858  200005252  200004858
6          0         0          0       1  200004858  200004930  200004858
  dnminorhyd dndraincou dnhydroseq frommeas    tomeas rtndiv vpuin vpuout
1          0          1  200004964  0.00000 100.00000      0     0      0
2          0          1  200005171  0.00000 100.00000      0     0      0
3         NA         NA         NA       NA        NA     NA    NA     NA
4          0          1  200005268  0.00000 100.00000      1     0      0
5          0          1  200005243 53.64653  64.98198      0     0      0
6          0          1  200004924 93.99937 100.00000      0     0      0
  areasqkm totdasqkm divdasqkm tidal totma  wbareatype pathtimema hwnodesqkm
1   0.9801  37046.62  37046.62     1 -9999 StreamRiver      -9999       <NA>
2  16.5015  34609.47  34609.47     1 -9999 StreamRiver      -9999       <NA>
3       NA        NA        NA    NA    NA        <NA>         NA       <NA>
4   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999       <NA>
5   1.0764  33341.80  33341.80     1 -9999 StreamRiver      -9999       <NA>
6   0.4041  37173.41  37156.41     1 -9999 StreamRiver      -9999       <NA>
  maxelevraw minelevraw maxelevsmo minelevsmo slope elevfixed hwtype slopelenkm
1      -9998          0          0          0 1e-05         0             1.041
2      -9998        -37          0          0 1e-05         0             6.985
3         NA         NA         NA         NA    NA      <NA>   <NA>         NA
4      -9998        -88          0          0 1e-05         0             3.688
5      -9998          0          0          0 1e-05         0             0.458
6      -9998          0          0          0 1e-05         0             0.520
     qa_ma va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01 va_01    qc_01 vc_01
1 15013.68 -9999 16235.63 -9999 15856.20 -9999 22018.38 -9999 18381.01 -9999
2 14083.91 -9999 15233.17 -9999 14855.31 -9999 20219.85 -9999 17079.56 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03 -9999 15322.78 -9999
5 13614.70 -9999 14727.21 -9999 14353.13 -9999 19302.66 -9999 16409.76 -9999
6 15055.19 -9999 16280.38 -9999 15900.95 -9999 22099.96 -9999 18439.68 -9999
     qe_01 ve_01    qa_02 va_02    qc_02 vc_02    qe_02 ve_02    qa_03 va_03
1 18609.74 -9999 23336.98 -9999 12841.90 -9999 19456.10 -9999 29765.65 -9999
2 17490.95 -9999 21495.62 -9999 12099.89 -9999 19007.85 -9999 27655.92 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 16219.54 -9999 19133.31 -9999 11121.65 -9999 18744.39 -9999 25024.92 -9999
5 16921.61 -9999 20581.18 -9999 11724.92 -9999 18819.36 -9999 26621.03 -9999
6 18668.42 -9999 23421.35 -9999 12875.50 -9999 19489.70 -9999 29863.54 -9999
     qc_03 vc_03    qe_03 ve_03    qa_04 va_04    qc_04 vc_04    qe_04 ve_04
1 22361.43 -9999 27048.02 -9999 24623.16 -9999 25118.86 -9999 25814.88 -9999
2 21074.01 -9999 26008.86 -9999 23213.12 -9999 23691.51 -9999 24388.47 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 19441.44 -9999 25348.35 -9999 21358.42 -9999 21812.97 -9999 22446.43 -9999
5 20435.59 -9999 25531.24 -9999 22514.85 -9999 22984.41 -9999 23681.36 -9999
6 22420.72 -9999 27107.32 -9999 24686.69 -9999 25183.16 -9999 25879.17 -9999
     qa_05 va_05     qc_05 vc_05    qe_05 ve_05     qa_06 va_06    qc_06 vc_06
1 18133.77 -9999 10601.970 -9999 18149.93 -9999 10323.755 -9999 5851.191 -9999
2 17209.87 -9999 10108.400 -9999 17630.07 -9999  9797.249 -9999 5591.191 -9999
3       NA    NA        NA    NA       NA    NA        NA    NA       NA    NA
4 15941.03 -9999  9426.704 -9999 16809.89 -9999  9070.622 -9999 5229.309 -9999
5 16768.39 -9999  9871.730 -9999 17388.99 -9999  9542.955 -9999 5464.961 -9999
6 18175.09 -9999 10623.991 -9999 18171.95 -9999 10347.374 -9999 5862.813 -9999
     qe_06 ve_06    qa_07 va_07    qc_07 vc_07    qe_07 ve_07    qa_08 va_08
1 11599.44 -9999 6546.831 -9999 2821.874 -9999 5835.183 -9999 4422.685 -9999
2 11332.59 -9999 6184.600 -9999 2690.755 -9999 5699.387 -9999 4162.237 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 10666.96 -9999 5702.503 -9999 2514.268 -9999 5531.090 -9999 3820.042 -9999
5 11207.71 -9999 6007.527 -9999 2626.204 -9999 5636.332 -9999 4037.483 -9999
6 11611.06 -9999 6563.069 -9999 2827.724 -9999 5841.033 -9999 4434.494 -9999
     qc_08 vc_08    qe_08 ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09
1 2615.095 -9999 5112.130 -9999 4139.053 -9999 2127.168 -9999 6605.921 -9999
2 2483.705 -9999 4974.338 -9999 3919.786 -9999 2039.295 -9999 6505.764 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 2309.167 -9999 4731.121 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999
5 2420.334 -9999 4914.801 -9999 3810.601 -9999 1995.127 -9999 6460.777 -9999
6 2621.025 -9999 5118.060 -9999 4149.386 -9999 2131.283 -9999 6610.036 -9999
     qa_10 va_10    qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11
1 4904.089 -9999 2252.154 -9999 8071.215 -9999 12167.83 -9999 6260.851 -9999
2 4740.249 -9999 2196.928 -9999 8002.059 -9999 11844.32 -9999 6117.288 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 4519.342 -9999 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999
5 4655.028 -9999 2168.000 -9999 7967.560 -9999 11622.89 -9999 6018.709 -9999
6 4911.470 -9999 2254.630 -9999 8073.691 -9999 12176.27 -9999 6264.592 -9999
     qe_11 ve_11    qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract
1 9822.913 -9999 19876.50 -9999 22052.61 -9999 17085.63 -9999      <NA>
2 9655.004 -9999 18652.71 -9999 20717.55 -9999 15798.19 -9999      <NA>
3       NA    NA       NA    NA       NA    NA       NA    NA      <NA>
4 9198.365 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999      <NA>
5 9553.964 -9999 17997.05 -9999 20001.67 -9999 15107.98 -9999      <NA>
6 9826.654 -9999 19928.36 -9999 22109.15 -9999 17142.17 -9999      <NA>
  surfarea rareahload rpuid vpuid enabled seg_len_m  seg_len_km total_len_km
1     <NA>       <NA>   02a    02       1  9.996857 0.009996857    189.04366
2     <NA>       <NA>   02a    02       1  9.998174 0.009998174    113.24524
3     <NA>       <NA>  <NA>  <NA>      NA        NA          NA           NA
4     <NA>       <NA>   02a    02       1  9.999907 0.009999907     43.64487
5     <NA>       <NA>   02a    02       1  9.997942 0.009997942     63.44830
6     <NA>       <NA>   02a    02       1  9.998431 0.009998431    198.47707
                 geometry
1 POINT (4629779 5403798)
2 POINT (4566316 5398961)
3 POINT (4618015 5401418)
4 POINT (4544472 5430461)
5 POINT (4541853 5413727)
6 POINT (4637977 5400242)
> segs_on_points$total_len_km
 [1] 189.04366 113.24524        NA  43.64487  63.44830 198.47707  33.58268
 [8] 127.26717 120.84432 120.84932        NA        NA 145.31932 198.47707
[15]  11.29786 195.37694  44.64321  57.93977  94.29240 148.12106 171.89161
[22]        NA
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> segs_on_points$comid
 [1]  4532325  4534599       NA 22340825  4529649  4532981 22340661  4539745
 [9]  4534565  4534545       NA       NA  4532167  4532981 22340553  4532825
[17] 22340825 22341043  4534649  4539945  4532319       NA
> unique(segs_on_points$comid)
 [1]  4532325  4534599       NA 22340825  4529649  4532981 22340661  4539745
 [9]  4534565  4534545  4532167 22340553  4532825 22341043  4534649  4539945
[17]  4532319
> duplicates(segs_on_points$comid)
Error in duplicates(segs_on_points$comid) :
  could not find function "duplicates"
> duplicated(segs_on_points$comid)
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[13] FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE
> duplicated(segs_on_points[!is.na(segs_on_points$comid),])
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE
[13] FALSE FALSE FALSE FALSE FALSE FALSE
> duplicated(segs_on_points[!is.na(segs_on_points$comid),]$comid)
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE
[13] FALSE  TRUE FALSE FALSE FALSE FALSE
> head(cb_station_data)
Simple feature collection with 6 features and 155 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -77.1887 ymin: 38.1378 xmax: -76.5058 ymax: 38.6699
Geodetic CRS:  WGS 84
# A tibble: 6 × 156
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
2 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
3 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
5 MDDNR EOTB      WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Piney P… XBE8396       2004
# ℹ 148 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   geometry <POINT [°]>, comid <int>, id <chr>, fdate <dttm>,
#   resolution <chr>, gnis_id <chr>, gnis_name <chr>, lengthkm <dbl>,
#   reachcode <chr>, flowdir <chr>, wbareacomi <int>, ftype <chr>, fcode <int>,
#   shape_length <dbl>, streamleve <int>, streamorde <int>, streamcalc <int>, …
# ℹ Use `colnames()` to see all variable names
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_join(cb_station_data) %>%
+   st_drop_geometry()
> head(segs_xy)
        X       Y rowid                       id.x  comid.x    fdate.x
1 4629779 5403798    38 nhdflowline_network.160914  4532325 2008-07-22
2 4566316 5398961   127 nhdflowline_network.161077  4534599 2008-07-22
3 4618015 5401418    NA                       <NA>       NA       <NA>
4 4544472 5430461   171 nhdflowline_network.159245 22340825 2008-07-22
5 4541853 5413727     4 nhdflowline_network.163319  4529649 2008-07-22
6 4637977 5400242   102 nhdflowline_network.163275  4532981 2008-07-22
  resolution.x gnis_id.x   gnis_name.x lengthkm.x    reachcode.x      flowdir.x
1       Medium    597915 Potomac River      1.041 02070011000040 With Digitized
2       Medium    597915 Potomac River      6.985 02070011000203 With Digitized
3         <NA>      <NA>          <NA>         NA           <NA>           <NA>
4       Medium    597915 Potomac River      3.688 02070010000004 With Digitized
5       Medium    597915 Potomac River      0.458 02070011001771 With Digitized
6       Medium    597915 Potomac River      0.520 02070011001750 With Digitized
  wbareacomi.x        ftype.x fcode.x shape_length.x streamleve.x streamorde.x
1    120049843 ArtificialPath   55800    0.010190576            1            7
2    120049843 ArtificialPath   55800    0.077345846            1            7
3           NA           <NA>      NA             NA           NA           NA
4    120049842 ArtificialPath   55800    0.034881270            1            7
5    120049843 ArtificialPath   55800    0.004499801            1            7
6    120049843 ArtificialPath   55800    0.005659154            1            7
  streamcalc.x fromnode.x  tonode.x hydroseq.x levelpathi.x pathlength.x
1            7  200013957 200013963  200004967    200004858       32.552
2            7  200014522 200014506  200005174    200004858       92.756
3           NA         NA        NA         NA           NA           NA
4            7  200087412 200087415  200005272    200004858      151.054
5            7  200013326 200013337  200005248    200004858      136.646
6            7  200014231 200014188  200004927    200004858       25.399
  terminalpa.x arbolatesu.x divergence.x startflag.x terminalfl.x dnlevel.x
1    200004858     27561.80            0           0            0         1
2    200004858     25753.90            0           0            0         1
3           NA           NA           NA          NA           NA        NA
4    200004858     22989.36            0           0            0         1
5    200004858     24764.56            0           0            0         1
6    200004858     27645.45            0           0            0         1
  uplevelpat.x uphydroseq.x dnlevelpat.x dnminorhyd.x dndraincou.x dnhydroseq.x
1    200004858    200004970    200004858            0            1    200004964
2    200004858    200005177    200004858            0            1    200005171
3           NA           NA           NA           NA           NA           NA
4    200004858    200005277    200004858            0            1    200005268
5    200004858    200005252    200004858            0            1    200005243
6    200004858    200004930    200004858            0            1    200004924
  frommeas.x  tomeas.x rtndiv.x vpuin.x vpuout.x areasqkm.x totdasqkm.x
1    0.00000 100.00000        0       0        0     0.9801    37046.62
2    0.00000 100.00000        0       0        0    16.5015    34609.47
3         NA        NA       NA      NA       NA         NA          NA
4    0.00000 100.00000        1       0        0     4.9689    31332.21
5   53.64653  64.98198        0       0        0     1.0764    33341.80
6   93.99937 100.00000        0       0        0     0.4041    37173.41
  divdasqkm.x tidal.x totma.x wbareatype.x pathtimema.x hwnodesqkm.x
1    37046.62       1   -9999  StreamRiver        -9999         <NA>
2    34609.47       1   -9999  StreamRiver        -9999         <NA>
3          NA      NA      NA         <NA>           NA         <NA>
4    31332.21       1   -9999  StreamRiver        -9999         <NA>
5    33341.80       1   -9999  StreamRiver        -9999         <NA>
6    37156.41       1   -9999  StreamRiver        -9999         <NA>
  maxelevraw.x minelevraw.x maxelevsmo.x minelevsmo.x slope.x elevfixed.x
1        -9998            0            0            0   1e-05           0
2        -9998          -37            0            0   1e-05           0
3           NA           NA           NA           NA      NA        <NA>
4        -9998          -88            0            0   1e-05           0
5        -9998            0            0            0   1e-05           0
6        -9998            0            0            0   1e-05           0
  hwtype.x slopelenkm.x  qa_ma.x va_ma.x  qc_ma.x vc_ma.x  qe_ma.x ve_ma.x
1                 1.041 15013.68   -9999 16235.63   -9999 15856.20   -9999
2                 6.985 14083.91   -9999 15233.17   -9999 14855.31   -9999
3     <NA>           NA       NA      NA       NA      NA       NA      NA
4                 3.688 12829.27   -9999 13880.12   -9999 13413.91   -9999
5                 0.458 13614.70   -9999 14727.21   -9999 14353.13   -9999
6                 0.520 15055.19   -9999 16280.38   -9999 15900.95   -9999
   qa_01.x va_01.x  qc_01.x vc_01.x  qe_01.x ve_01.x  qa_02.x va_02.x  qc_02.x
1 22018.38   -9999 18381.01   -9999 18609.74   -9999 23336.98   -9999 12841.90
2 20219.85   -9999 17079.56   -9999 17490.95   -9999 21495.62   -9999 12099.89
3       NA      NA       NA      NA       NA      NA       NA      NA       NA
4 17827.03   -9999 15322.78   -9999 16219.54   -9999 19133.31   -9999 11121.65
5 19302.66   -9999 16409.76   -9999 16921.61   -9999 20581.18   -9999 11724.92
6 22099.96   -9999 18439.68   -9999 18668.42   -9999 23421.35   -9999 12875.50
  vc_02.x  qe_02.x ve_02.x  qa_03.x va_03.x  qc_03.x vc_03.x  qe_03.x ve_03.x
1   -9999 19456.10   -9999 29765.65   -9999 22361.43   -9999 27048.02   -9999
2   -9999 19007.85   -9999 27655.92   -9999 21074.01   -9999 26008.86   -9999
3      NA       NA      NA       NA      NA       NA      NA       NA      NA
4   -9999 18744.39   -9999 25024.92   -9999 19441.44   -9999 25348.35   -9999
5   -9999 18819.36   -9999 26621.03   -9999 20435.59   -9999 25531.24   -9999
6   -9999 19489.70   -9999 29863.54   -9999 22420.72   -9999 27107.32   -9999
   qa_04.x va_04.x  qc_04.x vc_04.x  qe_04.x ve_04.x  qa_05.x va_05.x   qc_05.x
1 24623.16   -9999 25118.86   -9999 25814.88   -9999 18133.77   -9999 10601.970
2 23213.12   -9999 23691.51   -9999 24388.47   -9999 17209.87   -9999 10108.400
3       NA      NA       NA      NA       NA      NA       NA      NA        NA
4 21358.42   -9999 21812.97   -9999 22446.43   -9999 15941.03   -9999  9426.704
5 22514.85   -9999 22984.41   -9999 23681.36   -9999 16768.39   -9999  9871.730
6 24686.69   -9999 25183.16   -9999 25879.17   -9999 18175.09   -9999 10623.991
  vc_05.x  qe_05.x ve_05.x   qa_06.x va_06.x  qc_06.x vc_06.x  qe_06.x ve_06.x
1   -9999 18149.93   -9999 10323.755   -9999 5851.191   -9999 11599.44   -9999
2   -9999 17630.07   -9999  9797.249   -9999 5591.191   -9999 11332.59   -9999
3      NA       NA      NA        NA      NA       NA      NA       NA      NA
4   -9999 16809.89   -9999  9070.622   -9999 5229.309   -9999 10666.96   -9999
5   -9999 17388.99   -9999  9542.955   -9999 5464.961   -9999 11207.71   -9999
6   -9999 18171.95   -9999 10347.374   -9999 5862.813   -9999 11611.06   -9999
   qa_07.x va_07.x  qc_07.x vc_07.x  qe_07.x ve_07.x  qa_08.x va_08.x  qc_08.x
1 6546.831   -9999 2821.874   -9999 5835.183   -9999 4422.685   -9999 2615.095
2 6184.600   -9999 2690.755   -9999 5699.387   -9999 4162.237   -9999 2483.705
3       NA      NA       NA      NA       NA      NA       NA      NA       NA
4 5702.503   -9999 2514.268   -9999 5531.090   -9999 3820.042   -9999 2309.167
5 6007.527   -9999 2626.204   -9999 5636.332   -9999 4037.483   -9999 2420.334
6 6563.069   -9999 2827.724   -9999 5841.033   -9999 4434.494   -9999 2621.025
  vc_08.x  qe_08.x ve_08.x  qa_09.x va_09.x  qc_09.x vc_09.x  qe_09.x ve_09.x
1   -9999 5112.130   -9999 4139.053   -9999 2127.168   -9999 6605.921   -9999
2   -9999 4974.338   -9999 3919.786   -9999 2039.295   -9999 6505.764   -9999
3      NA       NA      NA       NA      NA       NA      NA       NA      NA
4   -9999 4731.121   -9999 3622.987   -9999 1918.561   -9999 5976.902   -9999
5   -9999 4914.801   -9999 3810.601   -9999 1995.127   -9999 6460.777   -9999
6   -9999 5118.060   -9999 4149.386   -9999 2131.283   -9999 6610.036   -9999
   qa_10.x va_10.x  qc_10.x vc_10.x  qe_10.x ve_10.x  qa_11.x va_11.x  qc_11.x
1 4904.089   -9999 2252.154   -9999 8071.215   -9999 12167.83   -9999 6260.851
2 4740.249   -9999 2196.928   -9999 8002.059   -9999 11844.32   -9999 6117.288
3       NA      NA       NA      NA       NA      NA       NA      NA       NA
4 4519.342   -9999 2121.644   -9999 7489.477   -9999 11112.25   -9999 5790.373
5 4655.028   -9999 2168.000   -9999 7967.560   -9999 11622.89   -9999 6018.709
6 4911.470   -9999 2254.630   -9999 8073.691   -9999 12176.27   -9999 6264.592
  vc_11.x  qe_11.x ve_11.x  qa_12.x va_12.x  qc_12.x vc_12.x  qe_12.x ve_12.x
1   -9999 9822.913   -9999 19876.50   -9999 22052.61   -9999 17085.63   -9999
2   -9999 9655.004   -9999 18652.71   -9999 20717.55   -9999 15798.19   -9999
3      NA       NA      NA       NA      NA       NA      NA       NA      NA
4   -9999 9198.365   -9999 16898.49   -9999 18801.18   -9999 13880.66   -9999
5   -9999 9553.964   -9999 17997.05   -9999 20001.67   -9999 15107.98   -9999
6   -9999 9826.654   -9999 19928.36   -9999 22109.15   -9999 17142.17   -9999
  lakefract.x surfarea.x rareahload.x rpuid.x vpuid.x enabled.x seg_len_m
1        <NA>       <NA>         <NA>     02a      02         1  9.996857
2        <NA>       <NA>         <NA>     02a      02         1  9.998174
3        <NA>       <NA>         <NA>    <NA>    <NA>        NA        NA
4        <NA>       <NA>         <NA>     02a      02         1  9.999907
5        <NA>       <NA>         <NA>     02a      02         1  9.997942
6        <NA>       <NA>         <NA>     02a      02         1  9.998431
   seg_len_km total_len_km  src src_sub data_type watershed watershed_sub
1 0.009996857    189.04366 <NA>    <NA>      <NA>      <NA>          <NA>
2 0.009998174    113.24524 <NA>    <NA>      <NA>      <NA>          <NA>
3          NA           NA <NA>    <NA>      <NA>      <NA>          <NA>
4 0.009999907     43.64487 <NA>    <NA>      <NA>      <NA>          <NA>
5 0.009997942     63.44830 <NA>    <NA>      <NA>      <NA>          <NA>
6 0.009998431    198.47707 <NA>    <NA>      <NA>      <NA>          <NA>
  site_name station start_year end_year station_depth top_sensor_depth_m
1      <NA>    <NA>         NA       NA          <NA>               NULL
2      <NA>    <NA>         NA       NA          <NA>               NULL
3      <NA>    <NA>         NA       NA          <NA>               NULL
4      <NA>    <NA>         NA       NA          <NA>               NULL
5      <NA>    <NA>         NA       NA          <NA>               NULL
6      <NA>    <NA>         NA       NA          <NA>               NULL
  station_depth_m   DO WQ_fixed WQ_fixed_waterlevel  url notes comid.y id.y
1            NULL NULL     NULL                NULL <NA>  <NA>      NA <NA>
2            NULL NULL     NULL                NULL <NA>  <NA>      NA <NA>
3            NULL NULL     NULL                NULL <NA>  <NA>      NA <NA>
4            NULL NULL     NULL                NULL <NA>  <NA>      NA <NA>
5            NULL NULL     NULL                NULL <NA>  <NA>      NA <NA>
6            NULL NULL     NULL                NULL <NA>  <NA>      NA <NA>
  fdate.y resolution.y gnis_id.y gnis_name.y lengthkm.y reachcode.y flowdir.y
1    <NA>         <NA>      <NA>        <NA>         NA        <NA>      <NA>
2    <NA>         <NA>      <NA>        <NA>         NA        <NA>      <NA>
3    <NA>         <NA>      <NA>        <NA>         NA        <NA>      <NA>
4    <NA>         <NA>      <NA>        <NA>         NA        <NA>      <NA>
5    <NA>         <NA>      <NA>        <NA>         NA        <NA>      <NA>
6    <NA>         <NA>      <NA>        <NA>         NA        <NA>      <NA>
  wbareacomi.y ftype.y fcode.y shape_length.y streamleve.y streamorde.y
1           NA    <NA>      NA             NA           NA           NA
2           NA    <NA>      NA             NA           NA           NA
3           NA    <NA>      NA             NA           NA           NA
4           NA    <NA>      NA             NA           NA           NA
5           NA    <NA>      NA             NA           NA           NA
6           NA    <NA>      NA             NA           NA           NA
  streamcalc.y fromnode.y tonode.y hydroseq.y levelpathi.y pathlength.y
1           NA         NA       NA         NA           NA           NA
2           NA         NA       NA         NA           NA           NA
3           NA         NA       NA         NA           NA           NA
4           NA         NA       NA         NA           NA           NA
5           NA         NA       NA         NA           NA           NA
6           NA         NA       NA         NA           NA           NA
  terminalpa.y arbolatesu.y divergence.y startflag.y terminalfl.y dnlevel.y
1           NA           NA           NA          NA           NA        NA
2           NA           NA           NA          NA           NA        NA
3           NA           NA           NA          NA           NA        NA
4           NA           NA           NA          NA           NA        NA
5           NA           NA           NA          NA           NA        NA
6           NA           NA           NA          NA           NA        NA
  uplevelpat.y uphydroseq.y dnlevelpat.y dnminorhyd.y dndraincou.y dnhydroseq.y
1           NA           NA           NA           NA           NA           NA
2           NA           NA           NA           NA           NA           NA
3           NA           NA           NA           NA           NA           NA
4           NA           NA           NA           NA           NA           NA
5           NA           NA           NA           NA           NA           NA
6           NA           NA           NA           NA           NA           NA
  frommeas.y tomeas.y rtndiv.y vpuin.y vpuout.y areasqkm.y totdasqkm.y
1         NA       NA       NA      NA       NA         NA          NA
2         NA       NA       NA      NA       NA         NA          NA
3         NA       NA       NA      NA       NA         NA          NA
4         NA       NA       NA      NA       NA         NA          NA
5         NA       NA       NA      NA       NA         NA          NA
6         NA       NA       NA      NA       NA         NA          NA
  divdasqkm.y tidal.y totma.y wbareatype.y pathtimema.y hwnodesqkm.y
1          NA      NA      NA         <NA>           NA         <NA>
2          NA      NA      NA         <NA>           NA         <NA>
3          NA      NA      NA         <NA>           NA         <NA>
4          NA      NA      NA         <NA>           NA         <NA>
5          NA      NA      NA         <NA>           NA         <NA>
6          NA      NA      NA         <NA>           NA         <NA>
  maxelevraw.y minelevraw.y maxelevsmo.y minelevsmo.y slope.y elevfixed.y
1           NA           NA           NA           NA      NA        <NA>
2           NA           NA           NA           NA      NA        <NA>
3           NA           NA           NA           NA      NA        <NA>
4           NA           NA           NA           NA      NA        <NA>
5           NA           NA           NA           NA      NA        <NA>
6           NA           NA           NA           NA      NA        <NA>
  hwtype.y slopelenkm.y qa_ma.y va_ma.y qc_ma.y vc_ma.y qe_ma.y ve_ma.y qa_01.y
1     <NA>           NA      NA      NA      NA      NA      NA      NA      NA
2     <NA>           NA      NA      NA      NA      NA      NA      NA      NA
3     <NA>           NA      NA      NA      NA      NA      NA      NA      NA
4     <NA>           NA      NA      NA      NA      NA      NA      NA      NA
5     <NA>           NA      NA      NA      NA      NA      NA      NA      NA
6     <NA>           NA      NA      NA      NA      NA      NA      NA      NA
  va_01.y qc_01.y vc_01.y qe_01.y ve_01.y qa_02.y va_02.y qc_02.y vc_02.y
1      NA      NA      NA      NA      NA      NA      NA      NA      NA
2      NA      NA      NA      NA      NA      NA      NA      NA      NA
3      NA      NA      NA      NA      NA      NA      NA      NA      NA
4      NA      NA      NA      NA      NA      NA      NA      NA      NA
5      NA      NA      NA      NA      NA      NA      NA      NA      NA
6      NA      NA      NA      NA      NA      NA      NA      NA      NA
  qe_02.y ve_02.y qa_03.y va_03.y qc_03.y vc_03.y qe_03.y ve_03.y qa_04.y
1      NA      NA      NA      NA      NA      NA      NA      NA      NA
2      NA      NA      NA      NA      NA      NA      NA      NA      NA
3      NA      NA      NA      NA      NA      NA      NA      NA      NA
4      NA      NA      NA      NA      NA      NA      NA      NA      NA
5      NA      NA      NA      NA      NA      NA      NA      NA      NA
6      NA      NA      NA      NA      NA      NA      NA      NA      NA
  va_04.y qc_04.y vc_04.y qe_04.y ve_04.y qa_05.y va_05.y qc_05.y vc_05.y
1      NA      NA      NA      NA      NA      NA      NA      NA      NA
2      NA      NA      NA      NA      NA      NA      NA      NA      NA
3      NA      NA      NA      NA      NA      NA      NA      NA      NA
4      NA      NA      NA      NA      NA      NA      NA      NA      NA
5      NA      NA      NA      NA      NA      NA      NA      NA      NA
6      NA      NA      NA      NA      NA      NA      NA      NA      NA
  qe_05.y ve_05.y qa_06.y va_06.y qc_06.y vc_06.y qe_06.y ve_06.y qa_07.y
1      NA      NA      NA      NA      NA      NA      NA      NA      NA
2      NA      NA      NA      NA      NA      NA      NA      NA      NA
3      NA      NA      NA      NA      NA      NA      NA      NA      NA
4      NA      NA      NA      NA      NA      NA      NA      NA      NA
5      NA      NA      NA      NA      NA      NA      NA      NA      NA
6      NA      NA      NA      NA      NA      NA      NA      NA      NA
  va_07.y qc_07.y vc_07.y qe_07.y ve_07.y qa_08.y va_08.y qc_08.y vc_08.y
1      NA      NA      NA      NA      NA      NA      NA      NA      NA
2      NA      NA      NA      NA      NA      NA      NA      NA      NA
3      NA      NA      NA      NA      NA      NA      NA      NA      NA
4      NA      NA      NA      NA      NA      NA      NA      NA      NA
5      NA      NA      NA      NA      NA      NA      NA      NA      NA
6      NA      NA      NA      NA      NA      NA      NA      NA      NA
  qe_08.y ve_08.y qa_09.y va_09.y qc_09.y vc_09.y qe_09.y ve_09.y qa_10.y
1      NA      NA      NA      NA      NA      NA      NA      NA      NA
2      NA      NA      NA      NA      NA      NA      NA      NA      NA
3      NA      NA      NA      NA      NA      NA      NA      NA      NA
4      NA      NA      NA      NA      NA      NA      NA      NA      NA
5      NA      NA      NA      NA      NA      NA      NA      NA      NA
6      NA      NA      NA      NA      NA      NA      NA      NA      NA
  va_10.y qc_10.y vc_10.y qe_10.y ve_10.y qa_11.y va_11.y qc_11.y vc_11.y
1      NA      NA      NA      NA      NA      NA      NA      NA      NA
2      NA      NA      NA      NA      NA      NA      NA      NA      NA
3      NA      NA      NA      NA      NA      NA      NA      NA      NA
4      NA      NA      NA      NA      NA      NA      NA      NA      NA
5      NA      NA      NA      NA      NA      NA      NA      NA      NA
6      NA      NA      NA      NA      NA      NA      NA      NA      NA
  qe_11.y ve_11.y qa_12.y va_12.y qc_12.y vc_12.y qe_12.y ve_12.y lakefract.y
1      NA      NA      NA      NA      NA      NA      NA      NA        <NA>
2      NA      NA      NA      NA      NA      NA      NA      NA        <NA>
3      NA      NA      NA      NA      NA      NA      NA      NA        <NA>
4      NA      NA      NA      NA      NA      NA      NA      NA        <NA>
5      NA      NA      NA      NA      NA      NA      NA      NA        <NA>
6      NA      NA      NA      NA      NA      NA      NA      NA        <NA>
  surfarea.y rareahload.y rpuid.y vpuid.y enabled.y
1       <NA>         <NA>    <NA>    <NA>        NA
2       <NA>         <NA>    <NA>    <NA>        NA
3       <NA>         <NA>    <NA>    <NA>        NA
4       <NA>         <NA>    <NA>    <NA>        NA
5       <NA>         <NA>    <NA>    <NA>        NA
6       <NA>         <NA>    <NA>    <NA>        NA
> head(segs_xy$total_len_km)
[1] 189.04366 113.24524        NA  43.64487  63.44830 198.47707
> nrow(segs_xy$total_len_km)
NULL
> nrow(segs_xy)
[1] 22
> nrow(segs_xy$station)
NULL
> segs_xy$station
 [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_on_points, by = 'comid')
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
Error in `map()`:
ℹ In index: 299.
ℹ With name: geometry.
Caused by error in `abort_unsupported_conversion()`:
! Don't know how to make an instance of <CellData> from something of class <sfc_POINT/sfc>.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'comid')
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> googlesheets4::write_sheet(segs_xy,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> head(gages_snapped)
Simple feature collection with 6 features and 2 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4541853 ymin: 5398961 xmax: 4637977 ymax: 5430461
Projected CRS: NAD83 / UTM zone 10N
        X       Y                geometry
1 4629779 5403798 POINT (4629779 5403798)
2 4566316 5398961 POINT (4566316 5398961)
3 4618015 5401418 POINT (4618015 5401418)
4 4544472 5430461 POINT (4544472 5430461)
5 4541853 5413727 POINT (4541853 5413727)
6 4637977 5400242 POINT (4637977 5400242)
> head(cb_station_proj)
Simple feature collection with 6 features and 156 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4545362 ymin: 5401191 xmax: 4638478 ymax: 5430415
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 6 × 157
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
2 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
3 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
5 MDDNR EOTB      WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Piney P… XBE8396       2004
# ℹ 149 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   geometry <POINT [m]>, comid.x <int>, id <chr>, comid.y <int>, fdate <dttm>,
#   resolution <chr>, gnis_id <chr>, gnis_name <chr>, lengthkm <dbl>,
#   reachcode <chr>, flowdir <chr>, wbareacomi <int>, ftype <chr>, fcode <int>,
#   shape_length <dbl>, streamleve <int>, streamorde <int>, streamcalc <int>, …
# ℹ Use `colnames()` to see all variable names
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "station",
+                                 max_dist = 5000000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > # create a 1 meter buffer around snapped point
+ poi_snapped_buff <-  st_buffer(gages_snapped, 5)
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > mapview(segs)
> # filter, if desired
+ segs_filt <- segs %>%
+   filter(
+       gnis_id != "1552968"
+     )
> segs_filt_dist <- segs_filt %>%
+   # drop the "loose ends" on either extent (upstream or downstream) of first/last gage
+   # filter(!rowid %in% c(232, 100, 66, 62, 63)) %>%
+   mutate(seg_len_m = units::drop_units(units::set_units(st_length(.), "m")),
+          seg_len_km = seg_len_m/1000) %>%
+   arrange(desc(hydroseq)) %>%
+   mutate(total_len_km = cumsum(seg_len_km)) # %>%
+   # filter to just cols of interest
+   # select(rowid, ogc_fid:comid, gnis_id:reachcode, streamorde, hydroseq, seg_len_km, total_len_km, geom)
> mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   ## mapview(gages_snapped, layer.name="conmon stations") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages")
+ > segs_on_points <- gages_snapped %>%
+   ## st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(segs_filt_dist)
> head(gages_snapped)
Simple feature collection with 6 features and 3 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4541853 ymin: 5398961 xmax: 4637977 ymax: 5430461
Projected CRS: NAD83 / UTM zone 10N
        X       Y station                geometry
1 4629779 5403798 XCE0055 POINT (4629779 5403798)
2 4566316 5398961 XDB4544 POINT (4566316 5398961)
3 4618015 5401418 XCD5599 POINT (4618015 5401418)
4 4544472 5430461 XFB0231 POINT (4544472 5430461)
5 4541853 5413727 XEA3687 POINT (4541853 5413727)
6 4637977 5400242 XBE8396 POINT (4637977 5400242)
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> head(segs_on_points)
Simple feature collection with 6 features and 145 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4541853 ymin: 5398961 xmax: 4637977 ymax: 5430461
Projected CRS: NAD83 / UTM zone 10N
        X       Y station rowid                         id    comid      fdate
1 4629779 5403798 XCE0055    38 nhdflowline_network.160914  4532325 2008-07-22
2 4566316 5398961 XDB4544   127 nhdflowline_network.161077  4534599 2008-07-22
3 4618015 5401418 XCD5599    NA                       <NA>       NA       <NA>
4 4544472 5430461 XFB0231   171 nhdflowline_network.159245 22340825 2008-07-22
5 4541853 5413727 XEA3687     4 nhdflowline_network.163319  4529649 2008-07-22
6 4637977 5400242 XBE8396   102 nhdflowline_network.163275  4532981 2008-07-22
  resolution gnis_id     gnis_name lengthkm      reachcode        flowdir
1     Medium  597915 Potomac River    1.041 02070011000040 With Digitized
2     Medium  597915 Potomac River    6.985 02070011000203 With Digitized
3       <NA>    <NA>          <NA>       NA           <NA>           <NA>
4     Medium  597915 Potomac River    3.688 02070010000004 With Digitized
5     Medium  597915 Potomac River    0.458 02070011001771 With Digitized
6     Medium  597915 Potomac River    0.520 02070011001750 With Digitized
  wbareacomi          ftype fcode shape_length streamleve streamorde streamcalc
1  120049843 ArtificialPath 55800  0.010190576          1          7          7
2  120049843 ArtificialPath 55800  0.077345846          1          7          7
3         NA           <NA>    NA           NA         NA         NA         NA
4  120049842 ArtificialPath 55800  0.034881270          1          7          7
5  120049843 ArtificialPath 55800  0.004499801          1          7          7
6  120049843 ArtificialPath 55800  0.005659154          1          7          7
   fromnode    tonode  hydroseq levelpathi pathlength terminalpa arbolatesu
1 200013957 200013963 200004967  200004858     32.552  200004858   27561.80
2 200014522 200014506 200005174  200004858     92.756  200004858   25753.90
3        NA        NA        NA         NA         NA         NA         NA
4 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
5 200013326 200013337 200005248  200004858    136.646  200004858   24764.56
6 200014231 200014188 200004927  200004858     25.399  200004858   27645.45
  divergence startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat
1          0         0          0       1  200004858  200004970  200004858
2          0         0          0       1  200004858  200005177  200004858
3         NA        NA         NA      NA         NA         NA         NA
4          0         0          0       1  200004858  200005277  200004858
5          0         0          0       1  200004858  200005252  200004858
6          0         0          0       1  200004858  200004930  200004858
  dnminorhyd dndraincou dnhydroseq frommeas    tomeas rtndiv vpuin vpuout
1          0          1  200004964  0.00000 100.00000      0     0      0
2          0          1  200005171  0.00000 100.00000      0     0      0
3         NA         NA         NA       NA        NA     NA    NA     NA
4          0          1  200005268  0.00000 100.00000      1     0      0
5          0          1  200005243 53.64653  64.98198      0     0      0
6          0          1  200004924 93.99937 100.00000      0     0      0
  areasqkm totdasqkm divdasqkm tidal totma  wbareatype pathtimema hwnodesqkm
1   0.9801  37046.62  37046.62     1 -9999 StreamRiver      -9999       <NA>
2  16.5015  34609.47  34609.47     1 -9999 StreamRiver      -9999       <NA>
3       NA        NA        NA    NA    NA        <NA>         NA       <NA>
4   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999       <NA>
5   1.0764  33341.80  33341.80     1 -9999 StreamRiver      -9999       <NA>
6   0.4041  37173.41  37156.41     1 -9999 StreamRiver      -9999       <NA>
  maxelevraw minelevraw maxelevsmo minelevsmo slope elevfixed hwtype slopelenkm
1      -9998          0          0          0 1e-05         0             1.041
2      -9998        -37          0          0 1e-05         0             6.985
3         NA         NA         NA         NA    NA      <NA>   <NA>         NA
4      -9998        -88          0          0 1e-05         0             3.688
5      -9998          0          0          0 1e-05         0             0.458
6      -9998          0          0          0 1e-05         0             0.520
     qa_ma va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01 va_01    qc_01 vc_01
1 15013.68 -9999 16235.63 -9999 15856.20 -9999 22018.38 -9999 18381.01 -9999
2 14083.91 -9999 15233.17 -9999 14855.31 -9999 20219.85 -9999 17079.56 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03 -9999 15322.78 -9999
5 13614.70 -9999 14727.21 -9999 14353.13 -9999 19302.66 -9999 16409.76 -9999
6 15055.19 -9999 16280.38 -9999 15900.95 -9999 22099.96 -9999 18439.68 -9999
     qe_01 ve_01    qa_02 va_02    qc_02 vc_02    qe_02 ve_02    qa_03 va_03
1 18609.74 -9999 23336.98 -9999 12841.90 -9999 19456.10 -9999 29765.65 -9999
2 17490.95 -9999 21495.62 -9999 12099.89 -9999 19007.85 -9999 27655.92 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 16219.54 -9999 19133.31 -9999 11121.65 -9999 18744.39 -9999 25024.92 -9999
5 16921.61 -9999 20581.18 -9999 11724.92 -9999 18819.36 -9999 26621.03 -9999
6 18668.42 -9999 23421.35 -9999 12875.50 -9999 19489.70 -9999 29863.54 -9999
     qc_03 vc_03    qe_03 ve_03    qa_04 va_04    qc_04 vc_04    qe_04 ve_04
1 22361.43 -9999 27048.02 -9999 24623.16 -9999 25118.86 -9999 25814.88 -9999
2 21074.01 -9999 26008.86 -9999 23213.12 -9999 23691.51 -9999 24388.47 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 19441.44 -9999 25348.35 -9999 21358.42 -9999 21812.97 -9999 22446.43 -9999
5 20435.59 -9999 25531.24 -9999 22514.85 -9999 22984.41 -9999 23681.36 -9999
6 22420.72 -9999 27107.32 -9999 24686.69 -9999 25183.16 -9999 25879.17 -9999
     qa_05 va_05     qc_05 vc_05    qe_05 ve_05     qa_06 va_06    qc_06 vc_06
1 18133.77 -9999 10601.970 -9999 18149.93 -9999 10323.755 -9999 5851.191 -9999
2 17209.87 -9999 10108.400 -9999 17630.07 -9999  9797.249 -9999 5591.191 -9999
3       NA    NA        NA    NA       NA    NA        NA    NA       NA    NA
4 15941.03 -9999  9426.704 -9999 16809.89 -9999  9070.622 -9999 5229.309 -9999
5 16768.39 -9999  9871.730 -9999 17388.99 -9999  9542.955 -9999 5464.961 -9999
6 18175.09 -9999 10623.991 -9999 18171.95 -9999 10347.374 -9999 5862.813 -9999
     qe_06 ve_06    qa_07 va_07    qc_07 vc_07    qe_07 ve_07    qa_08 va_08
1 11599.44 -9999 6546.831 -9999 2821.874 -9999 5835.183 -9999 4422.685 -9999
2 11332.59 -9999 6184.600 -9999 2690.755 -9999 5699.387 -9999 4162.237 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 10666.96 -9999 5702.503 -9999 2514.268 -9999 5531.090 -9999 3820.042 -9999
5 11207.71 -9999 6007.527 -9999 2626.204 -9999 5636.332 -9999 4037.483 -9999
6 11611.06 -9999 6563.069 -9999 2827.724 -9999 5841.033 -9999 4434.494 -9999
     qc_08 vc_08    qe_08 ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09
1 2615.095 -9999 5112.130 -9999 4139.053 -9999 2127.168 -9999 6605.921 -9999
2 2483.705 -9999 4974.338 -9999 3919.786 -9999 2039.295 -9999 6505.764 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 2309.167 -9999 4731.121 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999
5 2420.334 -9999 4914.801 -9999 3810.601 -9999 1995.127 -9999 6460.777 -9999
6 2621.025 -9999 5118.060 -9999 4149.386 -9999 2131.283 -9999 6610.036 -9999
     qa_10 va_10    qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11
1 4904.089 -9999 2252.154 -9999 8071.215 -9999 12167.83 -9999 6260.851 -9999
2 4740.249 -9999 2196.928 -9999 8002.059 -9999 11844.32 -9999 6117.288 -9999
3       NA    NA       NA    NA       NA    NA       NA    NA       NA    NA
4 4519.342 -9999 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999
5 4655.028 -9999 2168.000 -9999 7967.560 -9999 11622.89 -9999 6018.709 -9999
6 4911.470 -9999 2254.630 -9999 8073.691 -9999 12176.27 -9999 6264.592 -9999
     qe_11 ve_11    qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract
1 9822.913 -9999 19876.50 -9999 22052.61 -9999 17085.63 -9999      <NA>
2 9655.004 -9999 18652.71 -9999 20717.55 -9999 15798.19 -9999      <NA>
3       NA    NA       NA    NA       NA    NA       NA    NA      <NA>
4 9198.365 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999      <NA>
5 9553.964 -9999 17997.05 -9999 20001.67 -9999 15107.98 -9999      <NA>
6 9826.654 -9999 19928.36 -9999 22109.15 -9999 17142.17 -9999      <NA>
  surfarea rareahload rpuid vpuid enabled seg_len_m  seg_len_km total_len_km
1     <NA>       <NA>   02a    02       1  9.996857 0.009996857    189.04366
2     <NA>       <NA>   02a    02       1  9.998174 0.009998174    113.24524
3     <NA>       <NA>  <NA>  <NA>      NA        NA          NA           NA
4     <NA>       <NA>   02a    02       1  9.999907 0.009999907     43.64487
5     <NA>       <NA>   02a    02       1  9.997942 0.009997942     63.44830
6     <NA>       <NA>   02a    02       1  9.998431 0.009998431    198.47707
                 geometry
1 POINT (4629779 5403798)
2 POINT (4566316 5398961)
3 POINT (4618015 5401418)
4 POINT (4544472 5430461)
5 POINT (4541853 5413727)
6 POINT (4637977 5400242)
> googlesheets4::write_sheet(segs_xy,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station')
> head(cb_station_complete)
# A tibble: 6 × 299
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
2 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
3 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
5 MDDNR EOTB      WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Piney P… XBE8396       2004
# ℹ 291 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   comid.x <int>, id.x <chr>, fdate.x <dttm>, resolution.x <chr>,
#   gnis_id.x <chr>, gnis_name.x <chr>, lengthkm.x <dbl>, reachcode.x <chr>,
#   flowdir.x <chr>, wbareacomi.x <int>, ftype.x <chr>, fcode.x <int>,
#   shape_length.x <dbl>, streamleve.x <int>, streamorde.x <int>, …
# ℹ Use `colnames()` to see all variable names
> nrow(cb_station_complete)
[1] 22
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', keep.y = FALSE)
Error in `left_join()`:
! `...` must be empty.
✖ Problematic argument:
• keep.y = FALSE
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', keep = FALSE)
> head(cb_station_complete)
# A tibble: 6 × 299
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
2 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
3 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
5 MDDNR EOTB      WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Piney P… XBE8396       2004
# ℹ 291 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   comid.x <int>, id.x <chr>, fdate.x <dttm>, resolution.x <chr>,
#   gnis_id.x <chr>, gnis_name.x <chr>, lengthkm.x <dbl>, reachcode.x <chr>,
#   flowdir.x <chr>, wbareacomi.x <int>, ftype.x <chr>, fcode.x <int>,
#   shape_length.x <dbl>, streamleve.x <int>, streamorde.x <int>, …
# ℹ Use `colnames()` to see all variable names
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c("", ".x"))
> head(cb_station_complete)
# A tibble: 6 × 299
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
2 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
3 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
5 MDDNR EOTB      WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Piney P… XBE8396       2004
# ℹ 291 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   comid <int>, id <chr>, fdate <dttm>, resolution <chr>, gnis_id <chr>,
#   gnis_name <chr>, lengthkm <dbl>, reachcode <chr>, flowdir <chr>,
#   wbareacomi <int>, ftype <chr>, fcode <int>, shape_length <dbl>,
#   streamleve <int>, streamorde <int>, streamcalc <int>, fromnode <dbl>, …
# ℹ Use `colnames()` to see all variable names
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c(".x", ""))
> head(cb_station_complete)
# A tibble: 6 × 299
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
2 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
3 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
5 MDDNR EOTB      WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Piney P… XBE8396       2004
# ℹ 291 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   comid.x <int>, id.x <chr>, fdate.x <dttm>, resolution.x <chr>,
#   gnis_id.x <chr>, gnis_name.x <chr>, lengthkm.x <dbl>, reachcode.x <chr>,
#   flowdir.x <chr>, wbareacomi.x <int>, ftype.x <chr>, fcode.x <int>,
#   shape_length.x <dbl>, streamleve.x <int>, streamorde.x <int>, …
# ℹ Use `colnames()` to see all variable names
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c(".x", "")) %>%
+   select(-ends_with(".x"))
> head(cb_station_complete)
# A tibble: 6 × 161
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
2 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
3 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
5 MDDNR EOTB      WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Piney P… XBE8396       2004
# ℹ 153 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   X <dbl>, Y <dbl>, rowid <int>, id <chr>, comid <int>, fdate <dttm>,
#   resolution <chr>, gnis_id <chr>, gnis_name <chr>, lengthkm <dbl>,
#   reachcode <chr>, flowdir <chr>, wbareacomi <int>, ftype <chr>, fcode <int>,
#   shape_length <dbl>, streamleve <int>, streamorde <int>, streamcalc <int>, …
# ℹ Use `colnames()` to see all variable names
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "station",
+                                 max_dist = 5000000)
+ mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ + > # create a 1 meter buffer around snapped point
+ poi_snapped_buff <-  st_buffer(gages_snapped, 5)
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > mapview(segs)
> # filter, if desired
+ segs_filt <- segs %>%
+   filter(
+       ## gnis_id != "1552968"
+     )
> mapview(segs_filt, zcol="gnis_name")  +
+   # mapview(segs, color="blue", lwd=0.3) +
+   mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages")
+ > cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c("", ".x")) %>%
+   select(-ends_with(".x"))
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c(".x", "")) %>%
+   select(-ends_with(".x"))
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> cb_stations_manual <- cb_stations_manual.r %>%
+   filter(!is.na(site_code)) %>%
+   ## filter(start_year < 2009, end_year > 2007) %>%
+   rename(station = site_code)
> cb_stations_manual <- cb_stations_manual.r %>%
+   filter(!is.na(site_code)) %>%
+   ## filter(start_year < 2009, end_year > 2007) %>%
+   rename(station = site_code)
> # enter POI of most downstream station, or, downstream reference
+ poi_ds <- c(-77.264213, 38.365934)
+ ds_station_poi <- st_sfc(st_point(poi_ds), crs = 4326)
> (ds_station_poi_comid <- discover_nhdplus_id(ds_station_poi))
[1] 4534649
> # enter POI of most downstream station, or, downstream reference
+ poi_ds <- c(-77.264213, 38.365934)
+ ds_station_poi <- st_sfc(st_point(poi_ds), crs = 4326)
> (ds_station_poi_comid <- discover_nhdplus_id(ds_station_poi))
[1] 4534649
> # first make a list defining the sourcetype and ID
+ ds_station_poi_list <- list(featureSource = "comid",
+                   featureID = ds_station_poi_comid)
> # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UM",
+                                    distance = 80,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UM",  :
  data source specified as flowline or '' is deprecated
> ds_station_poi_ds_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "DM",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "DM",  :
  data source specified as flowline or '' is deprecated
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid, ds_station_poi_ds_flowlines$DM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # check layers in database:
+ st_layers(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"))
> Driver: GPKG
Available layers:
           layer_name geometry_type features fields crs_name
1 NHDFlowline_Network   Line String      141    138    NAD83
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> # CB stations as spatial object
+ cb_station_sf <- st_as_sf(cb_stations_manual, coords = c("long", "lat"), crs = 4326)
> head(cb_station_sf)
Simple feature collection with 6 features and 17 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -77.2728 ymin: 38.0905 xmax: -76.5227 ymax: 38.6699
Geodetic CRS:  WGS 84
# A tibble: 6 × 18
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XBE5486       2009
2 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
3 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
5 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Mallows… XDA8236       2018
# ℹ 10 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   geometry <POINT [°]>
> cb_station_sf$station
 [1] "XBE5486"       "XCE0055"       "XDB4544"       "XCD5599"
 [5] "XFB0231"       "XDA8236"       "XEA3687"       "XBE8396"
 [9] "XFB2184"       "XDC3807"       "XDB8884"       "XBF6843"
[13] "XBF7904"       "XCC8346"       "XCC9680"       "XCF1440"
[17] "WASD2"         "UP"            "PL"            "PPTM2"
[21] "NCDV2"         "USGS-01651827" "USGS-01651812" "USGS-01651007"
[25] "POH002.10"     "OCC002.47"     "POM000.97"     "MON000.18"
[29] "NOM002.36"     "WES000.18"
> # loop through each and use lat/long to get NHD flowline comid, then attach comid and nhd data to df
+ cb_station_sf$comid <- c()
+ rm(cb_station_nhd)
> cb_station_sf$comid <- c()
+ rm(cb_station_nhd)
+
+ for(i in 1:nrow(cb_station_sf)) {
+
+
+     cb_station_name <- cb_station_sf$station
+     print(paste('----', cb_station_name))
+     ## poi <- c(cb_station_sf$long[i], cb_station_sf$lat[i])
+
+     # turn into spatial object
+     ## cb_station_i <- st_sfc(st_point(poi), crs = 4326)
+     cb_station_i <- cb_station_sf$geometry[i]
+
+
+     # now figure out the nearest stream segment ID to our point
+     hgsite_comid <- discover_nhdplus_id(cb_station_i)
+     print(hgsite_comid)
+
+     # first make a list defining the sourcetype and ID
+     ## hgsite_list <- list(featureSource = "comid",
+     ##                   featureID = hgsite_comid)
+
+   if(!is.null(hgsite_comid)) {
+       cb_station_sf$comid[i] <- hgsite_comid
+       cb_station_i_nhd <- nhdplusTools::get_nhdplus(comid = hgsite_comid)
+
+       if(!exists('cb_station_nhd')) {
+         cb_station_nhd <- cb_station_i_nhd
+       } else {
+         cb_station_nhd <- rbind(cb_station_nhd, cb_station_i_nhd)
+       }
+   } else {
+       cb_station_sf$comid[i] <- NA
+   }
+
+ }
> Warning message:
In rm(cb_station_nhd) : object 'cb_station_nhd' not found
> > . + >  [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 4532885
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
 [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 4539849
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
 [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 4534575
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
 [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 4539795
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
 [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 22340825
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
 [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 4534781
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
 [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 4529659
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
 [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 4532471
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
 [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 22343523
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
 [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 4530723
Spherical geometry (s2) switched off
  C-c C-cSpherical geometry (s2) switched on
 [1] "---- XBE5486"       "---- XCE0055"       "---- XDB4544"
 [4] "---- XCD5599"       "---- XFB0231"       "---- XDA8236"
 [7] "---- XEA3687"       "---- XBE8396"       "---- XFB2184"
[10] "---- XDC3807"       "---- XDB8884"       "---- XBF6843"
[13] "---- XBF7904"       "---- XCC8346"       "---- XCC9680"
[16] "---- XCF1440"       "---- WASD2"         "---- UP"
[19] "---- PL"            "---- PPTM2"         "---- NCDV2"
[22] "---- USGS-01651827" "---- USGS-01651812" "---- USGS-01651007"
[25] "---- POH002.10"     "---- OCC002.47"     "---- POM000.97"
[28] "---- MON000.18"     "---- NOM002.36"     "---- WES000.18"
[1] 4534465
Spherical geometry (s2) switched off

Warning message:
Unknown or uninitialised column: `comid`.
Spherical geometry (s2) switched on
> cb_station_sf$comid <- c()
+ rm(cb_station_nhd)
+
+ for(i in 1:nrow(cb_station_sf)) {
+
+
+     cb_station_name <- cb_station_sf$station[i]
+     print(paste('----', cb_station_name))
+     ## poi <- c(cb_station_sf$long[i], cb_station_sf$lat[i])
+
+     # turn into spatial object
+     ## cb_station_i <- st_sfc(st_point(poi), crs = 4326)
+     cb_station_i <- cb_station_sf$geometry[i]
+
+
+     # now figure out the nearest stream segment ID to our point
+     hgsite_comid <- discover_nhdplus_id(cb_station_i)
+     print(hgsite_comid)
+
+     # first make a list defining the sourcetype and ID
+     ## hgsite_list <- list(featureSource = "comid",
+     ##                   featureID = hgsite_comid)
+
+   if(!is.null(hgsite_comid)) {
+       cb_station_sf$comid[i] <- hgsite_comid
+       cb_station_i_nhd <- nhdplusTools::get_nhdplus(comid = hgsite_comid)
+
+       if(!exists('cb_station_nhd')) {
+         cb_station_nhd <- cb_station_i_nhd
+       } else {
+         cb_station_nhd <- rbind(cb_station_nhd, cb_station_i_nhd)
+       }
+   } else {
+       cb_station_sf$comid[i] <- NA
+   }
+
+ }
[1] "---- XBE5486"
[1] 4532885
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XCE0055"
[1] 4539849
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XDB4544"
[1] 4534575
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XCD5599"
[1] 4539795
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XFB0231"
[1] 22340825
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XDA8236"
[1] 4534781
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XEA3687"
[1] 4529659
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XBE8396"
[1] 4532471
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XFB2184"
[1] 22343523
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XDC3807"
[1] 4530723
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XDB8884"
[1] 4534465
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XBF6843"
[1] 4532399
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XBF7904"
[1] 4532401
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XCC8346"
[1] 4539813
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XCC9680"
[1] 4532001
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XCF1440"
[1] 4532203
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- WASD2"
[1] 22341031
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- UP"
[1] 22340603
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- PL"
[1] 4532641
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- PPTM2"
[1] 4532451
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- NCDV2"
[1] 4539757
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- USGS-01651827"
[1] 22340557
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- USGS-01651812"
[1] 22338109
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- USGS-01651007"
[1] 22338089
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- POH002.10"
[1] 22343533
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- OCC002.47"
[1] 22343545
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- POM000.97"
[1] 4534677
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- MON000.18"
[1] 4532299
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- NOM002.36"
[1] 4532523
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- WES000.18"
[1] 4539919
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Warning message:
Unknown or uninitialised column: `comid`.
> # complete site dataframe
+ cb_station_data <- cb_station_sf %>%
+   st_join(cb_station_nhd)
> # reproject all
+ cb_station_proj <- st_transform(cb_station_data, crs = 26910)
+ cb_flowlines <- st_transform(ds_station_poi_streams, crs = 26910)
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "station",
+                                 max_dist = 5000000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > # create a 1 meter buffer around snapped point
+ poi_snapped_buff <-  st_buffer(gages_snapped, 5)
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > mapview(segs)
> nrow(segs)
[1] 197
> # filter, if desired
+ segs_filt <- segs %>%
+   filter(
+       ## gnis_id != "1552968"
+     )
> segs_filt_dist <- segs_filt %>%
+   # drop the "loose ends" on either extent (upstream or downstream) of first/last gage
+   # filter(!rowid %in% c(232, 100, 66, 62, 63)) %>%
+   mutate(seg_len_m = units::drop_units(units::set_units(st_length(.), "m")),
+          seg_len_km = seg_len_m/1000) %>%
+   arrange(desc(hydroseq)) %>%
+   mutate(total_len_km = cumsum(seg_len_km)) # %>%
+   # filter to just cols of interest
+   # select(rowid, ogc_fid:comid, gnis_id:reachcode, streamorde, hydroseq, seg_len_km, total_len_km, geom)
> segs_on_points <- gages_snapped %>%
+   ## st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(segs_filt_dist)
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> cb_station_complete <- cb_station_data %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c(".x", "")) %>%
+   select(-ends_with(".x"))
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
Auto-refreshing stale OAuth token.
✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> cb_station_sf$station[i]
[1] "WES000.18"
> cb_station_sf$station[12]
[1] "XBF6843"
> cb_station_sf$station[13]
[1] "XBF7904"
> cb_station_sf$station[14]
[1] "XCC8346"
> i = 14
> cb_station_name <- cb_station_sf$station[i]
+     print(paste('----', cb_station_name))
+     ## poi <- c(cb_station_sf$long[i], cb_station_sf$lat[i])
> [1] "---- XCC8346"
> > # turn into spatial object
+     ## cb_station_i <- st_sfc(st_point(poi), crs = 4326)
+     cb_station_i <- cb_station_sf$geometry[i]
> # now figure out the nearest stream segment ID to our point
+     hgsite_comid <- discover_nhdplus_id(cb_station_i)
+     print(hgsite_comid)
> > [1] 4539813
> cb_station_sf$comid[i] <- hgsite_comid
+       cb_station_i_nhd <- nhdplusTools::get_nhdplus(comid = hgsite_comid)
> Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
> cb_station_i_nhd
Simple feature collection with 1 feature and 138 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: -76.95728 ymin: 38.28951 xmax: -76.92294 ymax: 38.31311
Geodetic CRS:  WGS 84
# A tibble: 1 × 139
  id             comid fdate               resolution gnis_id gnis_name lengthkm
* <chr>          <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1 nhdflowline_… 4.54e6 2008-07-22 00:00:00 Medium     " "     " "           4.21
# ℹ 132 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <int>, dndraincou <int>, dnhydroseq <dbl>, frommeas <int>, …
# ℹ Use `colnames()` to see all variable names
> mapview(cb_station_sf)
> cb_station_nhd
Simple feature collection with 30 features and 138 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: -77.32238 ymin: 38.00143 xmax: -76.3453 ymax: 38.94262
Geodetic CRS:  WGS 84
# A tibble: 30 × 139
   id            comid fdate               resolution gnis_id gnis_name lengthkm
 * <chr>         <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
 1 nhdflowline… 4.53e6 2008-07-22 00:00:00 Medium     "59791… "Potomac…    8.17
 2 nhdflowline… 4.54e6 2008-07-22 00:00:00 Medium     " "     " "          3.74
 3 nhdflowline… 4.53e6 2008-07-22 00:00:00 Medium     " "     " "          0.712
 4 nhdflowline… 4.54e6 2008-07-22 00:00:00 Medium     "59465… "Cherry …    0.869
 5 nhdflowline… 2.23e7 2008-07-22 00:00:00 Medium     "59791… "Potomac…    3.69
 6 nhdflowline… 4.53e6 2008-07-22 00:00:00 Medium     " "     " "          2.80
 7 nhdflowline… 4.53e6 2008-07-22 00:00:00 Medium     " "     " "          0.694
 8 nhdflowline… 4.53e6 2008-07-22 00:00:00 Medium     " "     " "          4.86
 9 nhdflowline… 2.23e7 2008-07-22 00:00:00 Medium     "59790… "Piscata…    2.54
10 nhdflowline… 4.53e6 1999-08-13 00:00:00 Medium     "58665… "Popes C…    2.38
# ℹ 20 more rows
# ℹ 132 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>, …
# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names
> cb_station_nhd[14,]
Simple feature collection with 1 feature and 138 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: -76.95728 ymin: 38.28951 xmax: -76.92294 ymax: 38.31311
Geodetic CRS:  WGS 84
# A tibble: 1 × 139
  id             comid fdate               resolution gnis_id gnis_name lengthkm
  <chr>          <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1 nhdflowline_… 4.54e6 2008-07-22 00:00:00 Medium     " "     " "           4.21
# ℹ 132 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <int>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> cb_station_sf
Simple feature collection with 30 features and 18 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -77.30485 ymin: 38.0288 xmax: -76.3355 ymax: 38.93417
Geodetic CRS:  WGS 84
# A tibble: 30 × 19
   src   src_sub  data_type watershed watershed_sub site_name station start_year
 * <chr> <chr>    <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
 1 MDDNR EOTB-pr… WQ        Potomac … mainstem      "Potomac… XBE5486       2009
 2 MDDNR EOTB-pr… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
 3 MDDNR EOTB     WQ        Potomac … mainstem      "Blossom… XDB4544       2006
 4 MDDNR EOTB     WQ        Potomac … mainstem      "Breton … XCD5599       2006
 5 MDDNR EOTB     WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
 6 MDDNR EOTB     WQ        Potomac … mainstem      "Mallows… XDA8236       2018
 7 MDDNR EOTB     WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
 8 MDDNR EOTB     WQ        Potomac … mainstem      "Piney P… XBE8396       2004
 9 MDDNR EOTB     WQ        Potomac … mainstem      "Piscata… XFB2184       2004
10 MDDNR EOTB     WQ        Potomac … mainstem      "Popes C… XDC3807       2006
# ℹ 20 more rows
# ℹ 11 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   geometry <POINT [°]>, comid <int>
# ℹ Use `print(n = ...)` to see more rows
> cb_station_sf$station
 [1] "XBE5486"       "XCE0055"       "XDB4544"       "XCD5599"
 [5] "XFB0231"       "XDA8236"       "XEA3687"       "XBE8396"
 [9] "XFB2184"       "XDC3807"       "XDB8884"       "XBF6843"
[13] "XBF7904"       "XCC8346"       "XCC9680"       "XCF1440"
[17] "WASD2"         "UP"            "PL"            "PPTM2"
[21] "NCDV2"         "USGS-01651827" "USGS-01651812" "USGS-01651007"
[25] "POH002.10"     "OCC002.47"     "POM000.97"     "MON000.18"
[29] "NOM002.36"     "WES000.18"
> head(cb_station_sf)
Simple feature collection with 6 features and 18 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -77.2728 ymin: 38.0905 xmax: -76.5227 ymax: 38.6699
Geodetic CRS:  WGS 84
# A tibble: 6 × 19
  src   src_sub   data_type watershed watershed_sub site_name station start_year
  <chr> <chr>     <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
1 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XBE5486       2009
2 MDDNR EOTB-pro… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
3 MDDNR EOTB      WQ        Potomac … mainstem      "Blossom… XDB4544       2006
4 MDDNR EOTB      WQ        Potomac … mainstem      "Breton … XCD5599       2006
5 MDDNR EOTB      WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
6 MDDNR EOTB      WQ        Potomac … mainstem      "Mallows… XDA8236       2018
# ℹ 11 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   geometry <POINT [°]>, comid <int>
> head(cb_station_nhd)
Simple feature collection with 6 features and 138 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: -77.29637 ymin: 38.06123 xmax: -76.465 ymax: 38.68487
Geodetic CRS:  WGS 84
# A tibble: 6 × 139
  id             comid fdate               resolution gnis_id gnis_name lengthkm
  <chr>          <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
1 nhdflowline_… 4.53e6 2008-07-22 00:00:00 Medium     "59791… "Potomac…    8.17
2 nhdflowline_… 4.54e6 2008-07-22 00:00:00 Medium     " "     " "          3.74
3 nhdflowline_… 4.53e6 2008-07-22 00:00:00 Medium     " "     " "          0.712
4 nhdflowline_… 4.54e6 2008-07-22 00:00:00 Medium     "59465… "Cherry …    0.869
5 nhdflowline_… 2.23e7 2008-07-22 00:00:00 Medium     "59791… "Potomac…    3.69
6 nhdflowline_… 4.53e6 2008-07-22 00:00:00 Medium     " "     " "          2.80
# ℹ 132 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>,
#   dnminorhyd <int>, dndraincou <int>, dnhydroseq <dbl>, frommeas <dbl>, …
# ℹ Use `colnames()` to see all variable names
> # reproject all
+ cb_station_proj <- st_transform(cb_station_sf, crs = 26910)
+ cb_flowlines <- st_transform(ds_station_poi_streams, crs = 26910)
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "station",
+                                 max_dist = 5000000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > # create a 1 meter buffer around snapped point
+ poi_snapped_buff <-  st_buffer(gages_snapped, 5)
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > mapview(segs)
> # filter, if desired
+ segs_filt <- segs %>%
+   filter(
+       ## gnis_id != "1552968"
+     )
> mapview(segs_filt, zcol="gnis_name")  +
+   # mapview(segs, color="blue", lwd=0.3) +
+   mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages")
+ > segs_filt_dist <- segs_filt %>%
+   # drop the "loose ends" on either extent (upstream or downstream) of first/last gage
+   # filter(!rowid %in% c(232, 100, 66, 62, 63)) %>%
+   mutate(seg_len_m = units::drop_units(units::set_units(st_length(.), "m")),
+          seg_len_km = seg_len_m/1000) %>%
+   arrange(desc(hydroseq)) %>%
+   mutate(total_len_km = cumsum(seg_len_km)) # %>%
+   # filter to just cols of interest
+   # select(rowid, ogc_fid:comid, gnis_id:reachcode, streamorde, hydroseq, seg_len_km, total_len_km, geom)
> mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   ## mapview(gages_snapped, layer.name="conmon stations") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages")
+ > segs_on_points <- gages_snapped %>%
+   ## st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(segs_filt_dist)
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> gages_snapped
Simple feature collection with 30 features and 3 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4537289 ymin: 5387847 xmax: 4663734 ymax: 5457729
Projected CRS: NAD83 / UTM zone 10N
First 10 features:
         X       Y station                geometry
1  4640574 5399698 XBE5486 POINT (4640574 5399698)
2  4629779 5403798 XCE0055 POINT (4629779 5403798)
3  4566316 5398961 XDB4544 POINT (4566316 5398961)
4  4618015 5401418 XCD5599 POINT (4618015 5401418)
5  4544472 5430461 XFB0231 POINT (4544472 5430461)
6  4543733 5397905 XDA8236 POINT (4543733 5397905)
7  4541853 5413727 XEA3687 POINT (4541853 5413727)
8  4637977 5400242 XBE8396 POINT (4637977 5400242)
9  4548831 5438869 XFB2184 POINT (4548831 5438869)
10 4575424 5405083 XDC3807 POINT (4575424 5405083)
> head(segs_xy)
        X       Y station rowid                         id    comid      fdate
1 4640574 5399698 XBE5486    NA                       <NA>       NA       <NA>
2 4629779 5403798 XCE0055    38 nhdflowline_network.160914  4532325 2008-07-22
3 4566316 5398961 XDB4544   135 nhdflowline_network.161077  4534599 2008-07-22
4 4618015 5401418 XCD5599    NA                       <NA>       NA       <NA>
5 4544472 5430461 XFB0231   187 nhdflowline_network.159245 22340825 2008-07-22
6 4543733 5397905 XDA8236    NA                       <NA>       NA       <NA>
  resolution gnis_id     gnis_name lengthkm      reachcode        flowdir
1       <NA>    <NA>          <NA>       NA           <NA>           <NA>
2     Medium  597915 Potomac River    1.041 02070011000040 With Digitized
3     Medium  597915 Potomac River    6.985 02070011000203 With Digitized
4       <NA>    <NA>          <NA>       NA           <NA>           <NA>
5     Medium  597915 Potomac River    3.688 02070010000004 With Digitized
6       <NA>    <NA>          <NA>       NA           <NA>           <NA>
  wbareacomi          ftype fcode shape_length streamleve streamorde streamcalc
1         NA           <NA>    NA           NA         NA         NA         NA
2  120049843 ArtificialPath 55800   0.01019058          1          7          7
3  120049843 ArtificialPath 55800   0.07734585          1          7          7
4         NA           <NA>    NA           NA         NA         NA         NA
5  120049842 ArtificialPath 55800   0.03488127          1          7          7
6         NA           <NA>    NA           NA         NA         NA         NA
   fromnode    tonode  hydroseq levelpathi pathlength terminalpa arbolatesu
1        NA        NA        NA         NA         NA         NA         NA
2 200013957 200013963 200004967  200004858     32.552  200004858   27561.80
3 200014522 200014506 200005174  200004858     92.756  200004858   25753.90
4        NA        NA        NA         NA         NA         NA         NA
5 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
6        NA        NA        NA         NA         NA         NA         NA
  divergence startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat
1         NA        NA         NA      NA         NA         NA         NA
2          0         0          0       1  200004858  200004970  200004858
3          0         0          0       1  200004858  200005177  200004858
4         NA        NA         NA      NA         NA         NA         NA
5          0         0          0       1  200004858  200005277  200004858
6         NA        NA         NA      NA         NA         NA         NA
  dnminorhyd dndraincou dnhydroseq frommeas tomeas rtndiv vpuin vpuout areasqkm
1         NA         NA         NA       NA     NA     NA    NA     NA       NA
2          0          1  200004964        0    100      0     0      0   0.9801
3          0          1  200005171        0    100      0     0      0  16.5015
4         NA         NA         NA       NA     NA     NA    NA     NA       NA
5          0          1  200005268        0    100      1     0      0   4.9689
6         NA         NA         NA       NA     NA     NA    NA     NA       NA
  totdasqkm divdasqkm tidal totma  wbareatype pathtimema hwnodesqkm maxelevraw
1        NA        NA    NA    NA        <NA>         NA       <NA>         NA
2  37046.62  37046.62     1 -9999 StreamRiver      -9999       <NA>      -9998
3  34609.47  34609.47     1 -9999 StreamRiver      -9999       <NA>      -9998
4        NA        NA    NA    NA        <NA>         NA       <NA>         NA
5  31332.21  31332.21     1 -9999 StreamRiver      -9999       <NA>      -9998
6        NA        NA    NA    NA        <NA>         NA       <NA>         NA
  minelevraw maxelevsmo minelevsmo slope elevfixed hwtype slopelenkm    qa_ma
1         NA         NA         NA    NA      <NA>   <NA>         NA       NA
2          0          0          0 1e-05         0             1.041 15013.68
3        -37          0          0 1e-05         0             6.985 14083.91
4         NA         NA         NA    NA      <NA>   <NA>         NA       NA
5        -88          0          0 1e-05         0             3.688 12829.27
6         NA         NA         NA    NA      <NA>   <NA>         NA       NA
  va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01 va_01    qc_01 vc_01    qe_01
1    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2 -9999 16235.63 -9999 15856.20 -9999 22018.38 -9999 18381.01 -9999 18609.74
3 -9999 15233.17 -9999 14855.31 -9999 20219.85 -9999 17079.56 -9999 17490.95
4    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5 -9999 13880.12 -9999 13413.91 -9999 17827.03 -9999 15322.78 -9999 16219.54
6    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
  ve_01    qa_02 va_02    qc_02 vc_02    qe_02 ve_02    qa_03 va_03    qc_03
1    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2 -9999 23336.98 -9999 12841.90 -9999 19456.10 -9999 29765.65 -9999 22361.43
3 -9999 21495.62 -9999 12099.89 -9999 19007.85 -9999 27655.92 -9999 21074.01
4    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5 -9999 19133.31 -9999 11121.65 -9999 18744.39 -9999 25024.92 -9999 19441.44
6    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
  vc_03    qe_03 ve_03    qa_04 va_04    qc_04 vc_04    qe_04 ve_04    qa_05
1    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2 -9999 27048.02 -9999 24623.16 -9999 25118.86 -9999 25814.88 -9999 18133.77
3 -9999 26008.86 -9999 23213.12 -9999 23691.51 -9999 24388.47 -9999 17209.87
4    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5 -9999 25348.35 -9999 21358.42 -9999 21812.97 -9999 22446.43 -9999 15941.03
6    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
  va_05     qc_05 vc_05    qe_05 ve_05     qa_06 va_06    qc_06 vc_06    qe_06
1    NA        NA    NA       NA    NA        NA    NA       NA    NA       NA
2 -9999 10601.970 -9999 18149.93 -9999 10323.755 -9999 5851.191 -9999 11599.44
3 -9999 10108.400 -9999 17630.07 -9999  9797.249 -9999 5591.191 -9999 11332.59
4    NA        NA    NA       NA    NA        NA    NA       NA    NA       NA
5 -9999  9426.704 -9999 16809.89 -9999  9070.622 -9999 5229.309 -9999 10666.96
6    NA        NA    NA       NA    NA        NA    NA       NA    NA       NA
  ve_06    qa_07 va_07    qc_07 vc_07    qe_07 ve_07    qa_08 va_08    qc_08
1    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2 -9999 6546.831 -9999 2821.874 -9999 5835.183 -9999 4422.685 -9999 2615.095
3 -9999 6184.600 -9999 2690.755 -9999 5699.387 -9999 4162.237 -9999 2483.705
4    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5 -9999 5702.503 -9999 2514.268 -9999 5531.090 -9999 3820.042 -9999 2309.167
6    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
  vc_08    qe_08 ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09    qa_10
1    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2 -9999 5112.130 -9999 4139.053 -9999 2127.168 -9999 6605.921 -9999 4904.089
3 -9999 4974.338 -9999 3919.786 -9999 2039.295 -9999 6505.764 -9999 4740.249
4    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5 -9999 4731.121 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342
6    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
  va_10    qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11    qe_11
1    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2 -9999 2252.154 -9999 8071.215 -9999 12167.83 -9999 6260.851 -9999 9822.913
3 -9999 2196.928 -9999 8002.059 -9999 11844.32 -9999 6117.288 -9999 9655.004
4    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5 -9999 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
6    NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
  ve_11    qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract surfarea
1    NA       NA    NA       NA    NA       NA    NA      <NA>     <NA>
2 -9999 19876.50 -9999 22052.61 -9999 17085.63 -9999      <NA>     <NA>
3 -9999 18652.71 -9999 20717.55 -9999 15798.19 -9999      <NA>     <NA>
4    NA       NA    NA       NA    NA       NA    NA      <NA>     <NA>
5 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999      <NA>     <NA>
6    NA       NA    NA       NA    NA       NA    NA      <NA>     <NA>
  rareahload rpuid vpuid enabled seg_len_m  seg_len_km total_len_km
1       <NA>  <NA>  <NA>      NA        NA          NA           NA
2       <NA>   02a    02       1  9.996857 0.009996857    189.04366
3       <NA>   02a    02       1  9.998174 0.009998174    113.24524
4       <NA>  <NA>  <NA>      NA        NA          NA           NA
5       <NA>   02a    02       1  9.999907 0.009999907     43.64487
6       <NA>  <NA>  <NA>      NA        NA          NA           NA
> cb_station_complete <- gages_snapped %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c(".x", "")) %>%
+   select(-ends_with(".x"))
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> cb_station_sf
Simple feature collection with 30 features and 18 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -77.30485 ymin: 38.0288 xmax: -76.3355 ymax: 38.93417
Geodetic CRS:  WGS 84
# A tibble: 30 × 19
   src   src_sub  data_type watershed watershed_sub site_name station start_year
 * <chr> <chr>    <chr>     <chr>     <chr>         <chr>     <chr>        <dbl>
 1 MDDNR EOTB-pr… WQ        Potomac … mainstem      "Potomac… XBE5486       2009
 2 MDDNR EOTB-pr… WQ        Potomac … mainstem      "Potomac… XCE0055       2007
 3 MDDNR EOTB     WQ        Potomac … mainstem      "Blossom… XDB4544       2006
 4 MDDNR EOTB     WQ        Potomac … mainstem      "Breton … XCD5599       2006
 5 MDDNR EOTB     WQ        Potomac … mainstem      "Fenwick" XFB0231       2004
 6 MDDNR EOTB     WQ        Potomac … mainstem      "Mallows… XDA8236       2018
 7 MDDNR EOTB     WQ        Potomac … mainstem      "Mattawo… XEA3687       2004
 8 MDDNR EOTB     WQ        Potomac … mainstem      "Piney P… XBE8396       2004
 9 MDDNR EOTB     WQ        Potomac … mainstem      "Piscata… XFB2184       2004
10 MDDNR EOTB     WQ        Potomac … mainstem      "Popes C… XDC3807       2006
# ℹ 20 more rows
# ℹ 11 more variables: end_year <dbl>, station_depth <chr>,
#   top_sensor_depth_m <list>, station_depth_m <list>, DO <list>,
#   WQ_fixed <list>, WQ_fixed_waterlevel <list>, url <chr>, notes <chr>,
#   geometry <POINT [°]>, comid <int>
# ℹ Use `print(n = ...)` to see more rows
> cb_station_sf$comid
 [1]  4532885  4539849  4534575  4539795 22340825  4534781  4529659  4532471
 [9] 22343523  4530723  4534465  4532399  4532401  4539813  4532001  4532203
[17] 22341031 22340603  4532641  4532451  4539757 22340557 22338109 22338089
[25] 22343533 22343545  4534677  4532299  4532523  4539919
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "station",
+                                 max_dist = 1000000)
+ mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ + > segs_filt_dist <- segs_filt %>%
+   stplanr::line_breakup(gages_snapped) %>%
+   # drop the "loose ends" on either extent (upstream or downstream) of first/last gage
+   # filter(!rowid %in% c(232, 100, 66, 62, 63)) %>%
+   mutate(seg_len_m = units::drop_units(units::set_units(st_length(.), "m")),
+          seg_len_km = seg_len_m/1000) %>%
+   arrange(desc(hydroseq)) %>%
+   mutate(total_len_km = cumsum(seg_len_km)) # %>%
+   # filter to just cols of interest
+   # select(rowid, ogc_fid:comid, gnis_id:reachcode, streamorde, hydroseq, seg_len_km, total_len_km, geom)
+ > mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   ## mapview(gages_snapped, layer.name="conmon stations") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages")
+ > segs_on_points
Simple feature collection with 31 features and 145 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4537289 ymin: 5387847 xmax: 4663734 ymax: 5457729
Projected CRS: NAD83 / UTM zone 10N
First 10 features:
         X       Y station rowid                         id    comid      fdate
1  4640574 5399698 XBE5486    NA                       <NA>       NA       <NA>
2  4629779 5403798 XCE0055    38 nhdflowline_network.160914  4532325 2008-07-22
3  4566316 5398961 XDB4544   135 nhdflowline_network.161077  4534599 2008-07-22
4  4618015 5401418 XCD5599    NA                       <NA>       NA       <NA>
5  4544472 5430461 XFB0231   187 nhdflowline_network.159245 22340825 2008-07-22
6  4543733 5397905 XDA8236    NA                       <NA>       NA       <NA>
7  4541853 5413727 XEA3687     4 nhdflowline_network.163319  4529649 2008-07-22
8  4637977 5400242 XBE8396   106 nhdflowline_network.163275  4532981 2008-07-22
9  4548831 5438869 XFB2184   180 nhdflowline_network.159272 22340661 2008-07-22
10 4575424 5405083 XDC3807   153 nhdflowline_network.161051  4539745 2008-07-22
   resolution gnis_id     gnis_name lengthkm      reachcode        flowdir
1        <NA>    <NA>          <NA>       NA           <NA>           <NA>
2      Medium  597915 Potomac River    1.041 02070011000040 With Digitized
3      Medium  597915 Potomac River    6.985 02070011000203 With Digitized
4        <NA>    <NA>          <NA>       NA           <NA>           <NA>
5      Medium  597915 Potomac River    3.688 02070010000004 With Digitized
6        <NA>    <NA>          <NA>       NA           <NA>           <NA>
7      Medium  597915 Potomac River    0.458 02070011001771 With Digitized
8      Medium  597915 Potomac River    0.520 02070011001750 With Digitized
9      Medium  597915 Potomac River    4.475 02070010000033 With Digitized
10     Medium  597915 Potomac River    1.543 02070011000185 With Digitized
   wbareacomi          ftype fcode shape_length streamleve streamorde
1          NA           <NA>    NA           NA         NA         NA
2   120049843 ArtificialPath 55800  0.010190576          1          7
3   120049843 ArtificialPath 55800  0.077345846          1          7
4          NA           <NA>    NA           NA         NA         NA
5   120049842 ArtificialPath 55800  0.034881270          1          7
6          NA           <NA>    NA           NA         NA         NA
7   120049843 ArtificialPath 55800  0.004499801          1          7
8   120049843 ArtificialPath 55800  0.005659154          1          7
9   120049842 ArtificialPath 55800  0.041452856          1          7
10  120049843 ArtificialPath 55800  0.014755067          1          7
   streamcalc  fromnode    tonode  hydroseq levelpathi pathlength terminalpa
1          NA        NA        NA        NA         NA         NA         NA
2           7 200013957 200013963 200004967  200004858     32.552  200004858
3           7 200014522 200014506 200005174  200004858     92.756  200004858
4          NA        NA        NA        NA         NA         NA         NA
5           7 200087412 200087415 200005272  200004858    151.054  200004858
6          NA        NA        NA        NA         NA         NA         NA
7           7 200013326 200013337 200005248  200004858    136.646  200004858
8           7 200014231 200014188 200004927  200004858     25.399  200004858
9           7 200087330 200087336 200005291  200004858    161.292  200004858
10          7 200014913 200014509 200005155  200004858     83.103  200004858
   arbolatesu divergence startflag terminalfl dnlevel uplevelpat uphydroseq
1          NA         NA        NA         NA      NA         NA         NA
2    27561.80          0         0          0       1  200004858  200004970
3    25753.90          0         0          0       1  200004858  200005177
4          NA         NA        NA         NA      NA         NA         NA
5    22989.36          0         0          0       1  200004858  200005277
6          NA         NA        NA         NA      NA         NA         NA
7    24764.56          0         0          0       1  200004858  200005252
8    27645.45          0         0          0       1  200004858  200004930
9    22785.24          0         0          0       1  200004858  200005294
10   26067.23          0         0          0       1  200004858  200005158
   dnlevelpat dnminorhyd dndraincou dnhydroseq frommeas    tomeas rtndiv vpuin
1          NA         NA         NA         NA       NA        NA     NA    NA
2   200004858          0          1  200004964  0.00000 100.00000      0     0
3   200004858          0          1  200005171  0.00000 100.00000      0     0
4          NA         NA         NA         NA       NA        NA     NA    NA
5   200004858          0          1  200005268  0.00000 100.00000      1     0
6          NA         NA         NA         NA       NA        NA     NA    NA
7   200004858          0          1  200005243 53.64653  64.98198      0     0
8   200004858          0          1  200004924 93.99937 100.00000      0     0
9   200004858          0          1  200005288  0.00000 100.00000      0     0
10  200004858          0          1  200005152  0.00000  50.97804      0     0
   vpuout areasqkm totdasqkm divdasqkm tidal totma  wbareatype pathtimema
1      NA       NA        NA        NA    NA    NA        <NA>         NA
2       0   0.9801  37046.62  37046.62     1 -9999 StreamRiver      -9999
3       0  16.5015  34609.47  34609.47     1 -9999 StreamRiver      -9999
4      NA       NA        NA        NA    NA    NA        <NA>         NA
5       0   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
6      NA       NA        NA        NA    NA    NA        <NA>         NA
7       0   1.0764  33341.80  33341.80     1 -9999 StreamRiver      -9999
8       0   0.4041  37173.41  37156.41     1 -9999 StreamRiver      -9999
9       0  14.2146  31047.80  31047.80     1 -9999 StreamRiver      -9999
10      0   2.7810  35021.12  35021.12     1 -9999 StreamRiver      -9999
   hwnodesqkm maxelevraw minelevraw maxelevsmo minelevsmo slope elevfixed
1        <NA>         NA         NA         NA         NA    NA      <NA>
2        <NA>      -9998          0          0          0 1e-05         0
3        <NA>      -9998        -37          0          0 1e-05         0
4        <NA>         NA         NA         NA         NA    NA      <NA>
5        <NA>      -9998        -88          0          0 1e-05         0
6        <NA>         NA         NA         NA         NA    NA      <NA>
7        <NA>      -9998          0          0          0 1e-05         0
8        <NA>      -9998          0          0          0 1e-05         0
9        <NA>      -9998        -19          0          0 1e-05         0
10       <NA>      -9998         -1          0          0 1e-05         0
   hwtype slopelenkm    qa_ma va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01
1    <NA>         NA       NA    NA       NA    NA       NA    NA       NA
2              1.041 15013.68 -9999 16235.63 -9999 15856.20 -9999 22018.38
3              6.985 14083.91 -9999 15233.17 -9999 14855.31 -9999 20219.85
4    <NA>         NA       NA    NA       NA    NA       NA    NA       NA
5              3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
6    <NA>         NA       NA    NA       NA    NA       NA    NA       NA
7              0.458 13614.70 -9999 14727.21 -9999 14353.13 -9999 19302.66
8              0.520 15055.19 -9999 16280.38 -9999 15900.95 -9999 22099.96
9              4.475 12723.79 -9999 13766.36 -9999 13294.18 -9999 17620.96
10             1.543 14238.67 -9999 15400.05 -9999 15022.18 -9999 20519.74
   va_01    qc_01 vc_01    qe_01 ve_01    qa_02 va_02    qc_02 vc_02    qe_02
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 18381.01 -9999 18609.74 -9999 23336.98 -9999 12841.90 -9999 19456.10
3  -9999 17079.56 -9999 17490.95 -9999 21495.62 -9999 12099.89 -9999 19007.85
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999 18744.39
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 16409.76 -9999 16921.61 -9999 20581.18 -9999 11724.92 -9999 18819.36
8  -9999 18439.68 -9999 18668.42 -9999 23421.35 -9999 12875.50 -9999 19489.70
9  -9999 15170.02 -9999 16134.65 -9999 18927.94 -9999 11035.07 -9999 18780.40
10 -9999 17297.64 -9999 17709.03 -9999 21798.76 -9999 12223.21 -9999 19131.18
   ve_02    qa_03 va_03    qc_03 vc_03    qe_03 ve_03    qa_04 va_04    qc_04
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 29765.65 -9999 22361.43 -9999 27048.02 -9999 24623.16 -9999 25118.86
3  -9999 27655.92 -9999 21074.01 -9999 26008.86 -9999 23213.12 -9999 23691.51
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42 -9999 21812.97
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 26621.03 -9999 20435.59 -9999 25531.24 -9999 22514.85 -9999 22984.41
8  -9999 29863.54 -9999 22420.72 -9999 27107.32 -9999 24686.69 -9999 25183.16
9  -9999 24795.35 -9999 19297.46 -9999 25307.20 -9999 21199.67 -9999 21652.12
10 -9999 27995.97 -9999 21282.76 -9999 26217.62 -9999 23442.53 -9999 23923.78
   vc_04    qe_04 ve_04    qa_05 va_05     qc_05 vc_05    qe_05 ve_05     qa_06
1     NA       NA    NA       NA    NA        NA    NA       NA    NA        NA
2  -9999 25814.88 -9999 18133.77 -9999 10601.970 -9999 18149.93 -9999 10323.755
3  -9999 24388.47 -9999 17209.87 -9999 10108.400 -9999 17630.07 -9999  9797.249
4     NA       NA    NA       NA    NA        NA    NA       NA    NA        NA
5  -9999 22446.43 -9999 15941.03 -9999  9426.704 -9999 16809.89 -9999  9070.622
6     NA       NA    NA       NA    NA        NA    NA       NA    NA        NA
7  -9999 23681.36 -9999 16768.39 -9999  9871.730 -9999 17388.99 -9999  9542.955
8  -9999 25879.17 -9999 18175.09 -9999 10623.991 -9999 18171.95 -9999 10347.374
9  -9999 22277.16 -9999 15834.03 -9999  9369.000 -9999 16740.46 -9999  9009.777
10 -9999 24620.74 -9999 17357.19 -9999 10187.254 -9999 17708.93 -9999  9882.205
   va_06    qc_06 vc_06    qe_06 ve_06    qa_07 va_07    qc_07 vc_07    qe_07
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 5851.191 -9999 11599.44 -9999 6546.831 -9999 2821.874 -9999 5835.183
3  -9999 5591.191 -9999 11332.59 -9999 6184.600 -9999 2690.755 -9999 5699.387
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 5229.309 -9999 10666.96 -9999 5702.503 -9999 2514.268 -9999 5531.090
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 5464.961 -9999 11207.71 -9999 6007.527 -9999 2626.204 -9999 5636.332
8  -9999 5862.813 -9999 11611.06 -9999 6563.069 -9999 2827.724 -9999 5841.033
9  -9999 5198.837 -9999 10631.33 -9999 5661.479 -9999 2499.139 -9999 5514.680
10 -9999 5633.267 -9999 11374.67 -9999 6243.649 -9999 2712.214 -9999 5720.846
   ve_07    qa_08 va_08    qc_08 vc_08    qe_08 ve_08    qa_09 va_09    qc_09
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 4422.685 -9999 2615.095 -9999 5112.130 -9999 4139.053 -9999 2127.168
3  -9999 4162.237 -9999 2483.705 -9999 4974.338 -9999 3919.786 -9999 2039.295
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 3820.042 -9999 2309.167 -9999 4731.121 -9999 3622.987 -9999 1918.561
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 4037.483 -9999 2420.334 -9999 4914.801 -9999 3810.601 -9999 1995.127
8  -9999 4434.494 -9999 2621.025 -9999 5118.060 -9999 4149.386 -9999 2131.283
9  -9999 3790.404 -9999 2293.942 -9999 4711.213 -9999 3597.297 -9999 1908.008
10 -9999 4205.053 -9999 2505.388 -9999 4996.021 -9999 3956.002 -9999 2053.884
   vc_09    qe_09 ve_09    qa_10 va_10    qc_10 vc_10    qe_10 ve_10    qa_11
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 6605.921 -9999 4904.089 -9999 2252.154 -9999 8071.215 -9999 12167.83
3  -9999 6505.764 -9999 4740.249 -9999 2196.928 -9999 8002.059 -9999 11844.32
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 5976.902 -9999 4519.342 -9999 2121.644 -9999 7489.477 -9999 11112.25
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 6460.777 -9999 4655.028 -9999 2168.000 -9999 7967.560 -9999 11622.89
8  -9999 6610.036 -9999 4911.470 -9999 2254.630 -9999 8073.691 -9999 12176.27
9  -9999 5950.703 -9999 4500.223 -9999 2115.083 -9999 7470.272 -9999 11072.17
10 -9999 6520.353 -9999 4767.922 -9999 2206.291 -9999 8011.422 -9999 11915.92
   va_11    qc_11 vc_11    qe_11 ve_11    qa_12 va_12    qc_12 vc_12    qe_12
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 6260.851 -9999 9822.913 -9999 19876.50 -9999 22052.61 -9999 17085.63
3  -9999 6117.288 -9999 9655.004 -9999 18652.71 -9999 20717.55 -9999 15798.19
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 5790.373 -9999 9198.365 -9999 16898.49 -9999 18801.18 -9999 13880.66
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 6018.709 -9999 9553.964 -9999 17997.05 -9999 20001.67 -9999 15107.98
8  -9999 6264.592 -9999 9826.654 -9999 19928.36 -9999 22109.15 -9999 17142.17
9  -9999 5772.392 -9999 9166.637 -9999 16755.33 -9999 18644.64 -9999 13736.21
10 -9999 6149.109 -9999 9686.825 -9999 18868.70 -9999 20953.29 -9999 16033.92
   ve_12 lakefract surfarea rareahload rpuid vpuid enabled seg_len_m
1     NA      <NA>     <NA>       <NA>  <NA>  <NA>      NA        NA
2  -9999      <NA>     <NA>       <NA>   02a    02       1  9.996857
3  -9999      <NA>     <NA>       <NA>   02a    02       1  9.998174
4     NA      <NA>     <NA>       <NA>  <NA>  <NA>      NA        NA
5  -9999      <NA>     <NA>       <NA>   02a    02       1  9.999907
6     NA      <NA>     <NA>       <NA>  <NA>  <NA>      NA        NA
7  -9999      <NA>     <NA>       <NA>   02a    02       1  9.997942
8  -9999      <NA>     <NA>       <NA>   02a    02       1  9.998431
9  -9999      <NA>     <NA>       <NA>   02a    02       1  9.999657
10 -9999      <NA>     <NA>       <NA>   02a    02       1  9.997783
    seg_len_km total_len_km                geometry
1           NA           NA POINT (4640574 5399698)
2  0.009996857    189.04366 POINT (4629779 5403798)
3  0.009998174    113.24524 POINT (4566316 5398961)
4           NA           NA POINT (4618015 5401418)
5  0.009999907     43.64487 POINT (4544472 5430461)
6           NA           NA POINT (4543733 5397905)
7  0.009997942     63.44830 POINT (4541853 5413727)
8  0.009998431    198.47707 POINT (4637977 5400242)
9  0.009999657     33.58268 POINT (4548831 5438869)
10 0.009997783    127.26717 POINT (4575424 5405083)
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "station",
+                                 max_dist = 1000000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > segs_filt_dist <- segs_filt %>%
+   stplanr::line_breakup(st_buffer(gages_snapped, 2)) %>%
+   # drop the "loose ends" on either extent (upstream or downstream) of first/last gage
+   # filter(!rowid %in% c(232, 100, 66, 62, 63)) %>%
+   mutate(seg_len_m = units::drop_units(units::set_units(st_length(.), "m")),
+          seg_len_km = seg_len_m/1000) %>%
+   arrange(desc(hydroseq)) %>%
+   mutate(total_len_km = cumsum(seg_len_km)) # %>%
+   # filter to just cols of interest
+   # select(rowid, ogc_fid:comid, gnis_id:reachcode, streamorde, hydroseq, seg_len_km, total_len_km, geom)
+ > mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   ## mapview(gages_snapped, layer.name="conmon stations") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages")
+ > mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   mapview(gages_snapped, layer.name="conmon stations") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages")
+ > segs_on_points <- gages_snapped %>%
+   ## st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(segs_filt_dist)
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> cb_station_complete <- gages_snapped %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c(".x", "")) %>%
+   select(-ends_with(".x"))
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   stplanr::line_breakup(st_buffer(gages_snapped, 2)) %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > mapview(segs)
> # filter, if desired
+ segs_filt <- segs %>%
+   filter(
+       ## gnis_id != "1552968"
+     )
> mapview(segs_filt, zcol="gnis_name")  +
+   # mapview(segs, color="blue", lwd=0.3) +
+   mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages")
+ > segs_filt_dist <- segs_filt %>%
+   # drop the "loose ends" on either extent (upstream or downstream) of first/last gage
+   # filter(!rowid %in% c(232, 100, 66, 62, 63)) %>%
+   mutate(seg_len_m = units::drop_units(units::set_units(st_length(.), "m")),
+          seg_len_km = seg_len_m/1000) %>%
+   arrange(desc(hydroseq)) %>%
+   mutate(total_len_km = cumsum(seg_len_km)) # %>%
+   # filter to just cols of interest
+   # select(rowid, ogc_fid:comid, gnis_id:reachcode, streamorde, hydroseq, seg_len_km, total_len_km, geom)
> mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   mapview(gages_snapped, layer.name="conmon stations") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages")
+ > segs_on_points <- gages_snapped %>%
+   ## st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(segs_filt_dist)
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> cb_station_complete <- gages_snapped %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c(".x", "")) %>%
+   select(-ends_with(".x"))
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> segs_filt_dist
Simple feature collection with 253 features and 142 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: 4527842 ymin: 5387066 xmax: 4667263 ymax: 5459413
Projected CRS: NAD83 / UTM zone 10N
# A tibble: 253 × 143
   rowid id      comid fdate               resolution gnis_id gnis_name lengthkm
 * <int> <chr>   <int> <dttm>              <chr>      <chr>   <chr>        <dbl>
 1   202 nhdfl… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    5.22
 2   247 nhdfl… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.83
 3   203 nhdfl… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    0.163
 4   204 nhdfl… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
 5   205 nhdfl… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
 6   206 nhdfl… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
 7   207 nhdfl… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
 8   208 nhdfl… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
 9   209 nhdfl… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
10   210 nhdfl… 2.23e7 2008-07-22 00:00:00 Medium     597915  Potomac …    2.05
# ℹ 243 more rows
# ℹ 135 more variables: reachcode <chr>, flowdir <chr>, wbareacomi <int>,
#   ftype <chr>, fcode <int>, shape_length <dbl>, streamleve <int>,
#   streamorde <int>, streamcalc <int>, fromnode <dbl>, tonode <dbl>,
#   hydroseq <dbl>, levelpathi <dbl>, pathlength <dbl>, terminalpa <dbl>,
#   arbolatesu <dbl>, divergence <int>, startflag <int>, terminalfl <int>,
#   dnlevel <int>, uplevelpat <dbl>, uphydroseq <dbl>, dnlevelpat <dbl>, …
# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names
> segs_filt_dist$total_len_km
  [1]   6.317261   9.716950   9.914216  10.443327  10.446326  10.450325
  [7]  10.453324  11.287858  11.290857  11.294856  11.297855  12.380019
 [13]  12.598992  12.601991  12.605991  12.608990  13.668087  16.473313
 [19]  20.621648  22.588267  22.591266  22.595266  22.598265  24.151220
 [25]  27.107797  28.572392  33.572680  33.575680  33.579680  33.582680
 [31]  33.937817  35.928310  38.098690  38.831996  41.892532  43.634868
 [37]  43.637868  43.641868  43.644868  44.633212  44.636212  44.640211
 [43]  44.643211  46.318458  46.394312  50.565557  55.177827  57.929777
 [49]  57.932776  57.936775  57.939774  61.483104  62.356602  63.186242
 [55]  63.438298  63.441297  63.445297  63.448296  63.737497  66.346630
 [61]  66.692323  71.274985  71.504221  73.257924  74.841929  75.724115
 [67]  76.754174  79.141847  79.653702  79.656701  79.660700  79.663699
 [73]  80.326076  80.804966  82.844529  83.275017  88.518989  92.891606
 [79]  94.282400  94.285399  94.289398  94.292397  96.698225  97.383022
 [85]  99.115797  99.773698 101.125183 106.039872 108.181618 113.235238
 [91] 113.238237 113.242236 113.245236 116.681256 117.020930 120.839319
 [97] 120.842318 120.844317 120.846317 120.849316 124.348707 124.730881
[103] 126.517548 127.257169 127.260168 127.264167 127.267167 128.375854
[109] 128.813063 130.362550 130.653825 131.942200 134.111812 134.863815
[115] 135.595323 135.678973 135.681972 135.685971 135.688970 137.171947
[121] 138.608547 138.976179 139.245949 140.542022 140.988421 141.588145
[127] 141.917608 142.294920 142.942111 142.945110 142.949109 142.952108
[133] 145.309323 145.312322 145.316320 145.319319 147.048090 147.934416
[139] 148.111058 148.114057 148.118057 148.121056 148.469061 149.589799
[145] 150.871711 152.260976 152.990368 153.833426 154.047909 156.400459
[151] 157.001379 159.531199 160.311784 160.574338 161.694388 162.129513
[157] 164.196856 164.752876 165.937871 166.168027 166.527494 168.508229
[163] 170.337925 171.881616 171.884616 171.888615 171.891614 173.244743
[169] 174.195859 175.029804 175.948604 176.482934 176.485933 176.489932
[175] 176.492931 180.201001 181.258428 181.488761 181.753939 182.391602
[181] 182.921600 185.101964 185.892189 186.134960 186.896486 187.919965
[187] 188.599154 189.033668 189.036667 189.040665 189.043665 189.861099
[193] 190.246043 191.220306 192.333069 193.725184 194.111014 194.282176
[199] 194.740646 195.366942 195.369941 195.373940 195.376939 195.612995
[205] 196.475636 196.554289 196.732768 197.902325 198.467074 198.470074
[211] 198.474074 198.477073 198.538274 199.494090 199.497090 199.501089
[217] 199.504088 201.121635 201.124635 201.128634 201.131633 205.557953
[223] 205.560952 205.564951 205.567950 208.506317 210.115188 210.535019
[229] 210.871740 210.874739 210.878739 210.881738 212.699901 213.264288
[235] 213.909288 214.070475 214.924539 215.526540 216.108499 216.706342
[241] 217.804687 218.860620 220.321503 221.373663 222.131569 223.854161
[247] 225.038112 225.478069 225.481068 225.485066 225.488065 226.474728
[253] 229.620606
> poi_snapped_buff
Simple feature collection with 30 features and 3 fields
Geometry type: POLYGON
Dimension:     XY
Bounding box:  xmin: 4537284 ymin: 5387842 xmax: 4663739 ymax: 5457734
Projected CRS: NAD83 / UTM zone 10N
First 10 features:
         X       Y station                       geometry
1  4640574 5399698 XBE5486 POLYGON ((4640579 5399698, ...
2  4629779 5403798 XCE0055 POLYGON ((4629784 5403798, ...
3  4566316 5398961 XDB4544 POLYGON ((4566321 5398961, ...
4  4618015 5401418 XCD5599 POLYGON ((4618020 5401418, ...
5  4544472 5430461 XFB0231 POLYGON ((4544477 5430461, ...
6  4543733 5397905 XDA8236 POLYGON ((4543738 5397905, ...
7  4541853 5413727 XEA3687 POLYGON ((4541858 5413727, ...
8  4637977 5400242 XBE8396 POLYGON ((4637982 5400242, ...
9  4548831 5438869 XFB2184 POLYGON ((4548836 5438869, ...
10 4575424 5405083 XDC3807 POLYGON ((4575429 5405083, ...
> poi_snapped_buff$station
 [1] "XBE5486"       "XCE0055"       "XDB4544"       "XCD5599"
 [5] "XFB0231"       "XDA8236"       "XEA3687"       "XBE8396"
 [9] "XFB2184"       "XDC3807"       "XDB8884"       "XBF6843"
[13] "XBF7904"       "XCC8346"       "XCC9680"       "XCF1440"
[17] "WASD2"         "UP"            "PL"            "PPTM2"
[21] "NCDV2"         "USGS-01651827" "USGS-01651812" "USGS-01651007"
[25] "POH002.10"     "OCC002.47"     "POM000.97"     "MON000.18"
[29] "NOM002.36"     "WES000.18"
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   stplanr::line_breakup(st_buffer(gages_snapped, 2)) %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > mapview(segs)
> segs_filt_dist <- segs_filt %>%
+   # drop the "loose ends" on either extent (upstream or downstream) of first/last gage
+   # filter(!rowid %in% c(232, 100, 66, 62, 63)) %>%
+   mutate(seg_len_m = units::drop_units(units::set_units(st_length(.), "m")),
+          seg_len_km = seg_len_m/1000) %>%
+   arrange(desc(hydroseq)) %>%
+   mutate(total_len_km = cumsum(seg_len_km)) # %>%
+   # filter to just cols of interest
+   # select(rowid, ogc_fid:comid, gnis_id:reachcode, streamorde, hydroseq, seg_len_km, total_len_km, geom)
> segs_filt_dist$total_len_km
  [1]   6.317261   9.716950   9.914216  10.443327  10.446326  10.450325
  [7]  10.453324  11.287858  11.290857  11.294856  11.297855  12.380019
 [13]  12.598992  12.601991  12.605991  12.608990  13.668087  16.473313
 [19]  20.621648  22.588267  22.591266  22.595266  22.598265  24.151220
 [25]  27.107797  28.572392  33.572680  33.575680  33.579680  33.582680
 [31]  33.937817  35.928310  38.098690  38.831996  41.892532  43.634868
 [37]  43.637868  43.641868  43.644868  44.633212  44.636212  44.640211
 [43]  44.643211  46.318458  46.394312  50.565557  55.177827  57.929777
 [49]  57.932776  57.936775  57.939774  61.483104  62.356602  63.186242
 [55]  63.438298  63.441297  63.445297  63.448296  63.737497  66.346630
 [61]  66.692323  71.274985  71.504221  73.257924  74.841929  75.724115
 [67]  76.754174  79.141847  79.653702  79.656701  79.660700  79.663699
 [73]  80.326076  80.804966  82.844529  83.275017  88.518989  92.891606
 [79]  94.282400  94.285399  94.289398  94.292397  96.698225  97.383022
 [85]  99.115797  99.773698 101.125183 106.039872 108.181618 113.235238
 [91] 113.238237 113.242236 113.245236 116.681256 117.020930 120.839319
 [97] 120.842318 120.844317 120.846317 120.849316 124.348707 124.730881
[103] 126.517548 127.257169 127.260168 127.264167 127.267167 128.375854
[109] 128.813063 130.362550 130.653825 131.942200 134.111812 134.863815
[115] 135.595323 135.678973 135.681972 135.685971 135.688970 137.171947
[121] 138.608547 138.976179 139.245949 140.542022 140.988421 141.588145
[127] 141.917608 142.294920 142.942111 142.945110 142.949109 142.952108
[133] 145.309323 145.312322 145.316320 145.319319 147.048090 147.934416
[139] 148.111058 148.114057 148.118057 148.121056 148.469061 149.589799
[145] 150.871711 152.260976 152.990368 153.833426 154.047909 156.400459
[151] 157.001379 159.531199 160.311784 160.574338 161.694388 162.129513
[157] 164.196856 164.752876 165.937871 166.168027 166.527494 168.508229
[163] 170.337925 171.881616 171.884616 171.888615 171.891614 173.244743
[169] 174.195859 175.029804 175.948604 176.482934 176.485933 176.489932
[175] 176.492931 180.201001 181.258428 181.488761 181.753939 182.391602
[181] 182.921600 185.101964 185.892189 186.134960 186.896486 187.919965
[187] 188.599154 189.033668 189.036667 189.040665 189.043665 189.861099
[193] 190.246043 191.220306 192.333069 193.725184 194.111014 194.282176
[199] 194.740646 195.366942 195.369941 195.373940 195.376939 195.612995
[205] 196.475636 196.554289 196.732768 197.902325 198.467074 198.470074
[211] 198.474074 198.477073 198.538274 199.494090 199.497090 199.501089
[217] 199.504088 201.121635 201.124635 201.128634 201.131633 205.557953
[223] 205.560952 205.564951 205.567950 208.506317 210.115188 210.535019
[229] 210.871740 210.874739 210.878739 210.881738 212.699901 213.264288
[235] 213.909288 214.070475 214.924539 215.526540 216.108499 216.706342
[241] 217.804687 218.860620 220.321503 221.373663 222.131569 223.854161
[247] 225.038112 225.478069 225.481068 225.485066 225.488065 226.474728
[253] 229.620606
> segs_on_points <- gages_snapped %>%
+   ## st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(segs_filt_dist)
> segs_on_points
Simple feature collection with 31 features and 145 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 4537289 ymin: 5387847 xmax: 4663734 ymax: 5457729
Projected CRS: NAD83 / UTM zone 10N
First 10 features:
         X       Y station rowid                         id    comid      fdate
1  4640574 5399698 XBE5486    NA                       <NA>       NA       <NA>
2  4629779 5403798 XCE0055    47 nhdflowline_network.160914  4532325 2008-07-22
3  4566316 5398961 XDB4544   166 nhdflowline_network.161077  4534599 2008-07-22
4  4618015 5401418 XCD5599    NA                       <NA>       NA       <NA>
5  4544472 5430461 XFB0231   238 nhdflowline_network.159245 22340825 2008-07-22
6  4543733 5397905 XDA8236    NA                       <NA>       NA       <NA>
7  4541853 5413727 XEA3687     5 nhdflowline_network.163319  4529649 2008-07-22
8  4637977 5400242 XBE8396   129 nhdflowline_network.163275  4532981 2008-07-22
9  4548831 5438869 XFB2184   229 nhdflowline_network.159272 22340661 2008-07-22
10 4575424 5405083 XDC3807   190 nhdflowline_network.161051  4539745 2008-07-22
   resolution gnis_id     gnis_name lengthkm      reachcode        flowdir
1        <NA>    <NA>          <NA>       NA           <NA>           <NA>
2      Medium  597915 Potomac River    1.041 02070011000040 With Digitized
3      Medium  597915 Potomac River    6.985 02070011000203 With Digitized
4        <NA>    <NA>          <NA>       NA           <NA>           <NA>
5      Medium  597915 Potomac River    3.688 02070010000004 With Digitized
6        <NA>    <NA>          <NA>       NA           <NA>           <NA>
7      Medium  597915 Potomac River    0.458 02070011001771 With Digitized
8      Medium  597915 Potomac River    0.520 02070011001750 With Digitized
9      Medium  597915 Potomac River    4.475 02070010000033 With Digitized
10     Medium  597915 Potomac River    1.543 02070011000185 With Digitized
   wbareacomi          ftype fcode shape_length streamleve streamorde
1          NA           <NA>    NA           NA         NA         NA
2   120049843 ArtificialPath 55800  0.010190576          1          7
3   120049843 ArtificialPath 55800  0.077345846          1          7
4          NA           <NA>    NA           NA         NA         NA
5   120049842 ArtificialPath 55800  0.034881270          1          7
6          NA           <NA>    NA           NA         NA         NA
7   120049843 ArtificialPath 55800  0.004499801          1          7
8   120049843 ArtificialPath 55800  0.005659154          1          7
9   120049842 ArtificialPath 55800  0.041452856          1          7
10  120049843 ArtificialPath 55800  0.014755067          1          7
   streamcalc  fromnode    tonode  hydroseq levelpathi pathlength terminalpa
1          NA        NA        NA        NA         NA         NA         NA
2           7 200013957 200013963 200004967  200004858     32.552  200004858
3           7 200014522 200014506 200005174  200004858     92.756  200004858
4          NA        NA        NA        NA         NA         NA         NA
5           7 200087412 200087415 200005272  200004858    151.054  200004858
6          NA        NA        NA        NA         NA         NA         NA
7           7 200013326 200013337 200005248  200004858    136.646  200004858
8           7 200014231 200014188 200004927  200004858     25.399  200004858
9           7 200087330 200087336 200005291  200004858    161.292  200004858
10          7 200014913 200014509 200005155  200004858     83.103  200004858
   arbolatesu divergence startflag terminalfl dnlevel uplevelpat uphydroseq
1          NA         NA        NA         NA      NA         NA         NA
2    27561.80          0         0          0       1  200004858  200004970
3    25753.90          0         0          0       1  200004858  200005177
4          NA         NA        NA         NA      NA         NA         NA
5    22989.36          0         0          0       1  200004858  200005277
6          NA         NA        NA         NA      NA         NA         NA
7    24764.56          0         0          0       1  200004858  200005252
8    27645.45          0         0          0       1  200004858  200004930
9    22785.24          0         0          0       1  200004858  200005294
10   26067.23          0         0          0       1  200004858  200005158
   dnlevelpat dnminorhyd dndraincou dnhydroseq frommeas    tomeas rtndiv vpuin
1          NA         NA         NA         NA       NA        NA     NA    NA
2   200004858          0          1  200004964  0.00000 100.00000      0     0
3   200004858          0          1  200005171  0.00000 100.00000      0     0
4          NA         NA         NA         NA       NA        NA     NA    NA
5   200004858          0          1  200005268  0.00000 100.00000      1     0
6          NA         NA         NA         NA       NA        NA     NA    NA
7   200004858          0          1  200005243 53.64653  64.98198      0     0
8   200004858          0          1  200004924 93.99937 100.00000      0     0
9   200004858          0          1  200005288  0.00000 100.00000      0     0
10  200004858          0          1  200005152  0.00000  50.97804      0     0
   vpuout areasqkm totdasqkm divdasqkm tidal totma  wbareatype pathtimema
1      NA       NA        NA        NA    NA    NA        <NA>         NA
2       0   0.9801  37046.62  37046.62     1 -9999 StreamRiver      -9999
3       0  16.5015  34609.47  34609.47     1 -9999 StreamRiver      -9999
4      NA       NA        NA        NA    NA    NA        <NA>         NA
5       0   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
6      NA       NA        NA        NA    NA    NA        <NA>         NA
7       0   1.0764  33341.80  33341.80     1 -9999 StreamRiver      -9999
8       0   0.4041  37173.41  37156.41     1 -9999 StreamRiver      -9999
9       0  14.2146  31047.80  31047.80     1 -9999 StreamRiver      -9999
10      0   2.7810  35021.12  35021.12     1 -9999 StreamRiver      -9999
   hwnodesqkm maxelevraw minelevraw maxelevsmo minelevsmo slope elevfixed
1        <NA>         NA         NA         NA         NA    NA      <NA>
2        <NA>      -9998          0          0          0 1e-05         0
3        <NA>      -9998        -37          0          0 1e-05         0
4        <NA>         NA         NA         NA         NA    NA      <NA>
5        <NA>      -9998        -88          0          0 1e-05         0
6        <NA>         NA         NA         NA         NA    NA      <NA>
7        <NA>      -9998          0          0          0 1e-05         0
8        <NA>      -9998          0          0          0 1e-05         0
9        <NA>      -9998        -19          0          0 1e-05         0
10       <NA>      -9998         -1          0          0 1e-05         0
   hwtype slopelenkm    qa_ma va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01
1    <NA>         NA       NA    NA       NA    NA       NA    NA       NA
2              1.041 15013.68 -9999 16235.63 -9999 15856.20 -9999 22018.38
3              6.985 14083.91 -9999 15233.17 -9999 14855.31 -9999 20219.85
4    <NA>         NA       NA    NA       NA    NA       NA    NA       NA
5              3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
6    <NA>         NA       NA    NA       NA    NA       NA    NA       NA
7              0.458 13614.70 -9999 14727.21 -9999 14353.13 -9999 19302.66
8              0.520 15055.19 -9999 16280.38 -9999 15900.95 -9999 22099.96
9              4.475 12723.79 -9999 13766.36 -9999 13294.18 -9999 17620.96
10             1.543 14238.67 -9999 15400.05 -9999 15022.18 -9999 20519.74
   va_01    qc_01 vc_01    qe_01 ve_01    qa_02 va_02    qc_02 vc_02    qe_02
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 18381.01 -9999 18609.74 -9999 23336.98 -9999 12841.90 -9999 19456.10
3  -9999 17079.56 -9999 17490.95 -9999 21495.62 -9999 12099.89 -9999 19007.85
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999 18744.39
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 16409.76 -9999 16921.61 -9999 20581.18 -9999 11724.92 -9999 18819.36
8  -9999 18439.68 -9999 18668.42 -9999 23421.35 -9999 12875.50 -9999 19489.70
9  -9999 15170.02 -9999 16134.65 -9999 18927.94 -9999 11035.07 -9999 18780.40
10 -9999 17297.64 -9999 17709.03 -9999 21798.76 -9999 12223.21 -9999 19131.18
   ve_02    qa_03 va_03    qc_03 vc_03    qe_03 ve_03    qa_04 va_04    qc_04
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 29765.65 -9999 22361.43 -9999 27048.02 -9999 24623.16 -9999 25118.86
3  -9999 27655.92 -9999 21074.01 -9999 26008.86 -9999 23213.12 -9999 23691.51
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42 -9999 21812.97
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 26621.03 -9999 20435.59 -9999 25531.24 -9999 22514.85 -9999 22984.41
8  -9999 29863.54 -9999 22420.72 -9999 27107.32 -9999 24686.69 -9999 25183.16
9  -9999 24795.35 -9999 19297.46 -9999 25307.20 -9999 21199.67 -9999 21652.12
10 -9999 27995.97 -9999 21282.76 -9999 26217.62 -9999 23442.53 -9999 23923.78
   vc_04    qe_04 ve_04    qa_05 va_05     qc_05 vc_05    qe_05 ve_05     qa_06
1     NA       NA    NA       NA    NA        NA    NA       NA    NA        NA
2  -9999 25814.88 -9999 18133.77 -9999 10601.970 -9999 18149.93 -9999 10323.755
3  -9999 24388.47 -9999 17209.87 -9999 10108.400 -9999 17630.07 -9999  9797.249
4     NA       NA    NA       NA    NA        NA    NA       NA    NA        NA
5  -9999 22446.43 -9999 15941.03 -9999  9426.704 -9999 16809.89 -9999  9070.622
6     NA       NA    NA       NA    NA        NA    NA       NA    NA        NA
7  -9999 23681.36 -9999 16768.39 -9999  9871.730 -9999 17388.99 -9999  9542.955
8  -9999 25879.17 -9999 18175.09 -9999 10623.991 -9999 18171.95 -9999 10347.374
9  -9999 22277.16 -9999 15834.03 -9999  9369.000 -9999 16740.46 -9999  9009.777
10 -9999 24620.74 -9999 17357.19 -9999 10187.254 -9999 17708.93 -9999  9882.205
   va_06    qc_06 vc_06    qe_06 ve_06    qa_07 va_07    qc_07 vc_07    qe_07
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 5851.191 -9999 11599.44 -9999 6546.831 -9999 2821.874 -9999 5835.183
3  -9999 5591.191 -9999 11332.59 -9999 6184.600 -9999 2690.755 -9999 5699.387
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 5229.309 -9999 10666.96 -9999 5702.503 -9999 2514.268 -9999 5531.090
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 5464.961 -9999 11207.71 -9999 6007.527 -9999 2626.204 -9999 5636.332
8  -9999 5862.813 -9999 11611.06 -9999 6563.069 -9999 2827.724 -9999 5841.033
9  -9999 5198.837 -9999 10631.33 -9999 5661.479 -9999 2499.139 -9999 5514.680
10 -9999 5633.267 -9999 11374.67 -9999 6243.649 -9999 2712.214 -9999 5720.846
   ve_07    qa_08 va_08    qc_08 vc_08    qe_08 ve_08    qa_09 va_09    qc_09
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 4422.685 -9999 2615.095 -9999 5112.130 -9999 4139.053 -9999 2127.168
3  -9999 4162.237 -9999 2483.705 -9999 4974.338 -9999 3919.786 -9999 2039.295
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 3820.042 -9999 2309.167 -9999 4731.121 -9999 3622.987 -9999 1918.561
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 4037.483 -9999 2420.334 -9999 4914.801 -9999 3810.601 -9999 1995.127
8  -9999 4434.494 -9999 2621.025 -9999 5118.060 -9999 4149.386 -9999 2131.283
9  -9999 3790.404 -9999 2293.942 -9999 4711.213 -9999 3597.297 -9999 1908.008
10 -9999 4205.053 -9999 2505.388 -9999 4996.021 -9999 3956.002 -9999 2053.884
   vc_09    qe_09 ve_09    qa_10 va_10    qc_10 vc_10    qe_10 ve_10    qa_11
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 6605.921 -9999 4904.089 -9999 2252.154 -9999 8071.215 -9999 12167.83
3  -9999 6505.764 -9999 4740.249 -9999 2196.928 -9999 8002.059 -9999 11844.32
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 5976.902 -9999 4519.342 -9999 2121.644 -9999 7489.477 -9999 11112.25
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 6460.777 -9999 4655.028 -9999 2168.000 -9999 7967.560 -9999 11622.89
8  -9999 6610.036 -9999 4911.470 -9999 2254.630 -9999 8073.691 -9999 12176.27
9  -9999 5950.703 -9999 4500.223 -9999 2115.083 -9999 7470.272 -9999 11072.17
10 -9999 6520.353 -9999 4767.922 -9999 2206.291 -9999 8011.422 -9999 11915.92
   va_11    qc_11 vc_11    qe_11 ve_11    qa_12 va_12    qc_12 vc_12    qe_12
1     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
2  -9999 6260.851 -9999 9822.913 -9999 19876.50 -9999 22052.61 -9999 17085.63
3  -9999 6117.288 -9999 9655.004 -9999 18652.71 -9999 20717.55 -9999 15798.19
4     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
5  -9999 5790.373 -9999 9198.365 -9999 16898.49 -9999 18801.18 -9999 13880.66
6     NA       NA    NA       NA    NA       NA    NA       NA    NA       NA
7  -9999 6018.709 -9999 9553.964 -9999 17997.05 -9999 20001.67 -9999 15107.98
8  -9999 6264.592 -9999 9826.654 -9999 19928.36 -9999 22109.15 -9999 17142.17
9  -9999 5772.392 -9999 9166.637 -9999 16755.33 -9999 18644.64 -9999 13736.21
10 -9999 6149.109 -9999 9686.825 -9999 18868.70 -9999 20953.29 -9999 16033.92
   ve_12 lakefract surfarea rareahload rpuid vpuid enabled seg_len_m
1     NA      <NA>     <NA>       <NA>  <NA>  <NA>      NA        NA
2  -9999      <NA>     <NA>       <NA>   02a    02       1  3.998743
3  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999269
4     NA      <NA>     <NA>       <NA>  <NA>  <NA>      NA        NA
5  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999963
6     NA      <NA>     <NA>       <NA>  <NA>  <NA>      NA        NA
7  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999177
8  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999372
9  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999863
10 -9999      <NA>     <NA>       <NA>   02a    02       1  3.999113
    seg_len_km total_len_km                geometry
1           NA           NA POINT (4640574 5399698)
2  0.003998743    189.04067 POINT (4629779 5403798)
3  0.003999269    113.24224 POINT (4566316 5398961)
4           NA           NA POINT (4618015 5401418)
5  0.003999963     43.64187 POINT (4544472 5430461)
6           NA           NA POINT (4543733 5397905)
7  0.003999177     63.44530 POINT (4541853 5413727)
8  0.003999372    198.47407 POINT (4637977 5400242)
9  0.003999863     33.57968 POINT (4548831 5438869)
10 0.003999113    127.26417 POINT (4575424 5405083)
> segs_on_points <- st_buffer(gages_snapped, 1) %>%
+   ## st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(segs_filt_dist)
> segs_on_points
Simple feature collection with 31 features and 145 fields
Geometry type: POLYGON
Dimension:     XY
Bounding box:  xmin: 4537288 ymin: 5387846 xmax: 4663735 ymax: 5457730
Projected CRS: NAD83 / UTM zone 10N
First 10 features:
         X       Y station rowid                         id    comid      fdate
1  4640574 5399698 XBE5486    96 nhdflowline_network.163276  4532885 2008-07-22
2  4629779 5403798 XCE0055    47 nhdflowline_network.160914  4532325 2008-07-22
3  4566316 5398961 XDB4544   166 nhdflowline_network.161077  4534599 2008-07-22
4  4618015 5401418 XCD5599    78 nhdflowline_network.160921  4532829 2008-07-22
5  4544472 5430461 XFB0231   238 nhdflowline_network.159245 22340825 2008-07-22
6  4543733 5397905 XDA8236   147 nhdflowline_network.161103  4534535 2008-07-22
7  4541853 5413727 XEA3687     5 nhdflowline_network.163319  4529649 2008-07-22
8  4637977 5400242 XBE8396   129 nhdflowline_network.163275  4532981 2008-07-22
9  4548831 5438869 XFB2184   229 nhdflowline_network.159272 22340661 2008-07-22
10 4575424 5405083 XDC3807   190 nhdflowline_network.161051  4539745 2008-07-22
   resolution gnis_id     gnis_name lengthkm      reachcode        flowdir
1      Medium  597915 Potomac River    8.170 02070011001750 With Digitized
2      Medium  597915 Potomac River    1.041 02070011000040 With Digitized
3      Medium  597915 Potomac River    6.985 02070011000203 With Digitized
4      Medium  597915 Potomac River    3.467 02070011000048 With Digitized
5      Medium  597915 Potomac River    3.688 02070010000004 With Digitized
6      Medium  597915 Potomac River    0.990 02070011000221 With Digitized
7      Medium  597915 Potomac River    0.458 02070011001771 With Digitized
8      Medium  597915 Potomac River    0.520 02070011001750 With Digitized
9      Medium  597915 Potomac River    4.475 02070010000033 With Digitized
10     Medium  597915 Potomac River    1.543 02070011000185 With Digitized
   wbareacomi          ftype fcode shape_length streamleve streamorde
1   120049843 ArtificialPath 55800  0.085728676          1          7
2   120049843 ArtificialPath 55800  0.010190576          1          7
3   120049843 ArtificialPath 55800  0.077345846          1          7
4   120049843 ArtificialPath 55800  0.039649342          1          7
5   120049842 ArtificialPath 55800  0.034881270          1          7
6   120049843 ArtificialPath 55800  0.008873612          1          7
7   120049843 ArtificialPath 55800  0.004499801          1          7
8   120049843 ArtificialPath 55800  0.005659154          1          7
9   120049842 ArtificialPath 55800  0.041452856          1          7
10  120049843 ArtificialPath 55800  0.014755067          1          7
   streamcalc  fromnode    tonode  hydroseq levelpathi pathlength terminalpa
1           7 200014188 200014187 200004924  200004858     17.229  200004858
2           7 200013957 200013963 200004967  200004858     32.552  200004858
3           7 200014522 200014506 200005174  200004858     92.756  200004858
4           7 200014169 200014203 200005003  200004858     40.461  200004858
5           7 200087412 200087415 200005272  200004858    151.054  200004858
6           7 200014490 200014911 200005215  200004858    122.824  200004858
7           7 200013326 200013337 200005248  200004858    136.646  200004858
8           7 200014231 200014188 200004927  200004858     25.399  200004858
9           7 200087330 200087336 200005291  200004858    161.292  200004858
10          7 200014913 200014509 200005155  200004858     83.103  200004858
   arbolatesu divergence startflag terminalfl dnlevel uplevelpat uphydroseq
1    27658.72          0         0          0       1  200004858  200004927
2    27561.80          0         0          0       1  200004858  200004970
3    25753.90          0         0          0       1  200004858  200005177
4    27453.62          0         0          0       1  200004858  200005006
5    22989.36          0         0          0       1  200004858  200005277
6    25237.47          0         0          0       1  200004858  200005218
7    24764.56          0         0          0       1  200004858  200005252
8    27645.45          0         0          0       1  200004858  200004930
9    22785.24          0         0          0       1  200004858  200005294
10   26067.23          0         0          0       1  200004858  200005158
   dnlevelpat dnminorhyd dndraincou dnhydroseq frommeas    tomeas rtndiv vpuin
1   200004858          0          1  200004920  0.00000  93.99937      0     0
2   200004858          0          1  200004964  0.00000 100.00000      0     0
3   200004858          0          1  200005171  0.00000 100.00000      0     0
4   200004858          0          1  200005000  0.00000 100.00000      0     0
5   200004858          0          1  200005268  0.00000 100.00000      1     0
6   200004858          0          1  200005212 91.38465 100.00000      0     0
7   200004858          0          1  200005243 53.64653  64.98198      0     0
8   200004858          0          1  200004924 93.99937 100.00000      0     0
9   200004858          0          1  200005288  0.00000 100.00000      0     0
10  200004858          0          1  200005152  0.00000  50.97804      0     0
   vpuout areasqkm totdasqkm divdasqkm tidal totma  wbareatype pathtimema
1       0  32.4540  37216.45  37199.46     1 -9999 StreamRiver      -9999
2       0   0.9801  37046.62  37046.62     1 -9999 StreamRiver      -9999
3       0  16.5015  34609.47  34609.47     1 -9999 StreamRiver      -9999
4       0   9.6399  36889.46  36889.46     1 -9999 StreamRiver      -9999
5       0   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
6       0   0.5949  33913.78  33913.78     1 -9999 StreamRiver      -9999
7       0   1.0764  33341.80  33341.80     1 -9999 StreamRiver      -9999
8       0   0.4041  37173.41  37156.41     1 -9999 StreamRiver      -9999
9       0  14.2146  31047.80  31047.80     1 -9999 StreamRiver      -9999
10      0   2.7810  35021.12  35021.12     1 -9999 StreamRiver      -9999
   hwnodesqkm maxelevraw minelevraw maxelevsmo minelevsmo slope elevfixed
1        <NA>      -9998          0          0          0 1e-05         0
2        <NA>      -9998          0          0          0 1e-05         0
3        <NA>      -9998        -37          0          0 1e-05         0
4        <NA>      -9998          0          0          0 1e-05         0
5        <NA>      -9998        -88          0          0 1e-05         0
6        <NA>      -9998          0          0          0 1e-05         0
7        <NA>      -9998          0          0          0 1e-05         0
8        <NA>      -9998          0          0          0 1e-05         0
9        <NA>      -9998        -19          0          0 1e-05         0
10       <NA>      -9998         -1          0          0 1e-05         0
   hwtype slopelenkm    qa_ma va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01
1              8.170 15071.45 -9999 16297.91 -9999 15918.48 -9999 22132.17
2              1.041 15013.68 -9999 16235.63 -9999 15856.20 -9999 22018.38
3              6.985 14083.91 -9999 15233.17 -9999 14855.31 -9999 20219.85
4              3.467 14953.96 -9999 16171.25 -9999 15791.82 -9999 21901.14
5              3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
6              0.990 13827.57 -9999 14956.76 -9999 14581.67 -9999 19716.94
7              0.458 13614.70 -9999 14727.21 -9999 14353.13 -9999 19302.66
8              0.520 15055.19 -9999 16280.38 -9999 15900.95 -9999 22099.96
9              4.475 12723.79 -9999 13766.36 -9999 13294.18 -9999 17620.96
10             1.543 14238.67 -9999 15400.05 -9999 15022.18 -9999 20519.74
   va_01    qc_01 vc_01    qe_01 ve_01    qa_02 va_02    qc_02 vc_02    qe_02
1  -9999 18462.85 -9999 18691.58 -9999 23454.44 -9999 12888.67 -9999 19502.87
2  -9999 18381.01 -9999 18609.74 -9999 23336.98 -9999 12841.90 -9999 19456.10
3  -9999 17079.56 -9999 17490.95 -9999 21495.62 -9999 12099.89 -9999 19007.85
4  -9999 18296.63 -9999 18525.37 -9999 23216.30 -9999 12793.77 -9999 19407.97
5  -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999 18744.39
6  -9999 16712.83 -9999 17198.88 -9999 20994.84 -9999 11895.10 -9999 18935.38
7  -9999 16409.76 -9999 16921.61 -9999 20581.18 -9999 11724.92 -9999 18819.36
8  -9999 18439.68 -9999 18668.42 -9999 23421.35 -9999 12875.50 -9999 19489.70
9  -9999 15170.02 -9999 16134.65 -9999 18927.94 -9999 11035.07 -9999 18780.40
10 -9999 17297.64 -9999 17709.03 -9999 21798.76 -9999 12223.21 -9999 19131.18
   ve_02    qa_03 va_03    qc_03 vc_03    qe_03 ve_03    qa_04 va_04    qc_04
1  -9999 29902.00 -9999 22444.01 -9999 27130.61 -9999 24711.54 -9999 25208.30
2  -9999 29765.65 -9999 22361.43 -9999 27048.02 -9999 24623.16 -9999 25118.86
3  -9999 27655.92 -9999 21074.01 -9999 26008.86 -9999 23213.12 -9999 23691.51
4  -9999 29626.04 -9999 22276.79 -9999 26963.38 -9999 24532.24 -9999 25026.84
5  -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42 -9999 21812.97
6  -9999 27087.03 -9999 20723.65 -9999 25776.16 -9999 22829.64 -9999 23303.20
7  -9999 26621.03 -9999 20435.59 -9999 25531.24 -9999 22514.85 -9999 22984.41
8  -9999 29863.54 -9999 22420.72 -9999 27107.32 -9999 24686.69 -9999 25183.16
9  -9999 24795.35 -9999 19297.46 -9999 25307.20 -9999 21199.67 -9999 21652.12
10 -9999 27995.97 -9999 21282.76 -9999 26217.62 -9999 23442.53 -9999 23923.78
   vc_04    qe_04 ve_04    qa_05 va_05     qc_05 vc_05    qe_05 ve_05     qa_06
1  -9999 25904.31 -9999 18191.25 -9999 10632.602 -9999 18180.56 -9999 10356.633
2  -9999 25814.88 -9999 18133.77 -9999 10601.970 -9999 18149.93 -9999 10323.755
3  -9999 24388.47 -9999 17209.87 -9999 10108.400 -9999 17630.07 -9999  9797.249
4  -9999 25722.85 -9999 18074.60 -9999 10570.428 -9999 18118.39 -9999 10289.956
5  -9999 22446.43 -9999 15941.03 -9999  9426.704 -9999 16809.89 -9999  9070.622
6  -9999 23999.77 -9999 16970.38 -9999  9980.081 -9999 17497.51 -9999  9659.214
7  -9999 23681.36 -9999 16768.39 -9999  9871.730 -9999 17388.99 -9999  9542.955
8  -9999 25879.17 -9999 18175.09 -9999 10623.991 -9999 18171.95 -9999 10347.374
9  -9999 22277.16 -9999 15834.03 -9999  9369.000 -9999 16740.46 -9999  9009.777
10 -9999 24620.74 -9999 17357.19 -9999 10187.254 -9999 17708.93 -9999  9882.205
   va_06    qc_06 vc_06    qe_06 ve_06    qa_07 va_07    qc_07 vc_07    qe_07
1  -9999 5867.368 -9999 11615.62 -9999 6569.435 -9999 2830.016 -9999 5843.325
2  -9999 5851.191 -9999 11599.44 -9999 6546.831 -9999 2821.874 -9999 5835.183
3  -9999 5591.191 -9999 11332.59 -9999 6184.600 -9999 2690.755 -9999 5699.387
4  -9999 5834.554 -9999 11582.80 -9999 6523.588 -9999 2813.497 -9999 5826.806
5  -9999 5229.309 -9999 10666.96 -9999 5702.503 -9999 2514.268 -9999 5531.090
6  -9999 5522.726 -9999 11264.07 -9999 6087.170 -9999 2655.275 -9999 5663.429
7  -9999 5464.961 -9999 11207.71 -9999 6007.527 -9999 2626.204 -9999 5636.332
8  -9999 5862.813 -9999 11611.06 -9999 6563.069 -9999 2827.724 -9999 5841.033
9  -9999 5198.837 -9999 10631.33 -9999 5661.479 -9999 2499.139 -9999 5514.680
10 -9999 5633.267 -9999 11374.67 -9999 6243.649 -9999 2712.214 -9999 5720.846
   ve_07    qa_08 va_08    qc_08 vc_08    qe_08 ve_08    qa_09 va_09    qc_09
1  -9999 4439.124 -9999 2623.349 -9999 5120.384 -9999 4153.437 -9999 2132.896
2  -9999 4422.685 -9999 2615.095 -9999 5112.130 -9999 4139.053 -9999 2127.168
3  -9999 4162.237 -9999 2483.705 -9999 4974.338 -9999 3919.786 -9999 2039.295
4  -9999 4405.781 -9999 2606.604 -9999 5103.639 -9999 4124.262 -9999 2121.274
5  -9999 3820.042 -9999 2309.167 -9999 4731.121 -9999 3622.987 -9999 1918.561
6  -9999 4095.449 -9999 2449.815 -9999 4942.010 -9999 3861.648 -9999 2015.812
7  -9999 4037.483 -9999 2420.334 -9999 4914.801 -9999 3810.601 -9999 1995.127
8  -9999 4434.494 -9999 2621.025 -9999 5118.060 -9999 4149.386 -9999 2131.283
9  -9999 3790.404 -9999 2293.942 -9999 4711.213 -9999 3597.297 -9999 1908.008
10 -9999 4205.053 -9999 2505.388 -9999 4996.021 -9999 3956.002 -9999 2053.884
   vc_09    qe_09 ve_09    qa_10 va_10    qc_10 vc_10    qe_10 ve_10    qa_11
1  -9999 6611.649 -9999 4914.363 -9999 2255.600 -9999 8074.661 -9999 12179.32
2  -9999 6605.921 -9999 4904.089 -9999 2252.154 -9999 8071.215 -9999 12167.83
3  -9999 6505.764 -9999 4740.249 -9999 2196.928 -9999 8002.059 -9999 11844.32
4  -9999 6600.027 -9999 4893.524 -9999 2248.608 -9999 8067.669 -9999 12153.41
5  -9999 5976.902 -9999 4519.342 -9999 2121.644 -9999 7489.477 -9999 11112.25
6  -9999 6480.252 -9999 4693.480 -9999 2181.070 -9999 7979.317 -9999 11724.94
7  -9999 6460.777 -9999 4655.028 -9999 2168.000 -9999 7967.560 -9999 11622.89
8  -9999 6610.036 -9999 4911.470 -9999 2254.630 -9999 8073.691 -9999 12176.27
9  -9999 5950.703 -9999 4500.223 -9999 2115.083 -9999 7470.272 -9999 11072.17
10 -9999 6520.353 -9999 4767.922 -9999 2206.291 -9999 8011.422 -9999 11915.92
   va_11    qc_11 vc_11    qe_11 ve_11    qa_12 va_12    qc_12 vc_12    qe_12
1  -9999 6265.940 -9999 9828.002 -9999 19948.62 -9999 22131.24 -9999 17164.26
2  -9999 6260.851 -9999 9822.913 -9999 19876.50 -9999 22052.61 -9999 17085.63
3  -9999 6117.288 -9999 9655.004 -9999 18652.71 -9999 20717.55 -9999 15798.19
4  -9999 6254.464 -9999 9816.526 -9999 19800.83 -9999 21970.10 -9999 17003.12
5  -9999 5790.373 -9999 9198.365 -9999 16898.49 -9999 18801.18 -9999 13880.66
6  -9999 6064.175 -9999 9598.865 -9999 18296.88 -9999 20329.09 -9999 15429.21
7  -9999 6018.709 -9999 9553.964 -9999 17997.05 -9999 20001.67 -9999 15107.98
8  -9999 6264.592 -9999 9826.654 -9999 19928.36 -9999 22109.15 -9999 17142.17
9  -9999 5772.392 -9999 9166.637 -9999 16755.33 -9999 18644.64 -9999 13736.21
10 -9999 6149.109 -9999 9686.825 -9999 18868.70 -9999 20953.29 -9999 16033.92
   ve_12 lakefract surfarea rareahload rpuid vpuid enabled seg_len_m
1  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999284
2  -9999      <NA>     <NA>       <NA>   02a    02       1  3.998743
3  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999269
4  -9999      <NA>     <NA>       <NA>   02a    02       1  3.998996
5  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999963
6  -9999      <NA>     <NA>       <NA>   02a    02       1  3.998679
7  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999177
8  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999372
9  -9999      <NA>     <NA>       <NA>   02a    02       1  3.999863
10 -9999      <NA>     <NA>       <NA>   02a    02       1  3.999113
    seg_len_km total_len_km                       geometry
1  0.003999284    201.12863 POLYGON ((4640575 5399698, ...
2  0.003998743    189.04067 POLYGON ((4629780 5403798, ...
3  0.003999269    113.24224 POLYGON ((4566317 5398961, ...
4  0.003998996    176.48993 POLYGON ((4618016 5401418, ...
5  0.003999963     43.64187 POLYGON ((4544473 5430461, ...
6  0.003998679     79.66070 POLYGON ((4543734 5397905, ...
7  0.003999177     63.44530 POLYGON ((4541854 5413727, ...
8  0.003999372    198.47407 POLYGON ((4637978 5400242, ...
9  0.003999863     33.57968 POLYGON ((4548832 5438869, ...
10 0.003999113    127.26417 POLYGON ((4575425 5405083, ...
> # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> cb_station_complete <- gages_snapped %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c(".x", "")) %>%
+   select(-ends_with(".x"))
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> head(cb_station_complete)
  station       X       Y rowid                         id    comid      fdate
1 XBE5486 4640574 5399698    96 nhdflowline_network.163276  4532885 2008-07-22
2 XCE0055 4629779 5403798    47 nhdflowline_network.160914  4532325 2008-07-22
3 XDB4544 4566316 5398961   166 nhdflowline_network.161077  4534599 2008-07-22
4 XCD5599 4618015 5401418    78 nhdflowline_network.160921  4532829 2008-07-22
5 XFB0231 4544472 5430461   238 nhdflowline_network.159245 22340825 2008-07-22
6 XDA8236 4543733 5397905   147 nhdflowline_network.161103  4534535 2008-07-22
  resolution gnis_id     gnis_name lengthkm      reachcode        flowdir
1     Medium  597915 Potomac River    8.170 02070011001750 With Digitized
2     Medium  597915 Potomac River    1.041 02070011000040 With Digitized
3     Medium  597915 Potomac River    6.985 02070011000203 With Digitized
4     Medium  597915 Potomac River    3.467 02070011000048 With Digitized
5     Medium  597915 Potomac River    3.688 02070010000004 With Digitized
6     Medium  597915 Potomac River    0.990 02070011000221 With Digitized
  wbareacomi          ftype fcode shape_length streamleve streamorde streamcalc
1  120049843 ArtificialPath 55800  0.085728676          1          7          7
2  120049843 ArtificialPath 55800  0.010190576          1          7          7
3  120049843 ArtificialPath 55800  0.077345846          1          7          7
4  120049843 ArtificialPath 55800  0.039649342          1          7          7
5  120049842 ArtificialPath 55800  0.034881270          1          7          7
6  120049843 ArtificialPath 55800  0.008873612          1          7          7
   fromnode    tonode  hydroseq levelpathi pathlength terminalpa arbolatesu
1 200014188 200014187 200004924  200004858     17.229  200004858   27658.72
2 200013957 200013963 200004967  200004858     32.552  200004858   27561.80
3 200014522 200014506 200005174  200004858     92.756  200004858   25753.90
4 200014169 200014203 200005003  200004858     40.461  200004858   27453.62
5 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
6 200014490 200014911 200005215  200004858    122.824  200004858   25237.47
  divergence startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat
1          0         0          0       1  200004858  200004927  200004858
2          0         0          0       1  200004858  200004970  200004858
3          0         0          0       1  200004858  200005177  200004858
4          0         0          0       1  200004858  200005006  200004858
5          0         0          0       1  200004858  200005277  200004858
6          0         0          0       1  200004858  200005218  200004858
  dnminorhyd dndraincou dnhydroseq frommeas    tomeas rtndiv vpuin vpuout
1          0          1  200004920  0.00000  93.99937      0     0      0
2          0          1  200004964  0.00000 100.00000      0     0      0
3          0          1  200005171  0.00000 100.00000      0     0      0
4          0          1  200005000  0.00000 100.00000      0     0      0
5          0          1  200005268  0.00000 100.00000      1     0      0
6          0          1  200005212 91.38465 100.00000      0     0      0
  areasqkm totdasqkm divdasqkm tidal totma  wbareatype pathtimema hwnodesqkm
1  32.4540  37216.45  37199.46     1 -9999 StreamRiver      -9999       <NA>
2   0.9801  37046.62  37046.62     1 -9999 StreamRiver      -9999       <NA>
3  16.5015  34609.47  34609.47     1 -9999 StreamRiver      -9999       <NA>
4   9.6399  36889.46  36889.46     1 -9999 StreamRiver      -9999       <NA>
5   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999       <NA>
6   0.5949  33913.78  33913.78     1 -9999 StreamRiver      -9999       <NA>
  maxelevraw minelevraw maxelevsmo minelevsmo slope elevfixed hwtype slopelenkm
1      -9998          0          0          0 1e-05         0             8.170
2      -9998          0          0          0 1e-05         0             1.041
3      -9998        -37          0          0 1e-05         0             6.985
4      -9998          0          0          0 1e-05         0             3.467
5      -9998        -88          0          0 1e-05         0             3.688
6      -9998          0          0          0 1e-05         0             0.990
     qa_ma va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01 va_01    qc_01 vc_01
1 15071.45 -9999 16297.91 -9999 15918.48 -9999 22132.17 -9999 18462.85 -9999
2 15013.68 -9999 16235.63 -9999 15856.20 -9999 22018.38 -9999 18381.01 -9999
3 14083.91 -9999 15233.17 -9999 14855.31 -9999 20219.85 -9999 17079.56 -9999
4 14953.96 -9999 16171.25 -9999 15791.82 -9999 21901.14 -9999 18296.63 -9999
5 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03 -9999 15322.78 -9999
6 13827.57 -9999 14956.76 -9999 14581.67 -9999 19716.94 -9999 16712.83 -9999
     qe_01 ve_01    qa_02 va_02    qc_02 vc_02    qe_02 ve_02    qa_03 va_03
1 18691.58 -9999 23454.44 -9999 12888.67 -9999 19502.87 -9999 29902.00 -9999
2 18609.74 -9999 23336.98 -9999 12841.90 -9999 19456.10 -9999 29765.65 -9999
3 17490.95 -9999 21495.62 -9999 12099.89 -9999 19007.85 -9999 27655.92 -9999
4 18525.37 -9999 23216.30 -9999 12793.77 -9999 19407.97 -9999 29626.04 -9999
5 16219.54 -9999 19133.31 -9999 11121.65 -9999 18744.39 -9999 25024.92 -9999
6 17198.88 -9999 20994.84 -9999 11895.10 -9999 18935.38 -9999 27087.03 -9999
     qc_03 vc_03    qe_03 ve_03    qa_04 va_04    qc_04 vc_04    qe_04 ve_04
1 22444.01 -9999 27130.61 -9999 24711.54 -9999 25208.30 -9999 25904.31 -9999
2 22361.43 -9999 27048.02 -9999 24623.16 -9999 25118.86 -9999 25814.88 -9999
3 21074.01 -9999 26008.86 -9999 23213.12 -9999 23691.51 -9999 24388.47 -9999
4 22276.79 -9999 26963.38 -9999 24532.24 -9999 25026.84 -9999 25722.85 -9999
5 19441.44 -9999 25348.35 -9999 21358.42 -9999 21812.97 -9999 22446.43 -9999
6 20723.65 -9999 25776.16 -9999 22829.64 -9999 23303.20 -9999 23999.77 -9999
     qa_05 va_05     qc_05 vc_05    qe_05 ve_05     qa_06 va_06    qc_06 vc_06
1 18191.25 -9999 10632.602 -9999 18180.56 -9999 10356.633 -9999 5867.368 -9999
2 18133.77 -9999 10601.970 -9999 18149.93 -9999 10323.755 -9999 5851.191 -9999
3 17209.87 -9999 10108.400 -9999 17630.07 -9999  9797.249 -9999 5591.191 -9999
4 18074.60 -9999 10570.428 -9999 18118.39 -9999 10289.956 -9999 5834.554 -9999
5 15941.03 -9999  9426.704 -9999 16809.89 -9999  9070.622 -9999 5229.309 -9999
6 16970.38 -9999  9980.081 -9999 17497.51 -9999  9659.214 -9999 5522.726 -9999
     qe_06 ve_06    qa_07 va_07    qc_07 vc_07    qe_07 ve_07    qa_08 va_08
1 11615.62 -9999 6569.435 -9999 2830.016 -9999 5843.325 -9999 4439.124 -9999
2 11599.44 -9999 6546.831 -9999 2821.874 -9999 5835.183 -9999 4422.685 -9999
3 11332.59 -9999 6184.600 -9999 2690.755 -9999 5699.387 -9999 4162.237 -9999
4 11582.80 -9999 6523.588 -9999 2813.497 -9999 5826.806 -9999 4405.781 -9999
5 10666.96 -9999 5702.503 -9999 2514.268 -9999 5531.090 -9999 3820.042 -9999
6 11264.07 -9999 6087.170 -9999 2655.275 -9999 5663.429 -9999 4095.449 -9999
     qc_08 vc_08    qe_08 ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09
1 2623.349 -9999 5120.384 -9999 4153.437 -9999 2132.896 -9999 6611.649 -9999
2 2615.095 -9999 5112.130 -9999 4139.053 -9999 2127.168 -9999 6605.921 -9999
3 2483.705 -9999 4974.338 -9999 3919.786 -9999 2039.295 -9999 6505.764 -9999
4 2606.604 -9999 5103.639 -9999 4124.262 -9999 2121.274 -9999 6600.027 -9999
5 2309.167 -9999 4731.121 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999
6 2449.815 -9999 4942.010 -9999 3861.648 -9999 2015.812 -9999 6480.252 -9999
     qa_10 va_10    qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11
1 4914.363 -9999 2255.600 -9999 8074.661 -9999 12179.32 -9999 6265.940 -9999
2 4904.089 -9999 2252.154 -9999 8071.215 -9999 12167.83 -9999 6260.851 -9999
3 4740.249 -9999 2196.928 -9999 8002.059 -9999 11844.32 -9999 6117.288 -9999
4 4893.524 -9999 2248.608 -9999 8067.669 -9999 12153.41 -9999 6254.464 -9999
5 4519.342 -9999 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999
6 4693.480 -9999 2181.070 -9999 7979.317 -9999 11724.94 -9999 6064.175 -9999
     qe_11 ve_11    qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract
1 9828.002 -9999 19948.62 -9999 22131.24 -9999 17164.26 -9999      <NA>
2 9822.913 -9999 19876.50 -9999 22052.61 -9999 17085.63 -9999      <NA>
3 9655.004 -9999 18652.71 -9999 20717.55 -9999 15798.19 -9999      <NA>
4 9816.526 -9999 19800.83 -9999 21970.10 -9999 17003.12 -9999      <NA>
5 9198.365 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999      <NA>
6 9598.865 -9999 18296.88 -9999 20329.09 -9999 15429.21 -9999      <NA>
  surfarea rareahload rpuid vpuid enabled seg_len_m  seg_len_km total_len_km
1     <NA>       <NA>   02a    02       1  3.999284 0.003999284    201.12863
2     <NA>       <NA>   02a    02       1  3.998743 0.003998743    189.04067
3     <NA>       <NA>   02a    02       1  3.999269 0.003999269    113.24224
4     <NA>       <NA>   02a    02       1  3.998996 0.003998996    176.48993
5     <NA>       <NA>   02a    02       1  3.999963 0.003999963     43.64187
6     <NA>       <NA>   02a    02       1  3.998679 0.003998679     79.66070
> conmon <- rbind(as.data.frame(conmon_eotb), conmon_vecos) %>%
+   left_join(cb_station_complete, by = "station") %>%
+   # and arrange by latitude (roughly longitudinal laong flowpath)
+   arrange(hydroseq)
+   C-c C-c
Warning message:
In left_join(., cb_station_complete, by = "station") :
  Detected an unexpected many-to-many relationship between `x` and `y`.
ℹ Row 2578007 of `x` matches multiple rows in `y`.
ℹ Row 9 of `y` matches multiple rows in `x`.
ℹ If a many-to-many relationship is expected, set `relationship = "many-to-many"` to silence this
  warning.
> conmon <- rbind(as.data.frame(conmon_eotb), conmon_vecos) %>%
+   left_join(cb_station_complete, by = "station") %>%
+   # and arrange by latitude (roughly longitudinal laong flowpath)
+   arrange(total_len_km)
+
Process R killed at Fri Apr 12 13:18:58 2024


R version 4.2.2 Patched (2022-11-10 r83330) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> setwd('/home/weston/science/UMD/ORISE/bayTools/')
> library(bayTools)
> library(dplyr)
+ library(sf)
+ library(ggplot2)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(mapview) # html mapping
+ library(leaflet) # html mapping
+ library(leaflet.extras)
+ library(ggplot2) # plotting
+ library(dplyr) # wrangling data
+ library(here) # setting directories safely
+ library(viridis) # color scheme
+ library(USAboundaries) # county/state boundaries
+ library(nhdplusTools) # USGS/NHD rivers data
+ # further geospatial tools
+ library(nngeo)
+ library(measurements)
+ library(lwgeom)
+ library(elevatr)
+ library(rgeos)
Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1; sf_use_s2() is TRUE
> > load('data/conmon_eotb_2001_2022_2023_08_11_1707.rda')
+ load('data/conmon_vecos_2003_2022_2023_08_11_1739_rev2023_10_28.rda')
# find common columns between MDDNR and VECOS
+ common_cols <- intersect(colnames(conmon_eotb_2001_2022), colnames(conmon_vecos_2003_2022))
conmon_eotb <- subset(conmon_eotb_2001_2022, select = common_cols)
+ conmon_vecos <- subset(conmon_vecos_2003_2022, select = common_cols)
> here() starts at /home/weston/science/UMD/ORISE/bayTools
> Loading required package: viridisLite
> The USAboundariesData package needs to be installed.
 Please try installing the package using the following command:
     install.packages("USAboundariesData", repos = "https://ropensci.r-universe.dev", type = "source")
> > Linking to liblwgeom 3.0.0beta1 r16016, GEOS 3.8.0, PROJ 6.3.1

Attaching package: ‘lwgeom’

The following object is masked from ‘package:sf’:

    st_perimeter

> > Loading required package: sp
rgeos version: 0.6-1, (SVN revision 692)
 GEOS runtime version: 3.8.0-CAPI-1.13.1
 Please note that rgeos will be retired during 2023,
plan transition to sf functions using GEOS at your earliest convenience.
 Linking to sp version: 1.5-1
 Polygon checking: TRUE


Attaching package: ‘rgeos’

The following object is masked from ‘package:dplyr’:

    symdiff

> > > > > cb_station_complete <- googlesheets4::read_sheet(
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
The googlesheets4 package is requesting access to your Google account.
Enter '1' to start a new auth process or select a pre-authorized account.
1: Send me to the browser for a new auth process.
2: wslaught@umd.edu
Selection: 2
✔ Reading from stations_manual.
✔ Range ''data_flowlines''.
> conmon <- rbind(as.data.frame(conmon_eotb), conmon_vecos)
> head(conmon)
            date_time station layer depth  temp sp_cond salinity do_sat   do
1 2001-05-01 14:00:52 CTT0014    BS     1 19.14    8832     4.95   89.2 8.01
2 2001-05-01 14:15:52 CTT0014    BS     1 19.23    8795     4.93   86.4 7.75
3 2001-05-01 14:30:52 CTT0014    BS     1 19.36    8721     4.88   86.5 7.74
4 2001-05-01 14:45:52 CTT0014    BS     1 19.34    8723     4.89   85.7 7.67
5 2001-05-01 15:00:52 CTT0014    BS     1 19.51    8684     4.86   81.6 7.28
6 2001-05-01 15:15:52 CTT0014    BS     1 19.68    8638     4.83   82.8 7.37
    ph turb fluor tchl_pre_cal chla
1 7.81 20.3   3.2         17.8   NA
2 7.38 13.1   6.2         33.8   NA
3 7.34 12.6   6.5         35.9   NA
4 7.34 11.3   4.5         24.4   NA
5 7.31 16.3   5.6         30.5   NA
6 7.30 12.8   5.9         32.5   NA
> head(cb_station_complete)
# A tibble: 6 × 145
  station        X        Y rowid id        comid fdate               resolution
  <chr>      <dbl>    <dbl> <dbl> <chr>     <dbl> <dttm>              <chr>
1 XBE5486 4640574. 5399698.    96 nhdflow… 4.53e6 2008-07-22 04:00:00 Medium
2 XCE0055 4629779. 5403798.    47 nhdflow… 4.53e6 2008-07-22 04:00:00 Medium
3 XDB4544 4566316. 5398961.   166 nhdflow… 4.53e6 2008-07-22 04:00:00 Medium
4 XCD5599 4618015. 5401418.    78 nhdflow… 4.53e6 2008-07-22 04:00:00 Medium
5 XFB0231 4544472. 5430461.   238 nhdflow… 2.23e7 2008-07-22 04:00:00 Medium
6 XDA8236 4543733. 5397905.   147 nhdflow… 4.53e6 2008-07-22 04:00:00 Medium
# ℹ 137 more variables: gnis_id <chr>, gnis_name <chr>, lengthkm <dbl>,
#   reachcode <chr>, flowdir <chr>, wbareacomi <dbl>, ftype <chr>, fcode <dbl>,
#   shape_length <dbl>, streamleve <dbl>, streamorde <dbl>, streamcalc <dbl>,
#   fromnode <dbl>, tonode <dbl>, hydroseq <dbl>, levelpathi <dbl>,
#   pathlength <dbl>, terminalpa <dbl>, arbolatesu <dbl>, divergence <dbl>,
#   startflag <dbl>, terminalfl <dbl>, dnlevel <dbl>, uplevelpat <dbl>,
#   uphydroseq <dbl>, dnlevelpat <dbl>, dnminorhyd <dbl>, dndraincou <dbl>, …
# ℹ Use `colnames()` to see all variable names
> conmon <- conmon %>%
+   filter(station %in% cb_station_complete$station)
+ > head(conmon)
            date_time station layer depth  temp sp_cond salinity do_sat    do
1 2004-04-21 11:15:01 XFB2184    BS 0.236 21.34     197     0.09  152.2 13.48
2 2004-04-21 11:30:01 XFB2184    BS 0.190 21.54     197     0.09  149.0 13.13
3 2004-04-21 11:45:01 XFB2184    BS 0.148 21.91     198     0.09  144.2 12.63
4 2004-04-21 12:00:01 XFB2184    BS 0.101 22.30     197     0.09  143.7 12.48
5 2004-04-21 12:15:01 XFB2184    BS 0.054 22.64     196     0.09  142.8 12.33
6 2004-04-21 12:30:01 XFB2184    BS 0.000 23.07     195     0.09  142.5 12.20
    ph turb fluor tchl_pre_cal chla
1 8.94 27.2   8.1         33.4   NA
2 8.93 29.7   8.6         35.6   NA
3 8.86 41.0   8.5         35.1   NA
4 8.89 52.1   9.1         37.7   NA
5 8.88 56.2   9.4         38.8   NA
6 8.87 63.1   9.5         39.3   NA
> conmon <- conmon %>%
+   filter(station %in% cb_station_complete$station) %>%
+   left_join(cb_station_complete, by = "station")
+ Warning message:
In left_join(., cb_station_complete, by = "station") :
  Detected an unexpected many-to-many relationship between `x` and `y`.
ℹ Row 379674 of `x` matches multiple rows in `y`.
ℹ Row 9 of `y` matches multiple rows in `x`.
ℹ If a many-to-many relationship is expected, set `relationship = "many-to-many"` to silence this
  warning.
> head(conmon)
            date_time station layer depth  temp sp_cond salinity do_sat    do
1 2004-04-21 11:15:01 XFB2184    BS 0.236 21.34     197     0.09  152.2 13.48
2 2004-04-21 11:30:01 XFB2184    BS 0.190 21.54     197     0.09  149.0 13.13
3 2004-04-21 11:45:01 XFB2184    BS 0.148 21.91     198     0.09  144.2 12.63
4 2004-04-21 12:00:01 XFB2184    BS 0.101 22.30     197     0.09  143.7 12.48
5 2004-04-21 12:15:01 XFB2184    BS 0.054 22.64     196     0.09  142.8 12.33
6 2004-04-21 12:30:01 XFB2184    BS 0.000 23.07     195     0.09  142.5 12.20
    ph turb fluor tchl_pre_cal chla       X       Y rowid
1 8.94 27.2   8.1         33.4   NA 4548831 5438869   229
2 8.93 29.7   8.6         35.6   NA 4548831 5438869   229
3 8.86 41.0   8.5         35.1   NA 4548831 5438869   229
4 8.89 52.1   9.1         37.7   NA 4548831 5438869   229
5 8.88 56.2   9.4         38.8   NA 4548831 5438869   229
6 8.87 63.1   9.5         39.3   NA 4548831 5438869   229
                          id    comid               fdate resolution gnis_id
1 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
2 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
3 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
4 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
5 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
6 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
      gnis_name lengthkm      reachcode        flowdir wbareacomi
1 Potomac River    4.475 02070010000033 With Digitized  120049842
2 Potomac River    4.475 02070010000033 With Digitized  120049842
3 Potomac River    4.475 02070010000033 With Digitized  120049842
4 Potomac River    4.475 02070010000033 With Digitized  120049842
5 Potomac River    4.475 02070010000033 With Digitized  120049842
6 Potomac River    4.475 02070010000033 With Digitized  120049842
           ftype fcode shape_length streamleve streamorde streamcalc  fromnode
1 ArtificialPath 55800   0.04145286          1          7          7 200087330
2 ArtificialPath 55800   0.04145286          1          7          7 200087330
3 ArtificialPath 55800   0.04145286          1          7          7 200087330
4 ArtificialPath 55800   0.04145286          1          7          7 200087330
5 ArtificialPath 55800   0.04145286          1          7          7 200087330
6 ArtificialPath 55800   0.04145286          1          7          7 200087330
     tonode  hydroseq levelpathi pathlength terminalpa arbolatesu divergence
1 200087336 200005291  200004858    161.292  200004858   22785.24          0
2 200087336 200005291  200004858    161.292  200004858   22785.24          0
3 200087336 200005291  200004858    161.292  200004858   22785.24          0
4 200087336 200005291  200004858    161.292  200004858   22785.24          0
5 200087336 200005291  200004858    161.292  200004858   22785.24          0
6 200087336 200005291  200004858    161.292  200004858   22785.24          0
  startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat dnminorhyd
1         0          0       1  200004858  200005294  200004858          0
2         0          0       1  200004858  200005294  200004858          0
3         0          0       1  200004858  200005294  200004858          0
4         0          0       1  200004858  200005294  200004858          0
5         0          0       1  200004858  200005294  200004858          0
6         0          0       1  200004858  200005294  200004858          0
  dndraincou dnhydroseq frommeas tomeas rtndiv vpuin vpuout areasqkm totdasqkm
1          1  200005288        0    100      0     0      0  14.2146   31047.8
2          1  200005288        0    100      0     0      0  14.2146   31047.8
3          1  200005288        0    100      0     0      0  14.2146   31047.8
4          1  200005288        0    100      0     0      0  14.2146   31047.8
5          1  200005288        0    100      0     0      0  14.2146   31047.8
6          1  200005288        0    100      0     0      0  14.2146   31047.8
  divdasqkm tidal totma  wbareatype pathtimema hwnodesqkm maxelevraw minelevraw
1   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
2   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
3   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
4   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
5   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
6   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
  maxelevsmo minelevsmo slope elevfixed hwtype slopelenkm    qa_ma va_ma
1          0          0 1e-05         0     NA      4.475 12723.79 -9999
2          0          0 1e-05         0     NA      4.475 12723.79 -9999
3          0          0 1e-05         0     NA      4.475 12723.79 -9999
4          0          0 1e-05         0     NA      4.475 12723.79 -9999
5          0          0 1e-05         0     NA      4.475 12723.79 -9999
6          0          0 1e-05         0     NA      4.475 12723.79 -9999
     qc_ma vc_ma    qe_ma ve_ma    qa_01 va_01    qc_01 vc_01    qe_01 ve_01
1 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
2 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
3 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
4 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
5 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
6 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
     qa_02 va_02    qc_02 vc_02   qe_02 ve_02    qa_03 va_03    qc_03 vc_03
1 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
2 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
3 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
4 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
5 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
6 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
    qe_03 ve_03    qa_04 va_04    qc_04 vc_04    qe_04 ve_04    qa_05 va_05
1 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
2 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
3 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
4 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
5 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
6 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
  qc_05 vc_05    qe_05 ve_05    qa_06 va_06    qc_06 vc_06    qe_06 ve_06
1  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
2  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
3  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
4  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
5  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
6  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
     qa_07 va_07    qc_07 vc_07   qe_07 ve_07    qa_08 va_08    qc_08 vc_08
1 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
2 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
3 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
4 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
5 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
6 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
     qe_08 ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09    qa_10 va_10
1 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
2 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
3 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
4 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
5 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
6 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
     qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11    qe_11 ve_11
1 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
2 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
3 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
4 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
5 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
6 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
     qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract surfarea rareahload
1 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
2 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
3 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
4 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
5 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
6 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
  rpuid vpuid enabled seg_len_m  seg_len_km total_len_km
1   02a    02       1  3.999863 0.003999863     33.57968
2   02a    02       1  3.999863 0.003999863     33.57968
3   02a    02       1  3.999863 0.003999863     33.57968
4   02a    02       1  3.999863 0.003999863     33.57968
5   02a    02       1  3.999863 0.003999863     33.57968
6   02a    02       1  3.999863 0.003999863     33.57968
> conmon <- conmon %>%
+   # and arrange by latitude (roughly longitudinal laong flowpath)
+   arrange(total_len_km)
+ > head(conmon)
            date_time station layer depth  temp sp_cond salinity do_sat    do
1 2004-04-21 11:15:01 XFB2184    BS 0.236 21.34     197     0.09  152.2 13.48
2 2004-04-21 11:30:01 XFB2184    BS 0.190 21.54     197     0.09  149.0 13.13
3 2004-04-21 11:45:01 XFB2184    BS 0.148 21.91     198     0.09  144.2 12.63
4 2004-04-21 12:00:01 XFB2184    BS 0.101 22.30     197     0.09  143.7 12.48
5 2004-04-21 12:15:01 XFB2184    BS 0.054 22.64     196     0.09  142.8 12.33
6 2004-04-21 12:30:01 XFB2184    BS 0.000 23.07     195     0.09  142.5 12.20
    ph turb fluor tchl_pre_cal chla       X       Y rowid
1 8.94 27.2   8.1         33.4   NA 4548831 5438869   229
2 8.93 29.7   8.6         35.6   NA 4548831 5438869   229
3 8.86 41.0   8.5         35.1   NA 4548831 5438869   229
4 8.89 52.1   9.1         37.7   NA 4548831 5438869   229
5 8.88 56.2   9.4         38.8   NA 4548831 5438869   229
6 8.87 63.1   9.5         39.3   NA 4548831 5438869   229
                          id    comid               fdate resolution gnis_id
1 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
2 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
3 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
4 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
5 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
6 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
      gnis_name lengthkm      reachcode        flowdir wbareacomi
1 Potomac River    4.475 02070010000033 With Digitized  120049842
2 Potomac River    4.475 02070010000033 With Digitized  120049842
3 Potomac River    4.475 02070010000033 With Digitized  120049842
4 Potomac River    4.475 02070010000033 With Digitized  120049842
5 Potomac River    4.475 02070010000033 With Digitized  120049842
6 Potomac River    4.475 02070010000033 With Digitized  120049842
           ftype fcode shape_length streamleve streamorde streamcalc  fromnode
1 ArtificialPath 55800   0.04145286          1          7          7 200087330
2 ArtificialPath 55800   0.04145286          1          7          7 200087330
3 ArtificialPath 55800   0.04145286          1          7          7 200087330
4 ArtificialPath 55800   0.04145286          1          7          7 200087330
5 ArtificialPath 55800   0.04145286          1          7          7 200087330
6 ArtificialPath 55800   0.04145286          1          7          7 200087330
     tonode  hydroseq levelpathi pathlength terminalpa arbolatesu divergence
1 200087336 200005291  200004858    161.292  200004858   22785.24          0
2 200087336 200005291  200004858    161.292  200004858   22785.24          0
3 200087336 200005291  200004858    161.292  200004858   22785.24          0
4 200087336 200005291  200004858    161.292  200004858   22785.24          0
5 200087336 200005291  200004858    161.292  200004858   22785.24          0
6 200087336 200005291  200004858    161.292  200004858   22785.24          0
  startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat dnminorhyd
1         0          0       1  200004858  200005294  200004858          0
2         0          0       1  200004858  200005294  200004858          0
3         0          0       1  200004858  200005294  200004858          0
4         0          0       1  200004858  200005294  200004858          0
5         0          0       1  200004858  200005294  200004858          0
6         0          0       1  200004858  200005294  200004858          0
  dndraincou dnhydroseq frommeas tomeas rtndiv vpuin vpuout areasqkm totdasqkm
1          1  200005288        0    100      0     0      0  14.2146   31047.8
2          1  200005288        0    100      0     0      0  14.2146   31047.8
3          1  200005288        0    100      0     0      0  14.2146   31047.8
4          1  200005288        0    100      0     0      0  14.2146   31047.8
5          1  200005288        0    100      0     0      0  14.2146   31047.8
6          1  200005288        0    100      0     0      0  14.2146   31047.8
  divdasqkm tidal totma  wbareatype pathtimema hwnodesqkm maxelevraw minelevraw
1   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
2   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
3   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
4   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
5   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
6   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
  maxelevsmo minelevsmo slope elevfixed hwtype slopelenkm    qa_ma va_ma
1          0          0 1e-05         0     NA      4.475 12723.79 -9999
2          0          0 1e-05         0     NA      4.475 12723.79 -9999
3          0          0 1e-05         0     NA      4.475 12723.79 -9999
4          0          0 1e-05         0     NA      4.475 12723.79 -9999
5          0          0 1e-05         0     NA      4.475 12723.79 -9999
6          0          0 1e-05         0     NA      4.475 12723.79 -9999
     qc_ma vc_ma    qe_ma ve_ma    qa_01 va_01    qc_01 vc_01    qe_01 ve_01
1 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
2 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
3 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
4 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
5 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
6 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
     qa_02 va_02    qc_02 vc_02   qe_02 ve_02    qa_03 va_03    qc_03 vc_03
1 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
2 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
3 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
4 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
5 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
6 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
    qe_03 ve_03    qa_04 va_04    qc_04 vc_04    qe_04 ve_04    qa_05 va_05
1 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
2 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
3 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
4 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
5 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
6 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
  qc_05 vc_05    qe_05 ve_05    qa_06 va_06    qc_06 vc_06    qe_06 ve_06
1  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
2  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
3  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
4  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
5  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
6  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
     qa_07 va_07    qc_07 vc_07   qe_07 ve_07    qa_08 va_08    qc_08 vc_08
1 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
2 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
3 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
4 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
5 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
6 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
     qe_08 ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09    qa_10 va_10
1 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
2 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
3 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
4 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
5 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
6 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
     qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11    qe_11 ve_11
1 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
2 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
3 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
4 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
5 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
6 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
     qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract surfarea rareahload
1 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
2 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
3 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
4 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
5 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
6 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
  rpuid vpuid enabled seg_len_m  seg_len_km total_len_km
1   02a    02       1  3.999863 0.003999863     33.57968
2   02a    02       1  3.999863 0.003999863     33.57968
3   02a    02       1  3.999863 0.003999863     33.57968
4   02a    02       1  3.999863 0.003999863     33.57968
5   02a    02       1  3.999863 0.003999863     33.57968
6   02a    02       1  3.999863 0.003999863     33.57968
> # Here is a list of MDDNR and VECOS stations along the Potomac River
+ stations <- c(
+ # MDDNR
+ "XDB4544",
+ "XCD5599",
+ "XFB0231",
+ "XDA8236",
+ "XEA3687",
+ "XBE8396",
+ "XFB2184",
+ "XDC3807",
+ "XDB8884",
+ "XBF6843",
+ "XBF7904",
+ "XCC8346",
+ "XCC9680",
+ "XCF1440",
+ # VECOS
+ "POH002.10",
+ "OCC002.47",
+ "POM000.97",
+ "MON000.18",
+ "NOM002.36",
+ "WES000.18"
+ )
> # set years of interest
+ years <- c(2007, 2008)
> getSeason <- function(DATES) {
+     WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
+     SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
+     SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
+     FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
+
+     # Convert dates from any year to 2012 dates
+     d <- as.Date(strftime(DATES, format="2012-%m-%d"))
+
+     ifelse (d >= WS | d < SE, "Winter",
+       ifelse (d >= SE & d < SS, "Spring",
+         ifelse (d >= SS & d < FE, "Summer", "Fall")))
+ }
+
+ # time series with mean, model, and obs
+ conmon.ts <- conmon %>%
+   filter(
+     station %in% stations,
+   ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S"),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          season = getSeason(date),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          ## do_rollmean_1d = zoo::rollmean(do, 96, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+       year %in% years,
+     )
+
+
+
+ conmon.ts.sum <- conmon.ts %>%
+   rename(do_mgl = do) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     latitude = max(latitude),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+   )
+ Error in `mutate()`:
ℹ In argument: `diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude)`.
Caused by error in `computeSolarToLocalTimeDifference()`:
! object 'longitude' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> > > > . + > Error in rename(., do_mgl = do) : object 'conmon.ts' not found
> colnames(conmon)
  [1] "date_time"    "station"      "layer"        "depth"        "temp"
  [6] "sp_cond"      "salinity"     "do_sat"       "do"           "ph"
 [11] "turb"         "fluor"        "tchl_pre_cal" "chla"         "X"
 [16] "Y"            "rowid"        "id"           "comid"        "fdate"
 [21] "resolution"   "gnis_id"      "gnis_name"    "lengthkm"     "reachcode"
 [26] "flowdir"      "wbareacomi"   "ftype"        "fcode"        "shape_length"
 [31] "streamleve"   "streamorde"   "streamcalc"   "fromnode"     "tonode"
 [36] "hydroseq"     "levelpathi"   "pathlength"   "terminalpa"   "arbolatesu"
 [41] "divergence"   "startflag"    "terminalfl"   "dnlevel"      "uplevelpat"
 [46] "uphydroseq"   "dnlevelpat"   "dnminorhyd"   "dndraincou"   "dnhydroseq"
 [51] "frommeas"     "tomeas"       "rtndiv"       "vpuin"        "vpuout"
 [56] "areasqkm"     "totdasqkm"    "divdasqkm"    "tidal"        "totma"
 [61] "wbareatype"   "pathtimema"   "hwnodesqkm"   "maxelevraw"   "minelevraw"
 [66] "maxelevsmo"   "minelevsmo"   "slope"        "elevfixed"    "hwtype"
 [71] "slopelenkm"   "qa_ma"        "va_ma"        "qc_ma"        "vc_ma"
 [76] "qe_ma"        "ve_ma"        "qa_01"        "va_01"        "qc_01"
 [81] "vc_01"        "qe_01"        "ve_01"        "qa_02"        "va_02"
 [86] "qc_02"        "vc_02"        "qe_02"        "ve_02"        "qa_03"
 [91] "va_03"        "qc_03"        "vc_03"        "qe_03"        "ve_03"
 [96] "qa_04"        "va_04"        "qc_04"        "vc_04"        "qe_04"
[101] "ve_04"        "qa_05"        "va_05"        "qc_05"        "vc_05"
[106] "qe_05"        "ve_05"        "qa_06"        "va_06"        "qc_06"
[111] "vc_06"        "qe_06"        "ve_06"        "qa_07"        "va_07"
[116] "qc_07"        "vc_07"        "qe_07"        "ve_07"        "qa_08"
[121] "va_08"        "qc_08"        "vc_08"        "qe_08"        "ve_08"
[126] "qa_09"        "va_09"        "qc_09"        "vc_09"        "qe_09"
[131] "ve_09"        "qa_10"        "va_10"        "qc_10"        "vc_10"
[136] "qe_10"        "ve_10"        "qa_11"        "va_11"        "qc_11"
[141] "vc_11"        "qe_11"        "ve_11"        "qa_12"        "va_12"
[146] "qc_12"        "vc_12"        "qe_12"        "ve_12"        "lakefract"
[151] "surfarea"     "rareahload"   "rpuid"        "vpuid"        "enabled"
[156] "seg_len_m"    "seg_len_km"   "total_len_km"
> head(conmon.ts)
Error in head(conmon.ts) : object 'conmon.ts' not found
> cb_stations_manual.r <- googlesheets4::read_sheet(ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0"
+                                                 )
+ ✔ Reading from stations_manual.
✔ Range Sheet1.
> cb_station_complete <- cb_station_complete %>%
+   left_join(cb_stations_manual.r, by = 'station')
+ Error in `left_join()`:
! Join columns in `y` must be present in the data.
✖ Problem with `station`.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> cb_stations_manual <- cb_stations_manual.r %>%
+   filter(!is.na(site_code)) %>%
+   ## filter(start_year < 2009, end_year > 2007) %>%
+   rename(station = site_code)
> cb_station_complete <- cb_station_complete %>%
+   left_join(cb_stations_manual.r, by = 'station')
+ Error in `left_join()`:
! Join columns in `y` must be present in the data.
✖ Problem with `station`.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> cb_station_complete <- cb_station_complete %>%
+   left_join(cb_stations_manual, by = 'station')
>
> conmon <- rbind(as.data.frame(conmon_eotb), conmon_vecos)
> conmon <- conmon %>%
+   filter(station %in% cb_station_complete$station) %>%
+   left_join(cb_station_complete, by = "station") %>%
+   # and arrange by latitude (roughly longitudinal laong flowpath)
+   arrange(total_len_km)
+ Warning message:
In left_join(., cb_station_complete, by = "station") :
  Detected an unexpected many-to-many relationship between `x` and `y`.
ℹ Row 379674 of `x` matches multiple rows in `y`.
ℹ Row 9 of `y` matches multiple rows in `x`.
ℹ If a many-to-many relationship is expected, set `relationship = "many-to-many"` to silence this
  warning.
> # time series with mean, model, and obs
+ conmon.ts <- conmon %>%
+   filter(
+     station %in% stations,
+   ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S"),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          season = getSeason(date),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          ## do_rollmean_1d = zoo::rollmean(do, 96, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+       year %in% years,
+     )
+ Error in `mutate()`:
ℹ In argument: `diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude)`.
Caused by error in `computeSolarToLocalTimeDifference()`:
! object 'longitude' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> colnames(conmon)
  [1] "date_time"           "station"             "layer"
  [4] "depth"               "temp"                "sp_cond"
  [7] "salinity"            "do_sat"              "do"
 [10] "ph"                  "turb"                "fluor"
 [13] "tchl_pre_cal"        "chla"                "X"
 [16] "Y"                   "rowid"               "id"
 [19] "comid"               "fdate"               "resolution"
 [22] "gnis_id"             "gnis_name"           "lengthkm"
 [25] "reachcode"           "flowdir"             "wbareacomi"
 [28] "ftype"               "fcode"               "shape_length"
 [31] "streamleve"          "streamorde"          "streamcalc"
 [34] "fromnode"            "tonode"              "hydroseq"
 [37] "levelpathi"          "pathlength"          "terminalpa"
 [40] "arbolatesu"          "divergence"          "startflag"
 [43] "terminalfl"          "dnlevel"             "uplevelpat"
 [46] "uphydroseq"          "dnlevelpat"          "dnminorhyd"
 [49] "dndraincou"          "dnhydroseq"          "frommeas"
 [52] "tomeas"              "rtndiv"              "vpuin"
 [55] "vpuout"              "areasqkm"            "totdasqkm"
 [58] "divdasqkm"           "tidal"               "totma"
 [61] "wbareatype"          "pathtimema"          "hwnodesqkm"
 [64] "maxelevraw"          "minelevraw"          "maxelevsmo"
 [67] "minelevsmo"          "slope"               "elevfixed"
 [70] "hwtype"              "slopelenkm"          "qa_ma"
 [73] "va_ma"               "qc_ma"               "vc_ma"
 [76] "qe_ma"               "ve_ma"               "qa_01"
 [79] "va_01"               "qc_01"               "vc_01"
 [82] "qe_01"               "ve_01"               "qa_02"
 [85] "va_02"               "qc_02"               "vc_02"
 [88] "qe_02"               "ve_02"               "qa_03"
 [91] "va_03"               "qc_03"               "vc_03"
 [94] "qe_03"               "ve_03"               "qa_04"
 [97] "va_04"               "qc_04"               "vc_04"
[100] "qe_04"               "ve_04"               "qa_05"
[103] "va_05"               "qc_05"               "vc_05"
[106] "qe_05"               "ve_05"               "qa_06"
[109] "va_06"               "qc_06"               "vc_06"
[112] "qe_06"               "ve_06"               "qa_07"
[115] "va_07"               "qc_07"               "vc_07"
[118] "qe_07"               "ve_07"               "qa_08"
[121] "va_08"               "qc_08"               "vc_08"
[124] "qe_08"               "ve_08"               "qa_09"
[127] "va_09"               "qc_09"               "vc_09"
[130] "qe_09"               "ve_09"               "qa_10"
[133] "va_10"               "qc_10"               "vc_10"
[136] "qe_10"               "ve_10"               "qa_11"
[139] "va_11"               "qc_11"               "vc_11"
[142] "qe_11"               "ve_11"               "qa_12"
[145] "va_12"               "qc_12"               "vc_12"
[148] "qe_12"               "ve_12"               "lakefract"
[151] "surfarea"            "rareahload"          "rpuid"
[154] "vpuid"               "enabled"             "seg_len_m"
[157] "seg_len_km"          "total_len_km"        "src"
[160] "src_sub"             "data_type"           "watershed"
[163] "watershed_sub"       "site_name"           "lat"
[166] "long"                "start_year"          "end_year"
[169] "station_depth"       "top_sensor_depth_m"  "station_depth_m"
[172] "DO"                  "WQ_fixed"            "WQ_fixed_waterlevel"
[175] "url"                 "notes"
> conmon <- conmon %>%
+   rename(latitude = lat, longitude = long)
> # time series with mean, model, and obs
+ conmon.ts <- conmon %>%
+   filter(
+     station %in% stations,
+   ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S"),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          season = getSeason(date),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          ## do_rollmean_1d = zoo::rollmean(do, 96, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+       year %in% years,
+     )
+ > conmon.ts.sum <- conmon.ts %>%
+   rename(do_mgl = do) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+   )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 6767 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "MON000.18"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 6766 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = as.character(potomac_river_km),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
+ > gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
Warning message:
`stat(x)` was deprecated in ggplot2 3.4.0.
ℹ Please use `after_stat(x)` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> conmon.ts.sum <- conmon.ts %>%
+   rename(do_mgl = do) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+   ) %>%
+   arrange(potomac_river_km)
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 6767 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "MON000.18"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 6766 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = as.character(potomac_river_km),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> head(conmon.ts)
            date_time station layer depth temp sp_cond salinity do_sat    do
1 2007-03-21 12:15:01 XFB2184    BS     1 8.85     248     0.12  100.8 11.69
2 2007-03-21 12:30:01 XFB2184    BS     1 8.87     247     0.12   99.9 11.57
3 2007-03-21 12:45:01 XFB2184    BS     1 8.91     246     0.12   99.5 11.52
4 2007-03-21 13:00:01 XFB2184    BS     1 8.95     245     0.12   98.9 11.44
5 2007-03-21 13:15:01 XFB2184    BS     1 8.92     245     0.12   99.8 11.55
6 2007-03-21 13:30:01 XFB2184    BS     1 8.90     245     0.12   99.4 11.51
    ph turb fluor tchl_pre_cal chla       X       Y rowid
1 7.61 62.1   1.4          6.4   NA 4548831 5438869   229
2 7.27 67.6   1.5          6.6   NA 4548831 5438869   229
3 7.25 62.1   1.3          6.0   NA 4548831 5438869   229
4 7.24 64.8   1.5          6.7   NA 4548831 5438869   229
5 7.22 71.8   1.8          8.0   NA 4548831 5438869   229
6 7.23 86.5   2.0          9.1   NA 4548831 5438869   229
                          id    comid               fdate resolution gnis_id
1 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
2 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
3 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
4 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
5 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
6 nhdflowline_network.159272 22340661 2008-07-22 04:00:00     Medium  597915
      gnis_name lengthkm      reachcode        flowdir wbareacomi
1 Potomac River    4.475 02070010000033 With Digitized  120049842
2 Potomac River    4.475 02070010000033 With Digitized  120049842
3 Potomac River    4.475 02070010000033 With Digitized  120049842
4 Potomac River    4.475 02070010000033 With Digitized  120049842
5 Potomac River    4.475 02070010000033 With Digitized  120049842
6 Potomac River    4.475 02070010000033 With Digitized  120049842
           ftype fcode shape_length streamleve streamorde streamcalc  fromnode
1 ArtificialPath 55800   0.04145286          1          7          7 200087330
2 ArtificialPath 55800   0.04145286          1          7          7 200087330
3 ArtificialPath 55800   0.04145286          1          7          7 200087330
4 ArtificialPath 55800   0.04145286          1          7          7 200087330
5 ArtificialPath 55800   0.04145286          1          7          7 200087330
6 ArtificialPath 55800   0.04145286          1          7          7 200087330
     tonode  hydroseq levelpathi pathlength terminalpa arbolatesu divergence
1 200087336 200005291  200004858    161.292  200004858   22785.24          0
2 200087336 200005291  200004858    161.292  200004858   22785.24          0
3 200087336 200005291  200004858    161.292  200004858   22785.24          0
4 200087336 200005291  200004858    161.292  200004858   22785.24          0
5 200087336 200005291  200004858    161.292  200004858   22785.24          0
6 200087336 200005291  200004858    161.292  200004858   22785.24          0
  startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat dnminorhyd
1         0          0       1  200004858  200005294  200004858          0
2         0          0       1  200004858  200005294  200004858          0
3         0          0       1  200004858  200005294  200004858          0
4         0          0       1  200004858  200005294  200004858          0
5         0          0       1  200004858  200005294  200004858          0
6         0          0       1  200004858  200005294  200004858          0
  dndraincou dnhydroseq frommeas tomeas rtndiv vpuin vpuout areasqkm totdasqkm
1          1  200005288        0    100      0     0      0  14.2146   31047.8
2          1  200005288        0    100      0     0      0  14.2146   31047.8
3          1  200005288        0    100      0     0      0  14.2146   31047.8
4          1  200005288        0    100      0     0      0  14.2146   31047.8
5          1  200005288        0    100      0     0      0  14.2146   31047.8
6          1  200005288        0    100      0     0      0  14.2146   31047.8
  divdasqkm tidal totma  wbareatype pathtimema hwnodesqkm maxelevraw minelevraw
1   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
2   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
3   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
4   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
5   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
6   31047.8     1 -9999 StreamRiver      -9999         NA      -9998        -19
  maxelevsmo minelevsmo slope elevfixed hwtype slopelenkm    qa_ma va_ma
1          0          0 1e-05         0     NA      4.475 12723.79 -9999
2          0          0 1e-05         0     NA      4.475 12723.79 -9999
3          0          0 1e-05         0     NA      4.475 12723.79 -9999
4          0          0 1e-05         0     NA      4.475 12723.79 -9999
5          0          0 1e-05         0     NA      4.475 12723.79 -9999
6          0          0 1e-05         0     NA      4.475 12723.79 -9999
     qc_ma vc_ma    qe_ma ve_ma    qa_01 va_01    qc_01 vc_01    qe_01 ve_01
1 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
2 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
3 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
4 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
5 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
6 13766.36 -9999 13294.18 -9999 17620.96 -9999 15170.02 -9999 16134.65 -9999
     qa_02 va_02    qc_02 vc_02   qe_02 ve_02    qa_03 va_03    qc_03 vc_03
1 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
2 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
3 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
4 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
5 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
6 18927.94 -9999 11035.07 -9999 18780.4 -9999 24795.35 -9999 19297.46 -9999
    qe_03 ve_03    qa_04 va_04    qc_04 vc_04    qe_04 ve_04    qa_05 va_05
1 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
2 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
3 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
4 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
5 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
6 25307.2 -9999 21199.67 -9999 21652.12 -9999 22277.16 -9999 15834.03 -9999
  qc_05 vc_05    qe_05 ve_05    qa_06 va_06    qc_06 vc_06    qe_06 ve_06
1  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
2  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
3  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
4  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
5  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
6  9369 -9999 16740.46 -9999 9009.777 -9999 5198.837 -9999 10631.33 -9999
     qa_07 va_07    qc_07 vc_07   qe_07 ve_07    qa_08 va_08    qc_08 vc_08
1 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
2 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
3 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
4 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
5 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
6 5661.479 -9999 2499.139 -9999 5514.68 -9999 3790.404 -9999 2293.942 -9999
     qe_08 ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09    qa_10 va_10
1 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
2 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
3 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
4 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
5 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
6 4711.213 -9999 3597.297 -9999 1908.008 -9999 5950.703 -9999 4500.223 -9999
     qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11    qe_11 ve_11
1 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
2 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
3 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
4 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
5 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
6 2115.083 -9999 7470.272 -9999 11072.17 -9999 5772.392 -9999 9166.637 -9999
     qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract surfarea rareahload
1 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
2 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
3 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
4 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
5 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
6 16755.33 -9999 18644.64 -9999 13736.21 -9999        NA       NA         NA
  rpuid vpuid enabled seg_len_m  seg_len_km total_len_km   src src_sub
1   02a    02       1  3.999863 0.003999863     33.57968 MDDNR    EOTB
2   02a    02       1  3.999863 0.003999863     33.57968 MDDNR    EOTB
3   02a    02       1  3.999863 0.003999863     33.57968 MDDNR    EOTB
4   02a    02       1  3.999863 0.003999863     33.57968 MDDNR    EOTB
5   02a    02       1  3.999863 0.003999863     33.57968 MDDNR    EOTB
6   02a    02       1  3.999863 0.003999863     33.57968 MDDNR    EOTB
  data_type     watershed watershed_sub         site_name latitude longitude
1        WQ Potomac River      mainstem Piscataway\n(PIS)  38.7016  -77.0259
2        WQ Potomac River      mainstem Piscataway\n(PIS)  38.7016  -77.0259
3        WQ Potomac River      mainstem Piscataway\n(PIS)  38.7016  -77.0259
4        WQ Potomac River      mainstem Piscataway\n(PIS)  38.7016  -77.0259
5        WQ Potomac River      mainstem Piscataway\n(PIS)  38.7016  -77.0259
6        WQ Potomac River      mainstem Piscataway\n(PIS)  38.7016  -77.0259
  start_year end_year station_depth top_sensor_depth_m station_depth_m DO
1       2004     2008          <NA>                0.3             1.2  1
2       2004     2008          <NA>                0.3             1.2  1
3       2004     2008          <NA>                0.3             1.2  1
4       2004     2008          <NA>                0.3             1.2  1
5       2004     2008          <NA>                0.3             1.2  1
6       2004     2008          <NA>                0.3             1.2  1
  WQ_fixed WQ_fixed_waterlevel     url                                 notes
1        0                   0 XFB2184 Anchored 0.3 meters above the bottom.
2        0                   0 XFB2184 Anchored 0.3 meters above the bottom.
3        0                   0 XFB2184 Anchored 0.3 meters above the bottom.
4        0                   0 XFB2184 Anchored 0.3 meters above the bottom.
5        0                   0 XFB2184 Anchored 0.3 meters above the bottom.
6        0                   0 XFB2184 Anchored 0.3 meters above the bottom.
             DateTime       date dec_date year quarter season month week
1 2007-03-21 12:15:01 2007-03-21 2007.216 2007       1 Spring     3   12
2 2007-03-21 12:30:01 2007-03-21 2007.216 2007       1 Spring     3   12
3 2007-03-21 12:45:01 2007-03-21 2007.216 2007       1 Spring     3   12
4 2007-03-21 13:00:01 2007-03-21 2007.216 2007       1 Spring     3   12
5 2007-03-21 13:15:01 2007-03-21 2007.216 2007       1 Spring     3   12
6 2007-03-21 13:30:01 2007-03-21 2007.216 2007       1 Spring     3   12
  do_modeled depth_bucket    diel daynight
1   11.59722            1 11.9844     TRUE
2   11.58158            1 12.2344     TRUE
3   11.57789            1 12.4844     TRUE
4   11.56724            1 12.7344     TRUE
5   11.57315            1 12.9844     TRUE
6   11.57948            1 13.2344     TRUE
> head(conmon.ts.sum$potomac_river_km)
[1] 33.57968 33.57968 33.57968 33.57968 33.57968 33.57968
> str(conmon.ts.sum$potomac_river_km)
 num [1:13530] 33.6 33.6 33.6 33.6 33.6 ...
> conmon.ts.sum <- conmon.ts %>%
+   rename(do_mgl = do) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+   ) %>%
+   order(potomac_river_km)
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Error in order(., potomac_river_km) : object 'potomac_river_km' not found
In addition: Warning messages:
1: There were 6767 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "MON000.18"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 6766 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum[order(conmon.ts.sum$potomac_river_km),],
+                 aes(
+                   x = do_hour_min,
+                   y = as.character(potomac_river_km),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum[order(conmon.ts.sum$potomac_river_km),],
+                 aes(
+                   x = do_hour_min,
+                   y = potomac_river_km,
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 0.674
Picking joint bandwidth of 0.743
Picking joint bandwidth of 0.475
Error in `ggridges::geom_density_ridges_gradient()`:
! Problem while setting up geom.
ℹ Error occurred in the 1st layer.
Caused by error in `compute_geom_1()`:
! `geom_density_ridges_gradient()` requires the following missing aesthetics: y.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
Warning messages:
1: The following aesthetics were dropped during statistical transformation: y.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: y.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: y.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> conmon.ts.sum <- conmon.ts.sum[order(conmon.ts.sum$potomac_river_km),]
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = as.factor(potomac_river_km),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = reverse(as.factor(potomac_river_km)),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Error in `ggridges::geom_density_ridges_gradient()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `reverse()`:
! could not find function "reverse"
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = fct_rev(as.factor(potomac_river_km)),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Error in `ggridges::geom_density_ridges_gradient()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `fct_rev()`:
! could not find function "fct_rev"
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = forcats::fct_rev(as.factor(potomac_river_km)),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = signif(forcats::fct_rev(as.factor(potomac_river_km)), 3),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Error in `ggridges::geom_density_ridges_gradient()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `Math.factor()`:
! ‘signif’ not meaningful for factors
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = signif(as.numeric(forcats::fct_rev(as.factor(potomac_river_km)), 3)),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 0.674
Picking joint bandwidth of 0.743
Picking joint bandwidth of 0.475
Error in `ggridges::geom_density_ridges_gradient()`:
! Problem while setting up geom.
ℹ Error occurred in the 1st layer.
Caused by error in `compute_geom_1()`:
! `geom_density_ridges_gradient()` requires the following missing aesthetics: y.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
Warning messages:
1: The following aesthetics were dropped during statistical transformation: y.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: y.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: y.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = forcats::fct_rev(as.factor(signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = forcats::fct_rev(as.factor(
+                                  paste(station, signif(potomac_river_km, 3))
+                                )),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = paste(station, forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                ))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = paste(expression(italics(station)), forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                ))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = paste(expression(italic(station)), forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                ))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = paste(expression(bold(station)), forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                ))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = paste0(station, ': ', forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                ))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = paste0(station, '--', forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                ))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y = paste0(station, '  ', forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                ))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x)
+                 ), col = station) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x),
+                   col = station
+                 ), col = station) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x),
+                   label = station
+                 ), col = station) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
Warning messages:
1: The following aesthetics were dropped during statistical transformation: label.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: label.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: label.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(atop(bold("Stations in Longitudinal Order")), atop(italic('Upstream to Downstream (river km from the Fall Line)')))) +
+   xlab(expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order")), atop(italic('Upstream to Downstream (river km from the Fall Line)'))),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order")), atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order")))) +
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
Error: unexpected ')' in:
"                       ## atop('Upstream to Downstream (river km from the Fall Line)')),
    x = expression(bold("Hour of Daily Minimum DO (24-hour clock)")))"
> . + > Error in `+.gg`:
! Can't add `facet_wrap(~season)` to a theme object.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.32
Picking joint bandwidth of 1.23
Picking joint bandwidth of 1.01
> # Here is a list of MDDNR and VECOS stations along the Potomac River
+ stations <- c(
+ # MDDNR
+ "XDB4544",
+ "XCD5599",
+ "XFB0231",
+ "XDA8236",
+ "XEA3687",
+ "XBE8396",
+ "XFB2184",
+ "XDC3807",
+ "XDB8884",
+ "XBF6843",
+ "XBF7904",
+ "XCC8346",
+ "XCC9680",
+ "XCF1440",
+ # VECOS
+ "POH002.10",
+ "OCC002.47",
+ "POM000.97",
+ "MON000.18",
+ "NOM002.36",
+ "WES000.18"
+ )
> # set years of interest
+ years <- c(2007, 2008)
> getSeason <- function(DATES) {
+     WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
+     SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
+     SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
+     FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
+ # Convert dates from any year to 2012 dates
+     d <- as.Date(strftime(DATES, format="2012-%m-%d"))
+ ifelse (d >= WS | d < SE, "Winter",
+       ifelse (d >= SE & d < SS, "Spring",
+         ifelse (d >= SS & d < FE, "Summer", "Fall")))
+ }
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 0.86
Picking joint bandwidth of 0.719
Picking joint bandwidth of 0.614
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(as.factor(
+                                  signif(potomac_river_km, 3)
+                                )),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 0.86
Picking joint bandwidth of 0.719
Picking joint bandwidth of 0.614
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))
+                                )),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
Error: unexpected ')' in:
"                  fill = stat(x)
                ))"
> . + Error in `+.gg`:
! Cannot add <ggproto> objects together.
ℹ Did you forget to add this object to a <ggplot> object?
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))
+                                )),
+                   fill = stat(x)
+                 ) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3)),
+                   fill = stat(x)
+                                )),
+                 ) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 0.54
Picking joint bandwidth of 0.495
Picking joint bandwidth of 0.462
Error in `ggridges::geom_density_ridges_gradient()`:
! Problem while mapping stat to aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `forcats::fct_rev()`:
! unused argument (fill = x)
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)))
+                 ) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
Error: unexpected ')' in "                )"
> . + > Error in `+.gg`:
! Cannot add <ggproto> objects together.
ℹ Did you forget to add this object to a <ggplot> object?
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   scale_x_continuous(expand = c(0, 24)) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   scale_x_continuous(expand = c(0, 24)) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(expand = c(0, 24)) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   scale_x_continuous(limits = c(0, 24)) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   scale_x_continuous(limits = c(0, 23)) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
> gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season)
> gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
> # with equilibrium modelled DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   ## y = as.character(latitude),
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing, Equilibrium Model', subtitle = "Potomac River Conmon, 2007-2008\nEquilibrium value from Temp, Salinity, Pressure (Benson and Krause 1984)") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum Equilibrium Model DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   theme(legend.position = "bottom")
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with equilibrium modelled DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   ## y = as.character(latitude),
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing, Equilibrium Model', subtitle = "Potomac River Conmon, 2007-2008\nEquilibrium Model from T, S, P (Benson and Krause 1984)") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ## ylab(expression(bold("Latitude of Station"))) +
+   xlab(expression(bold("Hour of Daily Minimum Equilibrium Model DO \n(24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   theme(legend.position = "bottom")
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with equilibrium modelled DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   ## y = as.character(latitude),
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing, Equilibrium Model', subtitle = "Potomac River Conmon, 2007-2008\nEquilibrium Model from T, S, P (Benson and Krause 1984)") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold(""))) +
+   xlab(expression(bold("Hour of Daily Minimum Equilibrium Model DO \n(24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   theme(legend.position = "bottom")
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with equilibrium modelled DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   ## y = as.character(latitude),
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing, Equilibrium Model', subtitle = "Potomac River Conmon, 2007-2008\nEquilibrium Model from Temp, Salinity, Pressure (Benson & Krause 1984)") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold(""))) +
+   xlab(expression(bold("\nHour of Daily Minimum Equilibrium Model DO \n(24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   theme(legend.position = "bottom")
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with equilibrium modelled DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   ## y = as.character(latitude),
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing, Equilibrium Model', subtitle = "Potomac River Conmon, 2007-2008\nEquilibrium Model from Temp, Salinity, Pressure (Benson & Krause 1984)") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE, show.legend = FALSE) +
+   ylab(expression(bold(""))) +
+   xlab(expression(bold("\nHour of Daily Minimum Equilibrium Model DO \n(24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   theme(legend.position = "bottom")
Error in ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE,  :
  unused argument (show.legend = FALSE)
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with equilibrium modelled DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   ## y = as.character(latitude),
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing, Equilibrium Model', subtitle = "Potomac River Conmon, 2007-2008\nEquilibrium Model from Temp, Salinity, Pressure (Benson & Krause 1984)") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold(""))) +
+   xlab(expression(bold("\nHour of Daily Minimum Equilibrium Model DO \n(24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with equilibrium modelled DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_eq_min,
+                   ## y = as.character(latitude),
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                 )) +
+   ggridges::geom_density_ridges_gradient() +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing, Equilibrium Model', subtitle = "Potomac River Conmon, 2007-2008\nEquilibrium Model from Temp, Salinity, Pressure (Benson & Krause 1984)") +
+   ## scale_x_continuous(expand = c(0, 0)) +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   ylab(expression(bold(""))) +
+   xlab(expression(bold("Hour of Daily Minimum Equilibrium Model DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 0.882
Picking joint bandwidth of 0.77
Picking joint bandwidth of 0.696
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
> gg.conmon.noaa <- ggplot(cmn.month,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = temp,
+                   y = do_mgl_from_eq,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p")),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
Error in ggplot(cmn.month, aes(x = temp, y = do_mgl_from_eq, col = temp/air_temp)) :
  object 'cmn.month' not found
> Error: object 'gg.conmon.noaa' not found
> # time series with mean, model, and obs
+ conmon.ts <- conmon %>%
+   filter(
+       year %in% years,
+     station %in% stations,
+   ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S"),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          season = getSeason(date),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          ## do_rollmean_1d = zoo::rollmean(do, 96, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          do_mgl_from_eq = do - do_modelled,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   )
Error in `filter()`:
ℹ In argument: `year %in% years`.
Caused by error in `year %in% years`:
! object 'year' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # set years of interest
+ years <- c(2007, 2008)
> getSeason <- function(DATES) {
+     WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
+     SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
+     SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
+     FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
+ # Convert dates from any year to 2012 dates
+     d <- as.Date(strftime(DATES, format="2012-%m-%d"))
+ ifelse (d >= WS | d < SE, "Winter",
+       ifelse (d >= SE & d < SS, "Spring",
+         ifelse (d >= SS & d < FE, "Summer", "Fall")))
+ }
> # time series with mean, model, and obs
+ conmon.ts <- conmon %>%
+   filter(
+       year %in% years,
+     station %in% stations,
+   ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S"),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          season = getSeason(date),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          ## do_rollmean_1d = zoo::rollmean(do, 96, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          do_mgl_from_eq = do - do_modelled,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   )
Error in `filter()`:
ℹ In argument: `year %in% years`.
Caused by error in `year %in% years`:
! object 'year' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # time series with mean, model, and obs
+ conmon.ts <- conmon %>%
+   filter(
+     station %in% stations,
+   ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S"),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          season = getSeason(date),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          ## do_rollmean_1d = zoo::rollmean(do, 96, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          do_mgl_from_eq = do - do_modelled,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+       year %in% years,
+   )
+ Error in `mutate()`:
ℹ In argument: `do_mgl_from_eq = do - do_modelled`.
Caused by error:
! object 'do_modelled' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> # time series with mean, model, and obs
+ conmon.ts <- conmon %>%
+   filter(
+     station %in% stations,
+   ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S"),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          season = getSeason(date),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          ## do_rollmean_1d = zoo::rollmean(do, 96, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          do_mgl_from_eq = do - do_modeled,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+       year %in% years,
+   )
+ > head(conmon.ts.sum)
# A tibble: 6 × 21
# Groups:   station, year, season, month, date [3]
  station  year season month date       do_mgl_mean do_mgl_range do_mgl_min
  <chr>   <dbl> <chr>  <dbl> <date>           <dbl>        <dbl>      <dbl>
1 XFB2184  2007 Fall       9 2007-09-15        8.83         4.52       4.52
2 XFB2184  2007 Fall       9 2007-09-15        8.83        16.9        4.52
3 XFB2184  2007 Fall       9 2007-09-16       10.6          6.17       6.17
4 XFB2184  2007 Fall       9 2007-09-16       10.6         17.4        6.17
5 XFB2184  2007 Fall       9 2007-09-17       10.3          6.3        6.3
6 XFB2184  2007 Fall       9 2007-09-17       10.3         16.6        6.3
# ℹ 13 more variables: do_mgl_max <dbl>, do_mgl_median <dbl>,
#   do_time_min <dttm>, do_time_eq_min <dttm>, do_hour_min <dbl>,
#   do_hour_eq_min <dbl>, do_month_min <dbl>, do_diel_min <dbl>,
#   do_diel_max <dbl>, depth_mean_rounded <dbl>, potomac_river_km <dbl>,
#   sp_cond_mean <dbl>, sp_cond_at_do_min <dbl>
> conmon.poh <- conmon %>%
+   filter(
+     station == "POH002.10",
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> source('./mike_atm.R')
+ library(unitted)
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> > source('../R/mike_atm.R')
+ library(unitted)
> conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
+ > conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
> pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
> conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> ## lmfit <- lm(conmon.y~sin(2*pi*conmon.x/366) + cos(2*pi*conmon.x/366))
+ lmfit <- lm(conmon.y~sin(conmon.x))
+ b0 <- coef(lmfit)[1]
+ alpha <- coef(lmfit)[2]
+ beta <- coef(lmfit)[3]
> ssp <- spectrum(conmon.y)
+ per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
+ reslm <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x))
+ summary(reslm)
rg <- diff(range(conmon.y))
+ plot(conmon.y ~ conmon.x, ylim=c(min(conmon.y)-0.1*rg, max(conmon.y)+0.1*rg))
+ ## lines(fitted(reslm)~conmon.x,col=4,lty=2)   # dashed blue line is sin fit
> Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.1578 -1.2515  0.0209  1.2855  8.5736

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.8175     0.1480   5.525 3.35e-08 ***
sin(2 * pi/per * conmon.x)   1.8963     0.1164  16.286  < 2e-16 ***
cos(2 * pi/per * conmon.x)  -0.8281     0.1198  -6.915 4.84e-12 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.947 on 18308 degrees of freedom
Multiple R-squared:  0.1533,	Adjusted R-squared:  0.1532
F-statistic:  1657 on 2 and 18308 DF,  p-value: < 2.2e-16

> > > # including 2nd harmonic reallconmon.y improves the fit
+ reslm2 <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x)+sin(4*pi/per*conmon.x)+cos(4*pi/per*conmon.x))
+ summary(reslm2)
+ lines(fitted(reslm2)~conmon.x,col=3)    # solid green line is periodic with second harmonic
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x) + sin(4 * pi/per * conmon.x) + cos(4 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.0553 -1.0516  0.1115  1.1293  7.6462

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.07039    2.51293   0.028    0.978
sin(2 * pi/per * conmon.x) -11.46616    2.44604  -4.688 2.78e-06 ***
cos(2 * pi/per * conmon.x)  13.57532    2.52172   5.383 7.40e-08 ***
sin(4 * pi/per * conmon.x)   0.07058    0.99937   0.071    0.944
cos(4 * pi/per * conmon.x) -11.88121    0.20318 -58.475  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.784 on 18306 degrees of freedom
Multiple R-squared:  0.289,	Adjusted R-squared:  0.2889
F-statistic:  1860 on 4 and 18306 DF,  p-value: < 2.2e-16

> > cmn.month$act <- predict(reslm2, newdata=cmn.month)
> pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> gg.conmon.noaa <- ggplot(cmn.month,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = temp,
+                   y = do_mgl_from_eq,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p")),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
Error in stat_poly_line() : could not find function "stat_poly_line"
> Error: object 'gg.conmon.noaa' not found
> library(ggpmisc)
Loading required package: ggpp
Registered S3 methods overwritten by 'ggpp':
  method                  from
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2

Attaching package: ‘ggpp’

The following object is masked from ‘package:ggplot2’:

    annotate

Registered S3 method overwritten by 'ggpmisc':
  method                  from
  as.character.polynomial polynom
> gg.conmon.noaa <- ggplot(cmn.month,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = temp,
+                   y = do_mgl_from_eq,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p")),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
+ Warning message:
Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
ℹ Please use `linewidth` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> There were 32 warnings (use warnings() to see them)
> > gg.conmon.noaa <- ggplot(cmn.month,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = temp,
+                   y = do_mgl_from_eq,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p")),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
> Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p")),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
> Warning messages:
1: Removed 19 rows containing non-finite outside the scale range (`stat_poly_line()`).
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: Removed 19 rows containing non-finite outside the scale range (`stat_poly_eq()`).
5: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
6: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
7: Removed 19 rows containing missing values or values outside the scale range (`geom_point()`).
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p")),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
> Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p")),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
> Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> colnames(cmn.month)
  [1] "date_time"           "station"             "layer"
  [4] "depth"               "temp"                "sp_cond"
  [7] "salinity"            "do_sat"              "do"
 [10] "ph"                  "turb"                "fluor"
 [13] "tchl_pre_cal"        "chla"                "X"
 [16] "Y"                   "rowid"               "id"
 [19] "comid"               "fdate"               "resolution"
 [22] "gnis_id"             "gnis_name"           "lengthkm"
 [25] "reachcode"           "flowdir"             "wbareacomi"
 [28] "ftype"               "fcode"               "shape_length"
 [31] "streamleve"          "streamorde"          "streamcalc"
 [34] "fromnode"            "tonode"              "hydroseq"
 [37] "levelpathi"          "pathlength"          "terminalpa"
 [40] "arbolatesu"          "divergence"          "startflag"
 [43] "terminalfl"          "dnlevel"             "uplevelpat"
 [46] "uphydroseq"          "dnlevelpat"          "dnminorhyd"
 [49] "dndraincou"          "dnhydroseq"          "frommeas"
 [52] "tomeas"              "rtndiv"              "vpuin"
 [55] "vpuout"              "areasqkm"            "totdasqkm"
 [58] "divdasqkm"           "tidal"               "totma"
 [61] "wbareatype"          "pathtimema"          "hwnodesqkm"
 [64] "maxelevraw"          "minelevraw"          "maxelevsmo"
 [67] "minelevsmo"          "slope"               "elevfixed"
 [70] "hwtype"              "slopelenkm"          "qa_ma"
 [73] "va_ma"               "qc_ma"               "vc_ma"
 [76] "qe_ma"               "ve_ma"               "qa_01"
 [79] "va_01"               "qc_01"               "vc_01"
 [82] "qe_01"               "ve_01"               "qa_02"
 [85] "va_02"               "qc_02"               "vc_02"
 [88] "qe_02"               "ve_02"               "qa_03"
 [91] "va_03"               "qc_03"               "vc_03"
 [94] "qe_03"               "ve_03"               "qa_04"
 [97] "va_04"               "qc_04"               "vc_04"
[100] "qe_04"               "ve_04"               "qa_05"
[103] "va_05"               "qc_05"               "vc_05"
[106] "qe_05"               "ve_05"               "qa_06"
[109] "va_06"               "qc_06"               "vc_06"
[112] "qe_06"               "ve_06"               "qa_07"
[115] "va_07"               "qc_07"               "vc_07"
[118] "qe_07"               "ve_07"               "qa_08"
[121] "va_08"               "qc_08"               "vc_08"
[124] "qe_08"               "ve_08"               "qa_09"
[127] "va_09"               "qc_09"               "vc_09"
[130] "qe_09"               "ve_09"               "qa_10"
[133] "va_10"               "qc_10"               "vc_10"
[136] "qe_10"               "ve_10"               "qa_11"
[139] "va_11"               "qc_11"               "vc_11"
[142] "qe_11"               "ve_11"               "qa_12"
[145] "va_12"               "qc_12"               "vc_12"
[148] "qe_12"               "ve_12"               "lakefract"
[151] "surfarea"            "rareahload"          "rpuid"
[154] "vpuid"               "enabled"             "seg_len_m"
[157] "seg_len_km"          "total_len_km"        "src"
[160] "src_sub"             "data_type"           "watershed"
[163] "watershed_sub"       "site_name"           "latitude"
[166] "longitude"           "start_year"          "end_year"
[169] "station_depth"       "top_sensor_depth_m"  "station_depth_m"
[172] "DO"                  "WQ_fixed"            "WQ_fixed_waterlevel"
[175] "url"                 "notes"               "DateTime"
[178] "DateTime_UTC"        "date"                "dec_date"
[181] "year"                "quarter"             "month"
[184] "week"                "do_rollmean30"       "do_modeled"
[187] "depth_bucket"        "diel"                "daynight"
[190] "air_kPa"             "air_temp"            "dewtemp"
[193] "winddir"             "windspeed"           "skycover"
[196] "precip1h"            "precip6h"            "do_mgl_from_eq"
[199] "day_night"           "act"
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p")),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
> Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(conmon.ts,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = temp,
+                   y = do_mgl_from_eq,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p")), vstep = 0.05,
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
> Error in `combine_vars()`:
! At least one layer must contain all faceting variables: `month` and `day_night`
✖ Plot is missing `day_night`
✖ Layer 1 is missing `day_night`
✖ Layer 2 is missing `day_night`
✖ Layer 3 is missing `day_night`
✖ Layer 4 is missing `c("month", "day_night")`
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.noaa <- ggplot(conmon.ts,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = temp,
+                   y = do_mgl_from_eq,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
> Error in `combine_vars()`:
! At least one layer must contain all faceting variables: `month` and `day_night`
✖ Plot is missing `day_night`
✖ Layer 1 is missing `day_night`
✖ Layer 2 is missing `day_night`
✖ Layer 3 is missing `day_night`
✖ Layer 4 is missing `c("month", "day_night")`
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
+ > Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-3,7)
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
+ Error in `+.gg`:
! Cannot add <ggproto> objects together.
ℹ Did you forget to add this object to a <ggplot> object?
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-3,7) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
+ > Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,6.75) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
> Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
> Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75) +
+   guides(col=guide_legend(title="New Legend Title"))
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75) +
+   scale_color_discrete(name "skypig")
+   ## guides(col=guide_legend(title="New Legend Title"))
Error: unexpected string constant in:
"  geom_hline(yintercept = 0, col = 'black', size = 0.75) +
  scale_color_discrete(name "skypig""
> > gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75) +
+   scale_color_discrete(name = "skypig")
+   ## guides(col=guide_legend(title="New Legend Title"))
+ Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
> > gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75) +
+   scale_color_discrete(name = "skypig")
+   ## guides(col=guide_legend(title="New Legend Title"))
+ Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
> > gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75) +
+   labs(color = "skypig")
+   ## guides(col=guide_legend(title="New Legend Title"))
+ > gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75) +
+   labs(fill = "skypig")
+   ## guides(col=guide_legend(title="New Legend Title"))
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'pigs') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ > gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(paste0("Air temperature vs DO mg/L away from DO equilibrium value at ", station),
+           subtitle = paste0('Colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(paste0("Air Temperature vs DO mg/L away from DO equilibrium value at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L) away from equilibrium", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.)", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = air_temp,
+                   y = do_mgl_from_eq,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> library(sf)
+ library(mapview) # html mapping
+ library(leaflet) # html mapping
+ library(leaflet.extras)
+ library(ggplot2) # plotting
+ library(dplyr) # wrangling data
+ library(here) # setting directories safely
+ library(viridis) # color scheme
+ library(USAboundaries) # county/state boundaries
+ library(nhdplusTools) # USGS/NHD rivers data
+ # further geospatial tools
+ library(nngeo)
+ library(measurements)
+ library(lwgeom)
+ library(elevatr)
+ library(rgeos)
> > poi_usgs_id <- "USGS-01589300"
+ poi_usgs_id_trim <- "01589300"
> (0.09120108)*2850 **0.627
[1] 13.37173
>
Process R killed at Sun Apr 14 08:59:20 2024


R version 4.2.2 Patched (2022-11-10 r83330) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> setwd('/home/weston/science/UMD/ORISE/bayTools/')
> library(bayTools)
> library(dplyr)
+ library(sf)
+ library(ggplot2)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(mapview) # html mapping
+ library(leaflet) # html mapping
+ library(leaflet.extras)
+ library(ggplot2) # plotting
+ library(dplyr) # wrangling data
+ library(here) # setting directories safely
+ library(viridis) # color scheme
+ library(USAboundaries) # county/state boundaries
+ library(nhdplusTools) # USGS/NHD rivers data
+ # further geospatial tools
+ library(nngeo)
+ library(measurements)
+ library(lwgeom)
+ library(elevatr)
+ library(rgeos)
Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1; sf_use_s2() is TRUE
> > load('data/conmon_eotb_2001_2022_2023_08_11_1707.rda')
+ load('data/conmon_vecos_2003_2022_2023_08_11_1739_rev2023_10_28.rda')
# find common columns between MDDNR and VECOS
+ common_cols <- intersect(colnames(conmon_eotb_2001_2022), colnames(conmon_vecos_2003_2022))
> here() starts at /home/weston/science/UMD/ORISE/bayTools
> Loading required package: viridisLite
> The USAboundariesData package needs to be installed.
 Please try installing the package using the following command:
     install.packages("USAboundariesData", repos = "https://ropensci.r-universe.dev", type = "source")
> > Linking to liblwgeom 3.0.0beta1 r16016, GEOS 3.8.0, PROJ 6.3.1

Attaching package: ‘lwgeom’

The following object is masked from ‘package:sf’:

    st_perimeter

> > Loading required package: sp
rgeos version: 0.6-1, (SVN revision 692)
 GEOS runtime version: 3.8.0-CAPI-1.13.1
 Please note that rgeos will be retired during 2023,
plan transition to sf functions using GEOS at your earliest convenience.
 Linking to sp version: 1.5-1
 Polygon checking: TRUE


Attaching package: ‘rgeos’

The following object is masked from ‘package:dplyr’:

    symdiff

> > # find common columns between MDDNR and VECOS
+ common_cols <- intersect(colnames(conmon_eotb_2001_2022), colnames(conmon_vecos_2003_2022))
> > conmon_eotb <- subset(conmon_eotb_2001_2022, select = common_cols)
+ conmon_vecos <- subset(conmon_vecos_2003_2022, select = common_cols)
> > cb_stations_manual.r <- googlesheets4::read_sheet(ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0"
+                                                 )
+ The googlesheets4 package is requesting access to your Google account.
Enter '1' to start a new auth process or select a pre-authorized account.
1: Send me to the browser for a new auth process.
2: wslaught@umd.edu
Selection: 2
Auto-refreshing stale OAuth token.
✔ Reading from stations_manual.
✔ Range Sheet1.
> cb_stations_manual <- cb_stations_manual.r %>%
+   filter(!is.na(site_code)) %>%
+   ## filter(start_year < 2009, end_year > 2007) %>%
+   rename(station = site_code)
> # enter POI of most downstream station, or, downstream reference
+ poi_ds <- c(-77.264213, 38.365934)
+ ds_station_poi <- st_sfc(st_point(poi_ds), crs = 4326)
> (ds_station_poi_comid <- discover_nhdplus_id(ds_station_poi))
# first make a list defining the sourcetype and ID
+ ds_station_poi_list <- list(featureSource = "comid",
+                   featureID = ds_station_poi_comid)
[1] 4534649
> > + > # get upstream flowlines
+ ds_station_poi_us_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "UM",
+                                    distance = 80,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "UM",  :
  data source specified as flowline or '' is deprecated
> ds_station_poi_ds_flowlines <- navigate_nldi(nldi_feature = ds_station_poi_list,
+                                    mode = "DM",
+                                    distance = 400,
+                                    data_source = "")
+ Warning message:
In navigate_nldi(nldi_feature = ds_station_poi_list, mode = "DM",  :
  data source specified as flowline or '' is deprecated
> # make a list of all the comids we've identified:
+ all_comids <- c(ds_station_poi_us_flowlines$UM_flowlines$nhdplus_comid, ds_station_poi_ds_flowlines$DM_flowlines$nhdplus_comid)
> # download all data and create a geopackage with the comid list
+ ds_station_poi_gpkg <- subset_nhdplus(comids= as.integer(all_comids),
+                             simplified = TRUE,
+                             overwrite = TRUE,
+                             output_file = paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"),
+                             nhdplus_data = "download",
+                             return_data = FALSE)
All intersections performed in latitude/longitude.
Reading NHDFlowline_Network
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Writing NHDFlowline_Network
> # check layers in database:
+ st_layers(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"))
> Driver: GPKG
Available layers:
           layer_name geometry_type features fields crs_name
1 NHDFlowline_Network   Line String      141    138    NAD83
> # pull the flowlines back in
+ ds_station_poi_streams <- read_sf(paste0(here::here(), "/data/ds_station_poi_nhdplus.gpkg"), "NHDFlowline_Network")
> # CB stations as spatial object
+ cb_station_sf <- st_as_sf(cb_stations_manual, coords = c("long", "lat"), crs = 4326)
> # make a map
+ prettymapr::prettymap({
+   rosm::osm.plot(project = FALSE,
+                  bbox = matrix(st_bbox(ds_station_poi_streams), byrow = FALSE, ncol = 2,
+                                dimnames = list(c("x", "y"), c("min", "max"))),
+                  type = "cartolight", quiet = TRUE, progress = "none")
+   plot(ds_station_poi_streams$geom, col = "steelblue", lwd = (ds_station_poi_streams$streamorde / 4), add=TRUE)
+   plot(ds_station_poi, add=TRUE, pch=21, bg="orange", cex=1.5)
+   prettymapr::addnortharrow()
+ })
+ Zoom: 10
Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.
Autodetect projection: assuming lat/lon (epsg 4326)
> m1 <- mapview(ds_station_poi, col.regions="black", cex=6, layer.name="Start Point") +
+   mapview(ds_station_poi_streams, zcol="slope", legend=TRUE, layer.name="Reach <br> Slope")
+   mapview(cb_station_sf, col.regions="orange", layer.name="conmon stations")
+ > m1
> > # loop through each and use lat/long to get NHD flowline comid, then attach comid and nhd data to df
+ cb_station_sf$comid <- c()
+ rm(cb_station_nhd)
Warning message:
In rm(cb_station_nhd) : object 'cb_station_nhd' not found
> # loop through each and use lat/long to get NHD flowline comid, then attach comid and nhd data to df
+ cb_station_sf$comid <- c()
+ rm(cb_station_nhd)
Warning message:
In rm(cb_station_nhd) : object 'cb_station_nhd' not found
> for(i in 1:nrow(cb_station_sf)) {
+ cb_station_name <- cb_station_sf$station[i]
+     print(paste('----', cb_station_name))
+     ## poi <- c(cb_station_sf$long[i], cb_station_sf$lat[i])
+ # turn into spatial object
+     ## cb_station_i <- st_sfc(st_point(poi), crs = 4326)
+     cb_station_i <- cb_station_sf$geometry[i]
+ # now figure out the nearest stream segment ID to our point
+     hgsite_comid <- discover_nhdplus_id(cb_station_i)
+     print(hgsite_comid)
+ if(!is.null(hgsite_comid)) {
+       cb_station_sf$comid[i] <- hgsite_comid
+       cb_station_i_nhd <- nhdplusTools::get_nhdplus(comid = hgsite_comid)
+ if(!exists('cb_station_nhd')) {
+         cb_station_nhd <- cb_station_i_nhd
+       } else {
+         cb_station_nhd <- rbind(cb_station_nhd, cb_station_i_nhd)
+       }
+   } else {
+       cb_station_sf$comid[i] <- NA
+   }
+ }
[1] "---- XBE5486"
[1] 4532885
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XCE0055"
[1] 4539849
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XDB4544"
[1] 4534575
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XCD5599"
[1] 4539795
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XFB0231"
[1] 22340825
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XDA8236"
[1] 4534781
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XEA3687"
[1] 4529659
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XBE8396"
[1] 4532471
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XFB2184"
[1] 22343523
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XDC3807"
[1] 4530723
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XDB8884"
[1] 4534465
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XBF6843"
[1] 4532399
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XBF7904"
[1] 4532401
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XCC8346"
[1] 4539813
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XCC9680"
[1] 4532001
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- XCF1440"
[1] 4532203
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- WASD2"
[1] 22341031
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- UP"
[1] 22340603
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- PL"
[1] 4532641
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- PPTM2"
[1] 4532451
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- NCDV2"
[1] 4539757
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- USGS-01651827"
[1] 22340557
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- USGS-01651812"
[1] 22338109
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- USGS-01651007"
[1] 22338089
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- POH002.10"
[1] 22343533
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- OCC002.47"
[1] 22343545
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- POM000.97"
[1] 4534677
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- MON000.18"
[1] 4532299
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- NOM002.36"
[1] 4532523
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
[1] "---- WES000.18"
[1] 4539919
Spherical geometry (s2) switched off
Spherical geometry (s2) switched on
Warning message:
Unknown or uninitialised column: `comid`.
> # reproject all
+ cb_station_proj <- st_transform(cb_station_sf, crs = 26910)
+ cb_flowlines <- st_transform(ds_station_poi_streams, crs = 26910)
> > # snap to streamline
+ st_snap_points <- function(x, y, namevar, max_dist = 1000) {
+ # this evaluates the length of the data
+   if (inherits(x, "sf")) n = nrow(x)
+   if (inherits(x, "sfc")) n = length(x)
+ # this part:
+   # 1. loops through every piece of data (every point)
+   # 2. snaps a point to the nearest line geometries
+   # 3. calculates the distance from point to line geometries
+   # 4. retains only the shortest distances and generates a point at that intersection
+   out = do.call(c,
+                 lapply(seq(n), function(i) {
+                   nrst = st_nearest_points(st_geometry(x)[i], y)
+                   nrst_len = st_length(nrst)
+                   nrst_mn = which.min(nrst_len)
+                   if (as.vector(nrst_len[nrst_mn]) > max_dist) return(st_geometry(x)[i])
+                   return(st_cast(nrst[nrst_mn], "POINT")[2])
+                 })
+   )
+   # this part converts the data to a dataframe and adds a named column of your choice
+   out_xy <- st_coordinates(out) %>% as.data.frame()
+   out_xy <- out_xy %>%
+     mutate({{namevar}} := x[[namevar]]) %>%
+     st_as_sf(coords=c("X","Y"), crs=st_crs(x), remove=FALSE)
+ return(out_xy)
+ }
> # now snap points to the lines using a 500 meter buffer, select which ID column you want keep for rejoining
+ gages_snapped <- st_snap_points(cb_station_proj,
+                                 cb_flowlines,
+                                 namevar = "station",
+                                 max_dist = 1000000)
+ > mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages") +
+   mapview(cb_flowlines, color="steelblue", layer.name="Flowlines")
+ > # create a 1 meter buffer around snapped point
+ poi_snapped_buff <-  st_buffer(gages_snapped, 5)
> segs <- st_collection_extract(lwgeom::st_split(cb_flowlines, poi_snapped_buff), "LINESTRING") %>%
+   stplanr::line_breakup(st_buffer(gages_snapped, 2)) %>%
+   tibble::rownames_to_column(var = "rowid") %>%
+   mutate(rowid=as.integer(rowid))
+ > mapview(segs)
> # filter, if desired
+ segs_filt <- segs %>%
+   filter(
+       ## gnis_id != "1552968"
+     )
> mapview(segs_filt, zcol="gnis_name")  +
+   # mapview(segs, color="blue", lwd=0.3) +
+   mapview(gages_snapped, col.regions="cyan", layer.name="Snapped Gages")
+ > segs_filt_dist <- segs_filt %>%
+   # drop the "loose ends" on either extent (upstream or downstream) of first/last gage
+   # filter(!rowid %in% c(232, 100, 66, 62, 63)) %>%
+   mutate(seg_len_m = units::drop_units(units::set_units(st_length(.), "m")),
+          seg_len_km = seg_len_m/1000) %>%
+   arrange(desc(hydroseq)) %>%
+   mutate(total_len_km = cumsum(seg_len_km)) # %>%
+   # filter to just cols of interest
+   # select(rowid, ogc_fid:comid, gnis_id:reachcode, streamorde, hydroseq, seg_len_km, total_len_km, geom)
> mapview(segs_filt_dist, zcol="total_len_km", layer.name="Cumulative Flowline<br> Distance (km)")  +
+   mapview(gages_snapped, layer.name="conmon stations") +
+   mapview(cb_station_proj, col.regions="orange", layer.name="Unsnapped Gages")
+ segs_on_points <- st_buffer(gages_snapped, 1) %>%
+   ## st_filter(st_buffer(gages_snapped, 1)) %>%
+   st_join(segs_filt_dist)
+ > # reproject all
+ segs_xy <- st_transform(segs_on_points, crs = 4326) %>%
+   st_drop_geometry()
> cb_station_complete <- gages_snapped %>%
+   st_drop_geometry() %>%
+   left_join(segs_xy, by = 'station', suffix = c(".x", "")) %>%
+   select(-ends_with(".x"))
> googlesheets4::write_sheet(cb_station_complete,
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Writing to stations_manual.
✔ Writing to sheet data_flowlines.
> cb_station_complete <- googlesheets4::read_sheet(
+                  ss = "https://docs.google.com/spreadsheets/d/1RrHvZfj1uJv9rUkVST4lMzTiD6UWWNVmZwCIHBOpJuk/edit#gid=0",
+                            sheet = 'data_flowlines')
+ ✔ Reading from stations_manual.
✔ Range ''data_flowlines''.
> cb_station_complete <- cb_station_complete %>%
+   left_join(cb_stations_manual, by = 'station')
> conmon <- rbind(as.data.frame(conmon_eotb), conmon_vecos)
> conmon <- conmon %>%
+   filter(station %in% cb_station_complete$station) %>%
+   left_join(cb_station_complete, by = "station") %>%
+   # and arrange by latitude (roughly longitudinal laong flowpath)
+   arrange(total_len_km)
+ Warning message:
In left_join(., cb_station_complete, by = "station") :
  Detected an unexpected many-to-many relationship between `x` and `y`.
ℹ Row 379674 of `x` matches multiple rows in `y`.
ℹ Row 9 of `y` matches multiple rows in `x`.
ℹ If a many-to-many relationship is expected, set `relationship = "many-to-many"` to silence this
  warning.
> conmon <- conmon %>%
+   rename(latitude = lat, longitude = long)
> # Here is a list of MDDNR and VECOS stations along the Potomac River
+ stations <- c(
+ # MDDNR
+ "XDB4544",
+ "XCD5599",
+ "XFB0231",
+ "XDA8236",
+ "XEA3687",
+ "XBE8396",
+ "XFB2184",
+ "XDC3807",
+ "XDB8884",
+ "XBF6843",
+ "XBF7904",
+ "XCC8346",
+ "XCC9680",
+ "XCF1440",
+ # VECOS
+ "POH002.10",
+ "OCC002.47",
+ "POM000.97",
+ "MON000.18",
+ "NOM002.36",
+ "WES000.18"
+ )
> # set years of interest
+ years <- c(2007, 2008)
> getSeason <- function(DATES) {
+     WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
+     SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
+     SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
+     FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
+ # Convert dates from any year to 2012 dates
+     d <- as.Date(strftime(DATES, format="2012-%m-%d"))
+ ifelse (d >= WS | d < SE, "Winter",
+       ifelse (d >= SE & d < SS, "Spring",
+         ifelse (d >= SS & d < FE, "Summer", "Fall")))
+ }
> # time series with mean, model, and obs
+ conmon.ts <- conmon %>%
+   filter(
+     station %in% stations,
+   ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S"),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          season = getSeason(date),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          ## do_rollmean_1d = zoo::rollmean(do, 96, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          do_mgl_from_eq = do - do_modeled,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+       year %in% years,
+   )
+ conmon.ts.sum <- conmon.ts %>%
+   rename(do_mgl = do) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     )
+ + `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 6767 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "MON000.18"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 6766 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> conmon.ts.sum <- conmon.ts.sum[order(conmon.ts.sum$potomac_river_km),]
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
+ > gg.conmon.sum
Picking joint bandwidth of 1.39
Picking joint bandwidth of 1.31
Picking joint bandwidth of 1.08
Warning message:
`stat(x)` was deprecated in ggplot2 3.4.0.
ℹ Please use `after_stat(x)` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_diel_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 1.41
Picking joint bandwidth of 1.34
Picking joint bandwidth of 1.09
> gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_diel_max,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 0.771
Picking joint bandwidth of 0.792
Picking joint bandwidth of 0.691
> ## DIEL solar hour
+ # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_diel_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 1.41
Picking joint bandwidth of 1.34
Picking joint bandwidth of 1.09
> gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_diel_max,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 0.771
Picking joint bandwidth of 0.792
Picking joint bandwidth of 0.691
> gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_diel_max,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Maximum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Minimum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_diel_max,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Maximum DO Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Hour of Daily Maximum DO (24-hour clock)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 0.771
Picking joint bandwidth of 0.792
Picking joint bandwidth of 0.691
> gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_diel_max,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Maximum DO Solar Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Solar Hour of Daily Maximum DO (Solar Time)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 0.771
Picking joint bandwidth of 0.792
Picking joint bandwidth of 0.691
> ## DIEL solar hour
+ # with measured DO data
+ gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_diel_min,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Minimum DO Solar Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Solar Hour of Daily Minimum DO (Solar Time)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 1.41
Picking joint bandwidth of 1.34
Picking joint bandwidth of 1.09
> conmon.ts.sum <- conmon.ts %>%
+   rename(do_mgl = do) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 6767 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "MON000.18"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 6766 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> conmon.ts.sum <- conmon.ts.sum[order(conmon.ts.sum$potomac_river_km),]
> gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_hour_max,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Maximum DO Solar Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Solar Hour of Daily Maximum DO (Solar Time)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 0.788
Picking joint bandwidth of 0.815
Picking joint bandwidth of 0.716
> gg.conmon.sum <- ggplot(conmon.ts.sum,
+                 aes(
+                   x = do_diel_max,
+                   y =
+                              forcats::fct_rev(forcats::fct_reorder(as.factor(station),
+                                  signif(potomac_river_km, 3))),
+                   fill = stat(x)
+                   ))+
+   ggridges::geom_density_ridges_gradient() +
+   ## scale_x_continuous(limits = c(0, 24), breaks =0:24) +
+   scale_fill_viridis_c(name = "Hour (0-24)", option = "C") +
+   labs(title = 'Daily Maximum DO Solar Timing', subtitle = "Potomac River Conmon, 2007-2008") +
+   ## scale_y_discrete(expand = c(0, 0)) +
+   ## xlim(0, 24) +
+   coord_cartesian(clip = "off") +
+   ggridges::theme_ridges(grid = FALSE, center_axis_labels = TRUE) +
+   labs( y = expression(atop(bold("Stations in Longitudinal Order"))),
+                        ## atop('Upstream to Downstream (river km from the Fall Line)')),
+     x = expression(bold("Solar Hour of Daily Maximum DO (Solar Time)"))) +
+   theme(
+     text = element_text(size = 50),
+     axis.text.y = element_text(size = 44),
+     axis.text.x = element_text(size = 44),
+     plot.title = element_text(size = 56)
+   )  +
+   facet_wrap(~season) +
+   ylab(expression(bold(""))) +
+   theme(legend.position = "none")
> gg.conmon.sum
Picking joint bandwidth of 0.771
Picking joint bandwidth of 0.792
Picking joint bandwidth of 0.691
> gg.conmon.noaa <- ggplot(conmon.ts,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = temp,
+                   y = do_mgl_from_eq,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
Error in scale_color_gradientn(colours = pal) : object 'pal' not found
> Error: object 'gg.conmon.noaa' not found
> gg.conmon.regs <- ggplot(conmon.ts,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_max,
+                   y = do_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.noaa
Error in scale_color_gradientn(colours = pal) : object 'pal' not found
> Error: object 'gg.conmon.noaa' not found
> gg.conmon.regs <- ggplot(conmon.ts,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_max,
+                   y = do_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ gg.conmon.regs
Error in scale_color_gradientn(colours = pal) : object 'pal' not found
> Error: object 'gg.conmon.regs' not found
> pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> gg.conmon.regs <- ggplot(conmon.ts,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_max,
+                   y = do_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
Error in stat_poly_line() : could not find function "stat_poly_line"
> library(ggpmisc)
+ pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
Loading required package: ggpp
Registered S3 methods overwritten by 'ggpp':
  method                  from
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2

Attaching package: ‘ggpp’

The following object is masked from ‘package:ggplot2’:

    annotate

Registered S3 method overwritten by 'ggpmisc':
  method                  from
  as.character.polynomial polynom
> > gg.conmon.regs <- ggplot(conmon.ts,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_max,
+                   y = do_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~month + day_night) +
+   ggtitle(station) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
Error in dots_list(..., title = title, subtitle = subtitle, caption = caption,  :
  object 'station' not found
> gg.conmon.regs <- ggplot(conmon.ts,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_max,
+                   y = do_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month + day_night) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ Warning message:
Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
ℹ Please use `linewidth` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> gg.conmon.regs
Error in `combine_vars()`:
! At least one layer must contain all faceting variables: `station`, `month`, and `day_night`
✖ Plot is missing `day_night`
✖ Layer 1 is missing `day_night`
✖ Layer 2 is missing `day_night`
✖ Layer 3 is missing `day_night`
✖ Layer 4 is missing `c("station", "month", "day_night")`
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> conmon.poh <- conmon %>%
+   filter(
+     station == "POH002.10",
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> > dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> source('./mike_atm.R')
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> source('../R/mike_atm.R')
+ library(unitted)
> > conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
=====================ssp <- spectrum(conmon.y)
+ per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
+ reslm <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x))
+ summary(reslm)
=============================
> Error in as.ts(x) : object 'conmon.y' not found
> Error: object 'ssp' not found
> Error in eval(predvars, data, env) : object 'conmon.y' not found
> Error in h(simpleError(msg, call)) :
  error in evaluating the argument 'object' in selecting a method for function 'summary': object 'reslm' not found
> library(ggpmisc)
+ pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> conmon.poh <- conmon %>%
+   filter(
+     station == "POH002.10",
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> source('./mike_atm.R')
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> source('../R/mike_atm.R')
+ library(unitted)
> conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
> conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
> cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
> conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> ## lmfit <- lm(conmon.y~sin(2*pi*conmon.x/366) + cos(2*pi*conmon.x/366))
+ lmfit <- lm(conmon.y~sin(conmon.x))
+ b0 <- coef(lmfit)[1]
+ alpha <- coef(lmfit)[2]
+ beta <- coef(lmfit)[3]
> ssp <- spectrum(conmon.y)
+ per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
+ reslm <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x))
+ summary(reslm)
> rg <- diff(range(conmon.y))
+ plot(conmon.y ~ conmon.x, ylim=c(min(conmon.y)-0.1*rg, max(conmon.y)+0.1*rg))
+ ## lines(fitted(reslm)~conmon.x,col=4,lty=2)   # dashed blue line is sin fit
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.1578 -1.2515  0.0209  1.2855  8.5736

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.8175     0.1480   5.525 3.35e-08 ***
sin(2 * pi/per * conmon.x)   1.8963     0.1164  16.286  < 2e-16 ***
cos(2 * pi/per * conmon.x)  -0.8281     0.1198  -6.915 4.84e-12 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.947 on 18308 degrees of freedom
Multiple R-squared:  0.1533,	Adjusted R-squared:  0.1532
F-statistic:  1657 on 2 and 18308 DF,  p-value: < 2.2e-16

> > > # including 2nd harmonic reallconmon.y improves the fit
+ reslm2 <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x)+sin(4*pi/per*conmon.x)+cos(4*pi/per*conmon.x))
+ summary(reslm2)
+ lines(fitted(reslm2)~conmon.x,col=3)    # solid green line is periodic with second harmonic
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x) + sin(4 * pi/per * conmon.x) + cos(4 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.0553 -1.0516  0.1115  1.1293  7.6462

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.07039    2.51293   0.028    0.978
sin(2 * pi/per * conmon.x) -11.46616    2.44604  -4.688 2.78e-06 ***
cos(2 * pi/per * conmon.x)  13.57532    2.52172   5.383 7.40e-08 ***
sin(4 * pi/per * conmon.x)   0.07058    0.99937   0.071    0.944
cos(4 * pi/per * conmon.x) -11.88121    0.20318 -58.475  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.784 on 18306 degrees of freedom
Multiple R-squared:  0.289,	Adjusted R-squared:  0.2889
F-statistic:  1860 on 4 and 18306 DF,  p-value: < 2.2e-16

> > cmn.month$act <- predict(reslm2, newdata=cmn.month)
> pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> library(ggpmisc)
> gg.conmon.regs <- ggplot(conmon.ts,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_max,
+                   y = do_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month + day_night) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `combine_vars()`:
! At least one layer must contain all faceting variables: `station`, `month`, and `day_night`
✖ Plot is missing `day_night`
✖ Layer 1 is missing `day_night`
✖ Layer 2 is missing `day_night`
✖ Layer 3 is missing `day_night`
✖ Layer 4 is missing `c("station", "month", "day_night")`
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.regs <- ggplot(conmon.month,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_max,
+                   y = do_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month + day_night) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
Error in ggplot(conmon.month, aes(x = do_max, y = do_min, col = temp/air_temp)) :
  object 'conmon.month' not found
> gg.conmon.regs <- ggplot(cmn.month,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_max,
+                   y = do_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month + day_night) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'do_max' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> colnames(cmn.month)
  [1] "date_time"           "station"             "layer"
  [4] "depth"               "temp"                "sp_cond"
  [7] "salinity"            "do_sat"              "do"
 [10] "ph"                  "turb"                "fluor"
 [13] "tchl_pre_cal"        "chla"                "X"
 [16] "Y"                   "rowid"               "id"
 [19] "comid"               "fdate"               "resolution"
 [22] "gnis_id"             "gnis_name"           "lengthkm"
 [25] "reachcode"           "flowdir"             "wbareacomi"
 [28] "ftype"               "fcode"               "shape_length"
 [31] "streamleve"          "streamorde"          "streamcalc"
 [34] "fromnode"            "tonode"              "hydroseq"
 [37] "levelpathi"          "pathlength"          "terminalpa"
 [40] "arbolatesu"          "divergence"          "startflag"
 [43] "terminalfl"          "dnlevel"             "uplevelpat"
 [46] "uphydroseq"          "dnlevelpat"          "dnminorhyd"
 [49] "dndraincou"          "dnhydroseq"          "frommeas"
 [52] "tomeas"              "rtndiv"              "vpuin"
 [55] "vpuout"              "areasqkm"            "totdasqkm"
 [58] "divdasqkm"           "tidal"               "totma"
 [61] "wbareatype"          "pathtimema"          "hwnodesqkm"
 [64] "maxelevraw"          "minelevraw"          "maxelevsmo"
 [67] "minelevsmo"          "slope"               "elevfixed"
 [70] "hwtype"              "slopelenkm"          "qa_ma"
 [73] "va_ma"               "qc_ma"               "vc_ma"
 [76] "qe_ma"               "ve_ma"               "qa_01"
 [79] "va_01"               "qc_01"               "vc_01"
 [82] "qe_01"               "ve_01"               "qa_02"
 [85] "va_02"               "qc_02"               "vc_02"
 [88] "qe_02"               "ve_02"               "qa_03"
 [91] "va_03"               "qc_03"               "vc_03"
 [94] "qe_03"               "ve_03"               "qa_04"
 [97] "va_04"               "qc_04"               "vc_04"
[100] "qe_04"               "ve_04"               "qa_05"
[103] "va_05"               "qc_05"               "vc_05"
[106] "qe_05"               "ve_05"               "qa_06"
[109] "va_06"               "qc_06"               "vc_06"
[112] "qe_06"               "ve_06"               "qa_07"
[115] "va_07"               "qc_07"               "vc_07"
[118] "qe_07"               "ve_07"               "qa_08"
[121] "va_08"               "qc_08"               "vc_08"
[124] "qe_08"               "ve_08"               "qa_09"
[127] "va_09"               "qc_09"               "vc_09"
[130] "qe_09"               "ve_09"               "qa_10"
[133] "va_10"               "qc_10"               "vc_10"
[136] "qe_10"               "ve_10"               "qa_11"
[139] "va_11"               "qc_11"               "vc_11"
[142] "qe_11"               "ve_11"               "qa_12"
[145] "va_12"               "qc_12"               "vc_12"
[148] "qe_12"               "ve_12"               "lakefract"
[151] "surfarea"            "rareahload"          "rpuid"
[154] "vpuid"               "enabled"             "seg_len_m"
[157] "seg_len_km"          "total_len_km"        "src"
[160] "src_sub"             "data_type"           "watershed"
[163] "watershed_sub"       "site_name"           "latitude"
[166] "longitude"           "start_year"          "end_year"
[169] "station_depth"       "top_sensor_depth_m"  "station_depth_m"
[172] "DO"                  "WQ_fixed"            "WQ_fixed_waterlevel"
[175] "url"                 "notes"               "DateTime"
[178] "DateTime_UTC"        "date"                "dec_date"
[181] "year"                "quarter"             "month"
[184] "week"                "do_rollmean30"       "do_modeled"
[187] "depth_bucket"        "diel"                "daynight"
[190] "air_kPa"             "air_temp"            "dewtemp"
[193] "winddir"             "windspeed"           "skycover"
[196] "precip1h"            "precip6h"            "do_mgl_from_eq"
[199] "day_night"           "act"
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     )
Error in `group_by()`:
! Must group by variables found in `.data`.
✖ Column `season` is not found.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season - getSeason(datetime)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     )
Error in `mutate()`:
ℹ In argument: `season - getSeason(datetime)`.
Caused by error:
! object 'season' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(datetime)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     )
Error in `mutate()`:
ℹ In argument: `season = getSeason(datetime)`.
Caused by error in `as.POSIXlt()`:
! object 'datetime' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.month,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_max,
+                   y = do_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month + day_night) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'do_max' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.regs <- ggplot(cmn.month,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month + day_night) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'do_mgl_max' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month + day_night) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `combine_vars()`:
! At least one layer must contain all faceting variables: `station`, `month`, and `day_night`
✖ Plot is missing `day_night`
✖ Layer 1 is missing `day_night`
✖ Layer 2 is missing `day_night`
✖ Layer 3 is missing `day_night`
✖ Layer 4 is missing `c("station", "month", "day_night")`
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'temp' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'temp' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'air_temp' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
There were 16 warnings (use warnings() to see them)
>
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("XDB4544", "XFB2184", "POH002.10", "WES000.18")
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> source('../R/mike_atm.R')
+ library(unitted)
> conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
Warning message:
There were 4 warnings in `filter()`.
The first warning was:
ℹ In argument: `&...`.
Caused by warning in `LAT < (lat + 5)`:
! longer object length is not a multiple of shorter object length
ℹ Run `dplyr::last_dplyr_warnings()` to see the 3 remaining warnings.
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
+ Error in `mutate()`:
ℹ In argument: `station = station`.
Caused by error:
! `station` must be size 21985 or 1, not 4.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("XDB4544"),
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> source('./mike_atm.R')
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> source('../R/mike_atm.R')
+ library(unitted)
> conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724035-13773-2007.gz'
Content type 'unknown' length 86337 bytes (84 KB)
==================================================
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
> conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
> cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
> conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> ## lmfit <- lm(conmon.y~sin(2*pi*conmon.x/366) + cos(2*pi*conmon.x/366))
+ lmfit <- lm(conmon.y~sin(conmon.x))
+ b0 <- coef(lmfit)[1]
+ alpha <- coef(lmfit)[2]
+ beta <- coef(lmfit)[3]
> ssp <- spectrum(conmon.y)
+ per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
+ reslm <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x))
+ summary(reslm)
rg <- diff(range(conmon.y))
+ plot(conmon.y ~ conmon.x, ylim=c(min(conmon.y)-0.1*rg, max(conmon.y)+0.1*rg))
+ ## lines(fitted(reslm)~conmon.x,col=4,lty=2)   # dashed blue line is sin fit
> Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-2.8384 -0.9086 -0.2111  0.6630  6.6049

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                -4.62614    0.10900  -42.44   <2e-16 ***
sin(2 * pi/per * conmon.x)  4.42753    0.08566   51.69   <2e-16 ***
cos(2 * pi/per * conmon.x)  2.38864    0.08834   27.04   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.289 on 14965 degrees of freedom
Multiple R-squared:  0.2647,	Adjusted R-squared:  0.2646
F-statistic:  2694 on 2 and 14965 DF,  p-value: < 2.2e-16

> > # including 2nd harmonic reallconmon.y improves the fit
+ reslm2 <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x)+sin(4*pi/per*conmon.x)+cos(4*pi/per*conmon.x))
+ summary(reslm2)
+ lines(fitted(reslm2)~conmon.x,col=3)    # solid green line is periodic with second harmonic
> >
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x) + sin(4 * pi/per * conmon.x) + cos(4 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-3.5232 -0.6854 -0.0985  0.5409  6.0481

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                 27.6181     1.7656   15.64   <2e-16 ***
sin(2 * pi/per * conmon.x) -37.8070     1.7165  -22.03   <2e-16 ***
cos(2 * pi/per * conmon.x) -19.2113     1.7733  -10.83   <2e-16 ***
sin(4 * pi/per * conmon.x)  13.1573     0.7018   18.75   <2e-16 ***
cos(4 * pi/per * conmon.x)  -8.8405     0.1425  -62.06   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.125 on 14963 degrees of freedom
Multiple R-squared:  0.4401,	Adjusted R-squared:  0.4399
F-statistic:  2940 on 4 and 14963 DF,  p-value: < 2.2e-16

> > cmn.month$act <- predict(reslm2, newdata=cmn.month)
> pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> library(ggpmisc)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 176 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "XDB4544"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date = 2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 175 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
> colnames(cmn.month)
  [1] "date_time"           "station"             "layer"
  [4] "depth"               "temp"                "sp_cond"
  [7] "salinity"            "do_sat"              "do"
 [10] "ph"                  "turb"                "fluor"
 [13] "tchl_pre_cal"        "chla"                "X"
 [16] "Y"                   "rowid"               "id"
 [19] "comid"               "fdate"               "resolution"
 [22] "gnis_id"             "gnis_name"           "lengthkm"
 [25] "reachcode"           "flowdir"             "wbareacomi"
 [28] "ftype"               "fcode"               "shape_length"
 [31] "streamleve"          "streamorde"          "streamcalc"
 [34] "fromnode"            "tonode"              "hydroseq"
 [37] "levelpathi"          "pathlength"          "terminalpa"
 [40] "arbolatesu"          "divergence"          "startflag"
 [43] "terminalfl"          "dnlevel"             "uplevelpat"
 [46] "uphydroseq"          "dnlevelpat"          "dnminorhyd"
 [49] "dndraincou"          "dnhydroseq"          "frommeas"
 [52] "tomeas"              "rtndiv"              "vpuin"
 [55] "vpuout"              "areasqkm"            "totdasqkm"
 [58] "divdasqkm"           "tidal"               "totma"
 [61] "wbareatype"          "pathtimema"          "hwnodesqkm"
 [64] "maxelevraw"          "minelevraw"          "maxelevsmo"
 [67] "minelevsmo"          "slope"               "elevfixed"
 [70] "hwtype"              "slopelenkm"          "qa_ma"
 [73] "va_ma"               "qc_ma"               "vc_ma"
 [76] "qe_ma"               "ve_ma"               "qa_01"
 [79] "va_01"               "qc_01"               "vc_01"
 [82] "qe_01"               "ve_01"               "qa_02"
 [85] "va_02"               "qc_02"               "vc_02"
 [88] "qe_02"               "ve_02"               "qa_03"
 [91] "va_03"               "qc_03"               "vc_03"
 [94] "qe_03"               "ve_03"               "qa_04"
 [97] "va_04"               "qc_04"               "vc_04"
[100] "qe_04"               "ve_04"               "qa_05"
[103] "va_05"               "qc_05"               "vc_05"
[106] "qe_05"               "ve_05"               "qa_06"
[109] "va_06"               "qc_06"               "vc_06"
[112] "qe_06"               "ve_06"               "qa_07"
[115] "va_07"               "qc_07"               "vc_07"
[118] "qe_07"               "ve_07"               "qa_08"
[121] "va_08"               "qc_08"               "vc_08"
[124] "qe_08"               "ve_08"               "qa_09"
[127] "va_09"               "qc_09"               "vc_09"
[130] "qe_09"               "ve_09"               "qa_10"
[133] "va_10"               "qc_10"               "vc_10"
[136] "qe_10"               "ve_10"               "qa_11"
[139] "va_11"               "qc_11"               "vc_11"
[142] "qe_11"               "ve_11"               "qa_12"
[145] "va_12"               "qc_12"               "vc_12"
[148] "qe_12"               "ve_12"               "lakefract"
[151] "surfarea"            "rareahload"          "rpuid"
[154] "vpuid"               "enabled"             "seg_len_m"
[157] "seg_len_km"          "total_len_km"        "src"
[160] "src_sub"             "data_type"           "watershed"
[163] "watershed_sub"       "site_name"           "latitude"
[166] "longitude"           "start_year"          "end_year"
[169] "station_depth"       "top_sensor_depth_m"  "station_depth_m"
[172] "DO"                  "WQ_fixed"            "WQ_fixed_waterlevel"
[175] "url"                 "notes"               "DateTime"
[178] "DateTime_UTC"        "date"                "dec_date"
[181] "year"                "quarter"             "month"
[184] "week"                "do_rollmean30"       "do_modeled"
[187] "depth_bucket"        "diel"                "daynight"
[190] "air_kPa"             "air_temp"            "dewtemp"
[193] "winddir"             "windspeed"           "skycover"
[196] "precip1h"            "precip6h"            "do_mgl_from_eq"
[199] "day_night"           "act"
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl[which(daynight == 'day')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 176 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "XDB4544"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date = 2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 175 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl[which(daynight == 'day')]),
+     do_diel_respiration = do_diel_production - sum(do_mgl[which(daynight == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 176 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "XDB4544"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date = 2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 175 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.noaa <- ggplot(cmn.month[cmn.month$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'do_diel_production' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + day_night) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Error in `combine_vars()`:
! At least one layer must contain all faceting variables: `month` and `day_night`
✖ Plot is missing `day_night`
✖ Layer 1 is missing `day_night`
✖ Layer 2 is missing `day_night`
✖ Layer 3 is missing `day_night`
✖ Layer 4 is missing `c("month", "day_night")`
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$month == 5,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~month + daynight) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Error in `combine_vars()`:
! At least one layer must contain all faceting variables: `month` and `daynight`
✖ Plot is missing `daynight`
✖ Layer 1 is missing `daynight`
✖ Layer 2 is missing `daynight`
✖ Layer 3 is missing `daynight`
✖ Layer 4 is missing `c("month", "daynight")`
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'skycover' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
> cmn.poh.sum$do_diel_production
  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [38] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [75] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[112] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[149] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[186] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[223] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[260] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[297] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[334] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> which(cmn.mont$daynight == 'day')
Error in which(cmn.mont$daynight == "day") : object 'cmn.mont' not found
> which(cmn.month$daynight == 'day')
integer(0)
> which(cmn.month$daynight)
   [1]     1     2     3     4     5     6     7     8     9    10    11    12
  [13]    13    14    15    16    34    35    36    37    38    39    40    41
  [25]    42    43    44    45    46    47    48    49    50    51    52    71
  [37]    72    73    74    75    76    77    78    79    80    81    82    83
  [49]    84    85    86    87    88    89    90    91    92    93    94    95
  [61]    96    97    98    99   100   101   102   103   104   105   106   107
  [73]   108   109   110   111   112   113   114   115   116   117   118   119
  [85]   120   121   122   123   124   125   126   161   162   163   164   165
  [97]   166   167   168   169   170   171   172   173   174   175   176   177
 [109]   178   179   180   181   182   183   184   185   186   187   188   189
 [121]   190   191   192   193   194   195   196   197   198   199   200   201
 [133]   202   203   204   205   206   207   208   209   210   211   212   213
 [145]   214   215   216   217   237   238   239   240   241   242   243   244
 [157]   245   246   247   248   249   250   251   252   253   254   255   256
 [169]   257   258   259   260   261   262   263   264   265   266   267   268
 [181]   269   270   271   288   289   290   291   292   293   294   295   296
 [193]   297   298   299   300   301   302   303   304   305   306   307   308
 [205]   309   310   311   312   313   314   315   316   317   318   319   320
 [217]   321   322   323   345   346   347   348   349   350   351   352   353
 [229]   354   355   356   357   358   359   360   361   362   363   364   365
 [241]   366   367   368   369   370   371   372   373   374   375   376   377
 [253]   378   379   380   381   382   383   384   385   386   387   388   389
 [265]   390   391   392   393   394   395   396   397   398   399   400   401
 [277]   441   442   443   444   445   446   447   448   449   450   451   452
 [289]   453   454   455   456   457   458   459   460   461   462   463   464
 [301]   465   466   467   468   469   470   471   472   473   474   475   476
 [313]   477   478   479   480   481   482   483   484   485   486   487   488
 [325]   489   490   491   492   493   494   495   496   497   537   538   539
 [337]   540   541   542   543   544   545   546   547   548   549   550   551
 [349]   552   553   554   555   556   557   558   559   560   561   562   563
 [361]   564   565   566   567   568   569   570   571   572   573   574   575
 [373]   576   577   578   579   580   581   582   583   584   585   586   587
 [385]   588   589   590   623   624   625   626   627   628   629   630   631
 [397]   632   633   634   635   636   637   638   639   640   641   642   643
 [409]   644   645   646   647   648   649   678   679   680   681   682   683
 [421]   684   685   686   687   688   689   690   691   692   693   694   695
 [433]   696   728   729   730   731   732   733   734   735   736   737   738
 [445]   739   740   741   742   743   744   745   746   747   748   749   750
 [457]   751   752   753   754   755   756   757   758   759   760   761   762
 [469]   763   797   798   799   800   801   802   803   804   805   806   807
 [481]   808   809   810   811   812   813   814   815   816   817   818   819
 [493]   820   821   822   823   824   825   826   827   828   829   830   858
 [505]   859   860   861   862   863   864   865   866   867   868   869   870
 [517]   871   872   873   874   875   876   877   878   879   880   881   882
 [529]   883   884   885   886   887   888   889   918   919   920   921   922
 [541]   923   924   925   926   927   928   929   930   931   932   933   934
 [553]   935   936   937   938   939   940   941   942   943   944   945   946
 [565]   947   948   949   950   951   952   953   954   955   956   957   958
 [577]   959   960   961   962   963   964   965   966   967   968   998   999
 [589]  1000  1001  1002  1003  1004  1005  1006  1007  1008  1009  1010  1011
 [601]  1012  1013  1014  1015  1016  1017  1018  1019  1020  1021  1022  1023
 [613]  1024  1025  1026  1027  1028  1029  1030  1031  1032  1033  1034  1035
 [625]  1036  1037  1038  1039  1040  1041  1042  1043  1044  1045  1073  1074
 [637]  1075  1076  1077  1078  1079  1080  1081  1082  1083  1084  1085  1086
 [649]  1087  1088  1089  1090  1091  1092  1093  1094  1095  1096  1097  1098
 [661]  1099  1100  1101  1102  1103  1104  1105  1106  1107  1108  1109  1110
 [673]  1111  1112  1113  1114  1115  1116  1117  1118  1119  1120  1152  1153
 [685]  1154  1155  1156  1157  1158  1159  1160  1161  1162  1163  1164  1165
 [697]  1166  1167  1168  1169  1170  1171  1172  1173  1174  1175  1176  1177
 [709]  1178  1179  1180  1181  1182  1183  1184  1185  1186  1187  1188  1189
 [721]  1190  1191  1192  1193  1194  1195  1196  1197  1198  1199  1200  1201
 [733]  1202  1203  1204  1205  1206  1207  1208  1209  1235  1236  1237  1238
 [745]  1239  1240  1241  1242  1243  1244  1245  1246  1247  1248  1249  1250
 [757]  1251  1252  1253  1254  1255  1256  1257  1258  1259  1260  1261  1262
 [769]  1263  1264  1265  1266  1267  1268  1269  1270  1271  1272  1273  1274
 [781]  1275  1276  1277  1278  1279  1280  1281  1282  1283  1284  1285  1286
 [793]  1287  1288  1289  1290  1291  1292  1331  1332  1333  1334  1335  1336
 [805]  1337  1338  1339  1340  1341  1342  1343  1344  1345  1346  1347  1348
 [817]  1349  1350  1351  1352  1353  1354  1355  1356  1357  1358  1359  1360
 [829]  1361  1362  1363  1364  1365  1366  1367  1368  1369  1370  1371  1372
 [841]  1373  1374  1375  1376  1377  1378  1379  1380  1381  1382  1383  1384
 [853]  1385  1386  1387  1388  1427  1428  1429  1430  1431  1432  1433  1434
 [865]  1435  1436  1437  1438  1439  1440  1441  1442  1443  1444  1445  1446
 [877]  1447  1448  1449  1450  1451  1452  1453  1454  1455  1456  1457  1458
 [889]  1459  1460  1461  1462  1463  1464  1465  1466  1467  1468  1469  1470
 [901]  1471  1472  1473  1474  1475  1476  1477  1478  1479  1480  1481  1482
 [913]  1483  1484  1523  1524  1525  1526  1527  1528  1529  1530  1531  1532
 [925]  1533  1534  1535  1536  1537  1538  1539  1540  1541  1542  1543  1544
 [937]  1545  1546  1547  1548  1549  1550  1551  1552  1553  1554  1555  1556
 [949]  1557  1558  1559  1560  1594  1595  1596  1597  1598  1599  1600  1601
 [961]  1602  1603  1604  1605  1606  1607  1608  1609  1610  1611  1612  1613
 [973]  1614  1615  1616  1617  1618  1619  1620  1621  1622  1623  1624  1625
 [985]  1626  1627  1628  1629  1630  1631  1632  1633  1634  1635  1636  1637
 [997]  1638  1639  1640  1641  1642  1643  1644  1645  1646  1647  1648  1649
[1009]  1650  1651  1690  1691  1692  1693  1694  1695  1696  1697  1698  1699
[1021]  1700  1701  1702  1703  1704  1705  1706  1707  1708  1709  1710  1711
[1033]  1712  1713  1714  1715  1716  1717  1718  1719  1720  1721  1722  1723
[1045]  1724  1725  1726  1727  1728  1729  1730  1731  1732  1733  1734  1735
[1057]  1736  1737  1738  1739  1740  1741  1742  1743  1744  1745  1746  1780
[1069]  1781  1782  1783  1784  1785  1786  1787  1788  1789  1790  1791  1792
[1081]  1793  1794  1795  1796  1797  1798  1799  1800  1801  1802  1803  1804
[1093]  1805  1806  1807  1808  1809  1810  1811  1812  1813  1814  1815  1854
[1105]  1855  1856  1857  1858  1859  1860  1861  1862  1863  1864  1865  1866
[1117]  1867  1868  1869  1870  1871  1872  1873  1874  1875  1876  1877  1878
[1129]  1879  1880  1881  1882  1883  1884  1885  1886  1887  1888  1889  1890
[1141]  1891  1892  1893  1894  1895  1896  1897  1898  1899  1900  1901  1902
[1153]  1903  1904  1905  1906  1907  1908  1909  1910  1911  1950  1951  1952
[1165]  1953  1954  1955  1956  1957  1958  1959  1960  1961  1962  1963  1964
[1177]  1965  1966  1967  1968  1969  1970  1971  1972  1973  1974  1975  1976
[1189]  1977  1978  1979  1980  1981  1982  1983  1984  1985  1986  1987  1988
[1201]  1989  1990  1991  1992  1993  1994  1995  1996  1997  1998  1999  2000
[1213]  2001  2002  2003  2004  2005  2006  2007  2046  2047  2048  2049  2050
[1225]  2051  2052  2053  2054  2055  2056  2057  2058  2059  2060  2061  2062
[1237]  2063  2064  2065  2066  2067  2068  2069  2070  2071  2072  2073  2074
[1249]  2075  2076  2077  2078  2079  2080  2081  2082  2083  2084  2085  2086
[1261]  2087  2088  2124  2125  2126  2127  2128  2129  2130  2131  2132  2133
[1273]  2134  2135  2136  2137  2138  2139  2140  2141  2142  2143  2144  2145
[1285]  2146  2147  2148  2149  2150  2151  2152  2153  2154  2155  2156  2157
[1297]  2158  2159  2160  2161  2162  2163  2164  2165  2166  2167  2168  2169
[1309]  2170  2171  2172  2173  2174  2175  2176  2177  2178  2179  2180  2181
[1321]  2220  2221  2222  2223  2224  2225  2226  2227  2228  2229  2230  2231
[1333]  2232  2233  2234  2235  2236  2237  2238  2239  2240  2241  2242  2243
[1345]  2244  2245  2246  2247  2248  2249  2250  2251  2252  2253  2254  2255
[1357]  2256  2257  2258  2259  2260  2261  2262  2263  2264  2265  2266  2267
[1369]  2268  2269  2270  2271  2272  2273  2274  2275  2276  2277  2316  2317
[1381]  2318  2319  2320  2321  2322  2323  2324  2325  2326  2327  2328  2329
[1393]  2330  2331  2332  2333  2334  2335  2336  2337  2338  2339  2340  2341
[1405]  2342  2343  2344  2345  2346  2347  2348  2349  2350  2351  2352  2353
[1417]  2354  2355  2356  2357  2358  2359  2360  2361  2362  2363  2364  2365
[1429]  2366  2367  2368  2369  2370  2371  2372  2373  2412  2413  2414  2415
[1441]  2416  2417  2418  2419  2420  2421  2422  2423  2424  2425  2426  2427
[1453]  2428  2429  2430  2431  2432  2433  2434  2435  2436  2437  2438  2439
[1465]  2440  2441  2442  2443  2444  2445  2446  2447  2448  2449  2450  2451
[1477]  2452  2453  2454  2455  2456  2457  2458  2459  2460  2461  2462  2463
[1489]  2464  2465  2466  2467  2468  2469  2505  2506  2507  2508  2509  2510
[1501]  2511  2512  2513  2514  2515  2516  2517  2518  2519  2520  2521  2522
[1513]  2523  2524  2525  2526  2527  2528  2529  2530  2531  2532  2533  2534
[1525]  2535  2536  2537  2538  2539  2540  2541  2542  2543  2544  2545  2546
[1537]  2547  2548  2549  2550  2551  2552  2553  2578  2579  2580  2581  2582
[1549]  2583  2584  2585  2586  2587  2588  2589  2590  2591  2592  2593  2594
[1561]  2595  2596  2597  2598  2599  2600  2601  2602  2603  2604  2605  2606
[1573]  2607  2608  2609  2610  2611  2612  2613  2614  2615  2616  2617  2618
[1585]  2619  2620  2621  2622  2623  2662  2663  2664  2665  2666  2667  2668
[1597]  2669  2670  2671  2672  2673  2674  2675  2676  2677  2678  2679  2680
[1609]  2681  2682  2683  2684  2685  2686  2687  2688  2689  2690  2691  2692
[1621]  2693  2694  2695  2696  2697  2698  2699  2700  2701  2702  2703  2704
[1633]  2705  2706  2707  2708  2709  2710  2711  2712  2713  2714  2715  2716
[1645]  2717  2718  2719  2758  2759  2760  2761  2762  2763  2764  2765  2766
[1657]  2767  2768  2769  2770  2771  2772  2773  2774  2775  2776  2777  2778
[1669]  2779  2780  2781  2782  2783  2784  2785  2786  2787  2788  2789  2790
[1681]  2791  2792  2793  2794  2795  2796  2797  2798  2799  2800  2801  2802
[1693]  2803  2804  2805  2806  2807  2829  2830  2831  2832  2833  2834  2835
[1705]  2836  2837  2838  2839  2840  2841  2842  2843  2844  2845  2846  2847
[1717]  2848  2849  2850  2851  2852  2853  2854  2855  2856  2857  2858  2859
[1729]  2860  2861  2862  2863  2864  2865  2866  2867  2868  2869  2870  2871
[1741]  2872  2873  2911  2912  2913  2914  2915  2916  2917  2918  2919  2920
[1753]  2921  2922  2923  2924  2925  2926  2927  2928  2929  2930  2931  2932
[1765]  2933  2934  2935  2936  2937  2960  2961  2962  2963  2964  2965  2966
[1777]  2967  2968  2969  2970  2971  2972  2973  2974  2975  2976  2977  2978
[1789]  2979  2980  2981  2982  2983  2984  2985  2986  2987  2988  2989  2990
[1801]  2991  2992  2993  2994  2995  2996  2997  2998  2999  3000  3001  3002
[1813]  3003  3004  3005  3006  3007  3008  3009  3010  3011  3012  3050  3051
[1825]  3052  3053  3054  3055  3056  3057  3058  3059  3060  3061  3062  3063
[1837]  3064  3065  3066  3067  3068  3069  3070  3071  3072  3073  3074  3075
[1849]  3076  3077  3078  3079  3080  3081  3082  3083  3084  3085  3086  3087
[1861]  3088  3089  3090  3091  3092  3093  3094  3095  3096  3097  3098  3099
[1873]  3100  3101  3102  3103  3104  3105  3106  3107  3108  3146  3147  3148
[1885]  3149  3150  3151  3152  3153  3154  3155  3156  3157  3158  3159  3160
[1897]  3161  3162  3163  3164  3165  3166  3167  3168  3169  3170  3171  3172
[1909]  3173  3174  3175  3176  3177  3178  3179  3180  3181  3182  3183  3184
[1921]  3185  3186  3187  3188  3189  3190  3191  3192  3193  3194  3195  3196
[1933]  3197  3198  3199  3200  3201  3202  3203  3204  3242  3243  3244  3245
[1945]  3246  3247  3248  3249  3250  3251  3252  3253  3254  3255  3256  3257
[1957]  3258  3259  3260  3261  3262  3263  3264  3265  3266  3267  3268  3269
[1969]  3270  3271  3272  3273  3274  3275  3276  3277  3278  3279  3280  3281
[1981]  3282  3316  3317  3318  3319  3320  3321  3322  3323  3324  3325  3326
[1993]  3327  3328  3329  3330  3331  3332  3333  3334  3335  3336  3337  3338
[2005]  3339  3340  3341  3342  3343  3344  3345  3346  3347  3348  3349  3350
[2017]  3351  3352  3353  3354  3382  3383  3384  3385  3386  3387  3388  3389
[2029]  3390  3391  3392  3393  3394  3395  3396  3397  3398  3399  3400  3421
[2041]  3422  3423  3424  3425  3426  3427  3428  3429  3430  3431  3432  3433
[2053]  3434  3435  3436  3437  3438  3439  3440  3441  3442  3443  3444  3445
[2065]  3468  3469  3470  3471  3472  3473  3474  3475  3476  3477  3478  3479
[2077]  3480  3481  3482  3483  3484  3485  3486  3487  3488  3489  3490  3491
[2089]  3492  3493  3494  3495  3496  3497  3498  3499  3500  3501  3502  3503
[2101]  3504  3505  3506  3507  3508  3509  3510  3511  3512  3513  3514  3552
[2113]  3553  3554  3555  3556  3557  3558  3559  3560  3561  3562  3563  3564
[2125]  3565  3566  3567  3568  3569  3570  3571  3572  3573  3574  3575  3576
[2137]  3577  3578  3579  3580  3581  3582  3583  3584  3585  3586  3587  3588
[2149]  3589  3590  3591  3592  3593  3594  3595  3596  3597  3598  3599  3600
[2161]  3601  3602  3603  3604  3605  3606  3607  3608  3609  3610  3631  3632
[2173]  3633  3634  3635  3636  3637  3638  3639  3640  3641  3642  3643  3644
[2185]  3645  3646  3647  3648  3649  3650  3651  3652  3653  3654  3655  3656
[2197]  3657  3658  3659  3660  3661  3662  3663  3664  3665  3666  3667  3668
[2209]  3669  3670  3671  3672  3673  3674  3675  3676  3677  3678  3679  3680
[2221]  3681  3682  3683  3684  3685  3709  3710  3711  3712  3713  3714  3715
[2233]  3716  3717  3718  3719  3720  3721  3722  3723  3724  3725  3726  3727
[2245]  3728  3729  3730  3731  3732  3733  3734  3735  3736  3737  3738  3739
[2257]  3740  3741  3742  3743  3744  3745  3746  3747  3748  3749  3750  3751
[2269]  3752  3753  3754  3755  3756  3792  3793  3794  3795  3796  3797  3798
[2281]  3799  3800  3801  3802  3803  3804  3805  3806  3807  3808  3809  3810
[2293]  3811  3812  3813  3814  3815  3816  3817  3818  3819  3820  3821  3822
[2305]  3823  3824  3825  3826  3827  3828  3829  3830  3831  3832  3833  3834
[2317]  3835  3836  3837  3838  3839  3840  3841  3842  3843  3844  3845  3846
[2329]  3847  3848  3886  3887  3888  3889  3890  3891  3892  3893  3894  3895
[2341]  3896  3897  3898  3899  3900  3901  3902  3903  3904  3905  3906  3907
[2353]  3908  3909  3910  3911  3912  3913  3914  3915  3916  3917  3918  3919
[2365]  3920  3921  3922  3923  3924  3925  3926  3927  3928  3943  3944  3945
[2377]  3946  3947  3948  3949  3950  3951  3952  3953  3954  3955  3956  3957
[2389]  3958  3959  3960  3961  3962  3963  3964  3965  3966  3967  3985  3986
[2401]  3987  3988  3989  3990  3991  3992  3993  3994  3995  3996  3997  3998
[2413]  3999  4000  4001  4002  4003  4004  4005  4006  4007  4008  4009  4010
[2425]  4011  4012  4013  4014  4015  4016  4017  4018  4019  4020  4021  4022
[2437]  4023  4056  4057  4058  4059  4060  4061  4062  4063  4064  4065  4066
[2449]  4067  4068  4069  4070  4071  4072  4073  4074  4075  4076  4077  4078
[2461]  4079  4080  4081  4082  4083  4084  4085  4086  4087  4088  4089  4090
[2473]  4091  4092  4093  4094  4095  4096  4097  4098  4099  4137  4138  4139
[2485]  4140  4141  4142  4143  4144  4145  4146  4147  4148  4149  4150  4151
[2497]  4152  4153  4154  4155  4156  4157  4158  4159  4160  4161  4162  4163
[2509]  4164  4165  4166  4167  4168  4169  4170  4171  4172  4173  4174  4175
[2521]  4176  4177  4178  4179  4180  4219  4220  4221  4222  4223  4224  4225
[2533]  4226  4227  4228  4229  4230  4231  4232  4233  4234  4235  4236  4237
[2545]  4238  4239  4240  4241  4242  4243  4244  4245  4246  4247  4248  4249
[2557]  4250  4251  4252  4253  4254  4255  4256  4257  4258  4259  4260  4297
[2569]  4298  4299  4300  4301  4302  4303  4304  4305  4306  4307  4308  4309
[2581]  4310  4311  4312  4313  4314  4315  4316  4317  4318  4319  4320  4321
[2593]  4322  4323  4324  4325  4326  4327  4328  4329  4330  4331  4332  4333
[2605]  4334  4335  4336  4337  4338  4371  4372  4373  4374  4375  4376  4377
[2617]  4378  4379  4380  4381  4382  4383  4384  4385  4386  4387  4388  4389
[2629]  4390  4391  4392  4393  4394  4395  4396  4397  4398  4426  4427  4428
[2641]  4429  4430  4431  4432  4433  4434  4435  4436  4437  4438  4439  4440
[2653]  4441  4442  4443  4444  4445  4446  4447  4448  4449  4450  4451  4452
[2665]  4453  4454  4455  4456  4457  4458  4459  4460  4461  4462  4463  4464
[2677]  4465  4466  4467  4468  4469  4470  4471  4472  4473  4474  4475  4476
[2689]  4499  4500  4501  4502  4503  4504  4505  4506  4507  4508  4509  4510
[2701]  4511  4512  4513  4514  4515  4516  4517  4518  4519  4520  4521  4522
[2713]  4523  4524  4525  4526  4527  4528  4529  4530  4531  4532  4533  4534
[2725]  4535  4536  4537  4538  4539  4540  4541  4566  4567  4568  4569  4570
[2737]  4571  4572  4573  4574  4575  4576  4577  4578  4579  4580  4581  4582
[2749]  4583  4584  4585  4586  4587  4588  4589  4590  4591  4592  4593  4594
[2761]  4595  4596  4597  4598  4599  4600  4601  4602  4603  4604  4605  4606
[2773]  4607  4608  4609  4610  4611  4612  4613  4614  4641  4642  4643  4644
[2785]  4645  4646  4647  4648  4649  4650  4651  4652  4653  4654  4655  4656
[2797]  4657  4658  4659  4660  4661  4662  4663  4664  4665  4666  4667  4668
[2809]  4669  4670  4671  4672  4673  4674  4675  4676  4677  4678  4679  4680
[2821]  4681  4682  4703  4704  4705  4706  4707  4708  4709  4710  4711  4712
[2833]  4713  4714  4715  4716  4717  4718  4719  4720  4721  4722  4723  4724
[2845]  4725  4726  4727  4728  4729  4730  4731  4732  4733  4734  4735  4736
[2857]  4737  4738  4739  4740  4741  4742  4743  4778  4779  4780  4781  4782
[2869]  4783  4784  4785  4786  4787  4788  4789  4790  4791  4792  4793  4794
[2881]  4795  4796  4797  4798  4799  4800  4801  4802  4803  4804  4805  4806
[2893]  4807  4808  4809  4810  4811  4812  4813  4814  4815  4816  4817  4818
[2905]  4819  4820  4821  4822  4823  4824  4825  4826  4827  4828  4829  4830
[2917]  4831  4832  4872  4873  4874  4875  4876  4877  4878  4879  4880  4881
[2929]  4882  4883  4884  4885  4886  4887  4888  4889  4890  4891  4892  4893
[2941]  4894  4895  4896  4897  4898  4899  4900  4901  4902  4903  4904  4905
[2953]  4906  4907  4908  4909  4910  4911  4912  4913  4914  4915  4916  4952
[2965]  4953  4954  4955  4956  4957  4958  4959  4960  4961  4962  4963  4964
[2977]  4965  4966  4967  4968  4969  4970  4971  4972  4973  4974  4975  4976
[2989]  4977  4978  4979  4980  4981  4982  4983  4984  4985  4986  5007  5008
[3001]  5009  5010  5011  5012  5013  5014  5015  5016  5017  5018  5019  5020
[3013]  5021  5022  5023  5024  5025  5026  5027  5028  5029  5030  5031  5032
[3025]  5033  5034  5035  5036  5037  5038  5039  5040  5041  5042  5043  5083
[3037]  5084  5085  5086  5087  5088  5089  5090  5091  5092  5093  5094  5095
[3049]  5096  5097  5098  5099  5100  5101  5102  5103  5104  5105  5106  5107
[3061]  5108  5109  5110  5111  5112  5113  5114  5115  5116  5117  5118  5119
[3073]  5120  5121  5122  5123  5124  5125  5126  5127  5128  5129  5130  5131
[3085]  5132  5133  5134  5135  5175  5176  5177  5178  5179  5180  5181  5182
[3097]  5183  5184  5185  5186  5187  5188  5189  5190  5191  5192  5193  5194
[3109]  5195  5196  5197  5198  5199  5200  5201  5202  5203  5204  5205  5206
[3121]  5207  5208  5209  5210  5211  5212  5213  5214  5215  5216  5217  5218
[3133]  5219  5220  5221  5222  5223  5224  5225  5226  5227  5228  5229  5230
[3145]  5231  5271  5272  5273  5274  5275  5276  5277  5278  5279  5280  5281
[3157]  5282  5283  5284  5285  5286  5287  5288  5289  5290  5291  5292  5293
[3169]  5294  5295  5296  5297  5298  5299  5300  5301  5302  5303  5304  5305
[3181]  5306  5307  5308  5309  5310  5311  5312  5313  5314  5315  5316  5317
[3193]  5318  5319  5320  5321  5322  5323  5324  5325  5326  5327  5367  5368
[3205]  5369  5370  5371  5372  5373  5374  5375  5376  5377  5378  5379  5380
[3217]  5381  5382  5383  5384  5385  5386  5387  5388  5389  5390  5391  5392
[3229]  5393  5394  5395  5396  5397  5398  5399  5400  5401  5402  5403  5404
[3241]  5405  5406  5407  5408  5409  5410  5411  5450  5451  5452  5453  5454
[3253]  5455  5456  5457  5458  5459  5460  5461  5462  5463  5464  5465  5466
[3265]  5467  5468  5469  5470  5471  5472  5473  5474  5475  5476  5477  5478
[3277]  5479  5480  5481  5482  5483  5484  5485  5486  5487  5488  5489  5490
[3289]  5491  5492  5493  5494  5495  5496  5497  5498  5499  5500  5501  5502
[3301]  5503  5504  5505  5506  5546  5547  5548  5549  5550  5551  5552  5553
[3313]  5554  5555  5556  5557  5558  5559  5560  5561  5562  5563  5564  5565
[3325]  5566  5567  5568  5569  5570  5571  5572  5573  5574  5575  5576  5577
[3337]  5578  5579  5580  5581  5582  5583  5584  5585  5586  5587  5588  5589
[3349]  5590  5591  5592  5593  5594  5595  5596  5597  5598  5599  5600  5601
[3361]  5602  5642  5643  5644  5645  5646  5647  5648  5649  5650  5651  5652
[3373]  5653  5654  5655  5656  5657  5658  5659  5660  5661  5662  5663  5664
[3385]  5665  5666  5667  5668  5669  5670  5671  5672  5673  5674  5675  5676
[3397]  5677  5678  5679  5680  5681  5682  5683  5684  5685  5686  5687  5688
[3409]  5689  5690  5691  5692  5693  5694  5695  5696  5697  5698  5735  5736
[3421]  5737  5738  5739  5740  5741  5742  5743  5744  5745  5746  5747  5748
[3433]  5749  5750  5751  5752  5753  5754  5755  5756  5757  5758  5759  5760
[3445]  5761  5762  5763  5764  5765  5766  5767  5768  5769  5770  5771  5772
[3457]  5773  5774  5775  5776  5777  5778  5779  5780  5781  5782  5783  5784
[3469]  5785  5786  5787  5788  5789  5790  5791  5829  5830  5831  5832  5833
[3481]  5834  5835  5836  5837  5838  5839  5840  5841  5842  5843  5844  5845
[3493]  5846  5847  5848  5849  5850  5851  5852  5853  5854  5855  5856  5857
[3505]  5858  5859  5860  5861  5862  5863  5864  5865  5866  5867  5868  5869
[3517]  5870  5871  5872  5873  5874  5875  5876  5877  5878  5879  5880  5881
[3529]  5882  5883  5884  5917  5918  5919  5920  5921  5922  5923  5924  5925
[3541]  5926  5927  5928  5929  5930  5931  5932  5933  5934  5935  5936  5937
[3553]  5938  5939  5940  5941  5942  5943  5944  5945  5946  5947  5948  5949
[3565]  5950  5951  5952  5953  5954  5955  5956  5957  5958  5959  5960  5961
[3577]  5962  5963  5964  5965  5966  5967  6000  6001  6002  6003  6004  6005
[3589]  6006  6007  6008  6009  6010  6011  6012  6013  6014  6015  6016  6017
[3601]  6018  6019  6020  6021  6022  6023  6024  6025  6026  6027  6028  6029
[3613]  6030  6031  6032  6033  6034  6035  6036  6037  6038  6039  6040  6041
[3625]  6042  6043  6044  6045  6046  6047  6048  6088  6089  6090  6091  6092
[3637]  6093  6094  6095  6096  6097  6098  6099  6100  6101  6102  6103  6104
[3649]  6105  6106  6107  6108  6109  6110  6111  6112  6113  6114  6115  6116
[3661]  6117  6118  6119  6120  6121  6122  6123  6124  6125  6126  6127  6128
[3673]  6129  6130  6131  6132  6133  6134  6135  6136  6178  6179  6180  6181
[3685]  6182  6183  6184  6185  6186  6187  6188  6189  6190  6191  6192  6193
[3697]  6194  6195  6196  6197  6198  6199  6200  6201  6202  6203  6204  6205
[3709]  6206  6207  6208  6209  6210  6211  6212  6213  6214  6215  6216  6217
[3721]  6218  6219  6220  6221  6222  6223  6224  6225  6226  6227  6269  6270
[3733]  6271  6272  6273  6274  6275  6276  6277  6278  6279  6280  6281  6282
[3745]  6283  6284  6285  6286  6287  6288  6289  6290  6291  6292  6293  6294
[3757]  6295  6296  6297  6298  6299  6300  6301  6302  6303  6304  6305  6306
[3769]  6307  6308  6335  6336  6337  6338  6339  6340  6341  6342  6343  6344
[3781]  6345  6346  6347  6348  6349  6350  6351  6352  6353  6354  6355  6356
[3793]  6357  6358  6359  6360  6361  6362  6363  6364  6365  6366  6367  6368
[3805]  6369  6370  6371  6372  6373  6374  6375  6417  6418  6419  6420  6421
[3817]  6422  6423  6424  6425  6426  6427  6428  6429  6430  6431  6432  6433
[3829]  6434  6435  6436  6437  6438  6439  6440  6441  6442  6443  6444  6445
[3841]  6446  6447  6448  6449  6450  6451  6452  6453  6454  6455  6456  6457
[3853]  6458  6459  6460  6461  6462  6463  6464  6465  6466  6467  6468  6469
[3865]  6470  6471  6510  6511  6512  6513  6514  6515  6516  6517  6518  6519
[3877]  6520  6521  6522  6523  6524  6525  6526  6527  6528  6529  6530  6531
[3889]  6532  6533  6534  6535  6536  6537  6579  6580  6581  6582  6583  6584
[3901]  6585  6586  6587  6588  6589  6590  6591  6592  6593  6594  6595  6596
[3913]  6597  6598  6599  6600  6601  6602  6603  6604  6605  6606  6607  6608
[3925]  6609  6610  6611  6612  6613  6614  6615  6616  6617  6618  6619  6620
[3937]  6621  6622  6623  6624  6625  6626  6627  6669  6670  6671  6672  6673
[3949]  6674  6675  6676  6677  6678  6679  6680  6681  6682  6683  6684  6685
[3961]  6686  6687  6688  6689  6690  6691  6692  6693  6694  6695  6696  6697
[3973]  6698  6699  6700  6701  6702  6703  6743  6744  6745  6746  6747  6748
[3985]  6749  6750  6751  6752  6753  6754  6755  6756  6757  6758  6759  6760
[3997]  6761  6762  6763  6764  6765  6766  6767  6768  6769  6770  6771  6772
[4009]  6773  6774  6775  6776  6777  6778  6779  6780  6781  6782  6783  6784
[4021]  6785  6786  6787  6788  6789  6790  6791  6792  6793  6794  6795  6796
[4033]  6797  6839  6840  6841  6842  6843  6844  6845  6846  6847  6848  6849
[4045]  6850  6851  6852  6853  6854  6855  6856  6857  6858  6859  6860  6861
[4057]  6862  6863  6864  6865  6866  6867  6868  6869  6870  6871  6872  6873
[4069]  6874  6875  6876  6877  6878  6879  6880  6881  6882  6883  6884  6885
[4081]  6886  6887  6888  6889  6890  6891  6892  6893  6935  6936  6937  6938
[4093]  6939  6940  6941  6942  6943  6944  6945  6946  6947  6948  6949  6950
[4105]  6951  6952  6953  6954  6955  6956  6957  6958  6959  6960  6961  6962
[4117]  6963  6964  6965  6966  6967  6968  6969  6970  6971  6972  6973  6974
[4129]  6975  6976  6977  6978  6979  6980  6981  6982  6983  6984  6985  6986
[4141]  6987  6988  6989  7031  7032  7033  7034  7035  7036  7037  7038  7039
[4153]  7040  7041  7042  7043  7044  7045  7046  7047  7048  7049  7050  7051
[4165]  7052  7053  7054  7055  7056  7057  7058  7059  7060  7061  7062  7063
[4177]  7064  7065  7066  7067  7068  7069  7070  7071  7072  7073  7074  7075
[4189]  7076  7077  7078  7079  7080  7107  7108  7109  7110  7111  7112  7113
[4201]  7114  7115  7116  7117  7118  7119  7120  7121  7122  7123  7124  7125
[4213]  7126  7127  7128  7129  7130  7131  7132  7133  7134  7135  7136  7137
[4225]  7138  7139  7140  7141  7142  7143  7144  7145  7146  7147  7148  7149
[4237]  7150  7151  7152  7194  7195  7196  7197  7198  7199  7200  7201  7202
[4249]  7203  7204  7205  7206  7207  7208  7209  7210  7211  7212  7213  7214
[4261]  7215  7216  7217  7218  7219  7220  7221  7222  7223  7224  7225  7226
[4273]  7227  7228  7229  7230  7231  7232  7233  7234  7235  7236  7237  7238
[4285]  7239  7240  7241  7242  7243  7244  7245  7246  7247  7248  7290  7291
[4297]  7292  7293  7294  7295  7296  7297  7298  7299  7300  7301  7302  7303
[4309]  7304  7305  7306  7307  7308  7309  7310  7311  7312  7313  7314  7315
[4321]  7316  7317  7318  7319  7320  7321  7322  7323  7324  7325  7326  7327
[4333]  7328  7329  7330  7331  7332  7333  7334  7335  7336  7337  7338  7339
[4345]  7363  7364  7365  7366  7367  7368  7369  7370  7371  7372  7373  7374
[4357]  7375  7376  7377  7378  7379  7380  7381  7382  7383  7384  7385  7386
[4369]  7387  7388  7389  7390  7391  7392  7393  7394  7395  7396  7420  7421
[4381]  7422  7423  7424  7425  7426  7427  7428  7429  7430  7431  7432  7433
[4393]  7434  7435  7436  7437  7438  7439  7440  7441  7442  7443  7444  7445
[4405]  7446  7447  7490  7491  7492  7493  7494  7495  7496  7497  7498  7499
[4417]  7500  7501  7502  7503  7504  7505  7506  7507  7508  7509  7510  7511
[4429]  7512  7513  7514  7515  7516  7517  7518  7519  7520  7521  7522  7523
[4441]  7524  7525  7526  7527  7528  7529  7530  7531  7532  7533  7534  7535
[4453]  7536  7537  7538  7539  7540  7541  7542  7543  7587  7588  7589  7590
[4465]  7591  7592  7593  7594  7595  7596  7597  7598  7599  7600  7601  7602
[4477]  7603  7604  7605  7606  7607  7608  7609  7610  7611  7655  7656  7657
[4489]  7658  7659  7660  7661  7662  7663  7664  7665  7666  7667  7668  7669
[4501]  7670  7671  7672  7673  7674  7675  7676  7677  7678  7679  7680  7681
[4513]  7682  7683  7684  7685  7686  7687  7688  7689  7690  7691  7692  7693
[4525]  7694  7695  7696  7697  7698  7699  7700  7701  7702  7703  7704  7705
[4537]  7749  7750  7751  7752  7753  7754  7755  7756  7757  7758  7759  7760
[4549]  7761  7762  7763  7764  7765  7766  7767  7768  7769  7770  7771  7772
[4561]  7773  7774  7775  7776  7777  7778  7779  7780  7781  7782  7783  7784
[4573]  7785  7786  7787  7788  7789  7790  7791  7792  7793  7794  7795  7796
[4585]  7797  7798  7799  7800  7801  7845  7846  7847  7848  7849  7850  7851
[4597]  7852  7853  7854  7855  7856  7857  7858  7859  7860  7861  7862  7863
[4609]  7864  7865  7866  7867  7868  7869  7870  7871  7872  7873  7874  7875
[4621]  7876  7877  7878  7879  7880  7881  7882  7883  7884  7885  7886  7887
[4633]  7888  7889  7890  7891  7892  7893  7894  7895  7896  7897  7941  7942
[4645]  7943  7944  7945  7946  7947  7948  7949  7950  7951  7952  7953  7954
[4657]  7955  7956  7957  7958  7959  7960  7961  7962  7963  7964  7965  7966
[4669]  7967  7968  7969  7970  7971  7972  7973  7974  7975  7976  7977  7978
[4681]  7979  7980  7981  7982  7983  7984  7985  7986  7987  7988  7989  7990
[4693]  7991  7992  7993  8037  8038  8039  8040  8041  8042  8043  8044  8045
[4705]  8046  8047  8048  8049  8050  8051  8052  8053  8054  8055  8056  8057
[4717]  8058  8059  8060  8061  8062  8063  8064  8065  8066  8067  8068  8069
[4729]  8070  8071  8072  8073  8074  8075  8076  8077  8078  8079  8080  8081
[4741]  8082  8083  8084  8085  8086  8087  8088  8089  8133  8134  8135  8136
[4753]  8137  8138  8139  8140  8141  8142  8143  8144  8145  8146  8147  8148
[4765]  8149  8150  8151  8152  8153  8154  8155  8156  8157  8158  8159  8160
[4777]  8161  8162  8163  8164  8165  8166  8167  8168  8169  8170  8171  8172
[4789]  8173  8174  8175  8176  8177  8178  8179  8180  8181  8182  8183  8184
[4801]  8185  8229  8230  8231  8232  8233  8234  8235  8236  8237  8238  8239
[4813]  8240  8241  8242  8243  8244  8245  8246  8247  8248  8249  8250  8251
[4825]  8252  8253  8254  8255  8256  8257  8258  8259  8260  8261  8262  8263
[4837]  8264  8265  8266  8267  8268  8269  8270  8271  8272  8273  8274  8275
[4849]  8276  8277  8278  8279  8280  8325  8326  8327  8328  8329  8330  8331
[4861]  8332  8333  8334  8335  8336  8337  8338  8339  8340  8341  8342  8343
[4873]  8344  8345  8346  8347  8348  8349  8350  8351  8352  8353  8354  8355
[4885]  8356  8357  8358  8359  8360  8361  8362  8363  8364  8365  8366  8367
[4897]  8368  8369  8370  8371  8372  8373  8374  8375  8376  8421  8422  8423
[4909]  8424  8425  8426  8427  8428  8429  8430  8431  8432  8433  8434  8435
[4921]  8436  8437  8438  8439  8440  8441  8442  8443  8444  8445  8446  8447
[4933]  8448  8449  8450  8451  8452  8453  8454  8455  8456  8457  8458  8459
[4945]  8460  8461  8462  8463  8464  8465  8466  8467  8468  8469  8470  8471
[4957]  8472  8517  8518  8519  8520  8521  8522  8523  8524  8525  8526  8527
[4969]  8528  8529  8530  8531  8532  8533  8534  8535  8536  8537  8538  8539
[4981]  8540  8541  8542  8543  8544  8545  8546  8547  8548  8549  8550  8551
[4993]  8552  8553  8554  8555  8556  8557  8558  8559  8560  8561  8562  8563
[5005]  8564  8565  8566  8567  8568  8613  8614  8615  8616  8617  8618  8619
[5017]  8620  8621  8622  8623  8624  8625  8626  8627  8628  8629  8630  8631
[5029]  8632  8633  8634  8635  8636  8637  8638  8639  8640  8641  8642  8643
[5041]  8644  8645  8646  8647  8648  8649  8650  8651  8652  8653  8654  8655
[5053]  8656  8657  8658  8659  8660  8661  8662  8663  8664  8709  8710  8711
[5065]  8712  8713  8714  8715  8716  8717  8718  8719  8720  8721  8722  8723
[5077]  8724  8725  8726  8727  8728  8729  8730  8731  8732  8733  8734  8735
[5089]  8736  8737  8738  8739  8740  8741  8742  8743  8744  8745  8746  8747
[5101]  8748  8749  8750  8751  8752  8753  8754  8755  8756  8757  8758  8759
[5113]  8760  8805  8806  8807  8808  8809  8810  8811  8812  8813  8814  8815
[5125]  8816  8817  8818  8819  8820  8821  8822  8823  8824  8825  8826  8827
[5137]  8828  8829  8830  8831  8832  8833  8834  8835  8836  8837  8838  8839
[5149]  8840  8841  8842  8843  8844  8845  8846  8847  8848  8849  8850  8851
[5161]  8852  8853  8854  8855  8856  8901  8902  8903  8904  8905  8906  8907
[5173]  8908  8909  8910  8911  8912  8913  8914  8915  8916  8917  8918  8919
[5185]  8920  8921  8922  8923  8924  8925  8926  8927  8928  8929  8930  8931
[5197]  8932  8933  8934  8935  8936  8937  8938  8939  8940  8941  8942  8943
[5209]  8944  8945  8946  8947  8948  8949  8950  8951  8952  8997  8998  8999
[5221]  9000  9001  9002  9003  9004  9005  9006  9007  9008  9009  9010  9011
[5233]  9012  9013  9014  9015  9016  9017  9018  9019  9020  9021  9022  9023
[5245]  9024  9025  9026  9027  9028  9029  9030  9031  9032  9033  9034  9035
[5257]  9036  9037  9038  9039  9040  9041  9042  9043  9044  9045  9046  9047
[5269]  9048  9093  9094  9095  9096  9097  9098  9099  9100  9101  9102  9103
[5281]  9104  9105  9106  9107  9108  9109  9110  9111  9112  9113  9114  9115
[5293]  9116  9117  9118  9119  9120  9121  9122  9123  9124  9125  9126  9127
[5305]  9128  9129  9130  9131  9132  9133  9134  9135  9136  9137  9138  9139
[5317]  9140  9141  9142  9143  9144  9190  9191  9192  9193  9194  9195  9196
[5329]  9197  9198  9199  9200  9201  9202  9203  9204  9205  9206  9207  9208
[5341]  9209  9210  9211  9212  9213  9214  9215  9216  9217  9218  9219  9220
[5353]  9221  9222  9223  9224  9225  9226  9227  9228  9229  9230  9231  9232
[5365]  9233  9234  9235  9236  9237  9238  9239  9286  9287  9288  9289  9290
[5377]  9291  9292  9293  9294  9295  9296  9297  9298  9299  9300  9301  9302
[5389]  9303  9304  9305  9306  9307  9308  9309  9310  9311  9312  9313  9314
[5401]  9315  9316  9317  9318  9319  9320  9321  9322  9323  9324  9325  9326
[5413]  9327  9328  9329  9330  9331  9332  9333  9334  9335  9382  9383  9384
[5425]  9385  9386  9387  9388  9389  9390  9391  9392  9393  9394  9395  9396
[5437]  9397  9398  9399  9400  9401  9402  9403  9404  9405  9406  9407  9408
[5449]  9409  9410  9411  9412  9413  9414  9415  9416  9417  9418  9419  9420
[5461]  9421  9422  9423  9424  9425  9426  9427  9428  9429  9430  9431  9478
[5473]  9479  9480  9481  9482  9483  9484  9485  9486  9487  9488  9489  9490
[5485]  9491  9492  9493  9494  9495  9496  9497  9498  9499  9500  9501  9502
[5497]  9503  9504  9505  9506  9507  9508  9509  9510  9511  9512  9513  9514
[5509]  9515  9516  9517  9518  9519  9520  9521  9522  9523  9524  9525  9526
[5521]  9527  9574  9575  9576  9577  9578  9579  9580  9581  9582  9583  9584
[5533]  9585  9586  9587  9588  9589  9590  9591  9592  9593  9594  9595  9596
[5545]  9597  9598  9599  9600  9601  9602  9603  9604  9605  9606  9607  9608
[5557]  9609  9610  9611  9612  9613  9614  9615  9616  9617  9618  9619  9620
[5569]  9621  9622  9623  9670  9671  9672  9673  9674  9675  9676  9677  9678
[5581]  9679  9680  9681  9682  9683  9684  9685  9686  9687  9688  9689  9690
[5593]  9691  9692  9693  9694  9695  9696  9697  9698  9699  9700  9701  9702
[5605]  9703  9704  9705  9706  9707  9708  9709  9710  9711  9712  9713  9714
[5617]  9715  9716  9717  9718  9719  9766  9767  9768  9769  9770  9771  9772
[5629]  9773  9774  9775  9776  9777  9778  9779  9780  9781  9782  9783  9784
[5641]  9785  9786  9787  9788  9789  9790  9791  9792  9793  9794  9795  9796
[5653]  9797  9798  9799  9800  9801  9802  9803  9804  9805  9806  9807  9808
[5665]  9809  9810  9811  9812  9813  9814  9815  9862  9863  9864  9865  9866
[5677]  9867  9868  9869  9870  9871  9872  9873  9874  9875  9876  9877  9878
[5689]  9879  9880  9881  9882  9883  9884  9885  9886  9887  9888  9889  9890
[5701]  9891  9892  9893  9894  9895  9896  9897  9898  9899  9900  9901  9902
[5713]  9903  9904  9905  9906  9907  9908  9909  9910  9911  9958  9959  9960
[5725]  9961  9962  9963  9964  9965  9966  9967  9968  9969  9970  9971  9972
[5737]  9973  9974  9975  9976  9977  9978  9979  9980  9981  9982  9983  9984
[5749]  9985  9986  9987  9988  9989  9990  9991  9992  9993  9994  9995  9996
[5761]  9997  9998  9999 10000 10001 10002 10003 10004 10005 10006 10007 10054
[5773] 10055 10056 10057 10058 10059 10060 10061 10062 10063 10064 10065 10066
[5785] 10067 10068 10069 10070 10071 10072 10073 10074 10075 10076 10077 10078
[5797] 10079 10080 10081 10082 10083 10084 10085 10086 10087 10088 10089 10090
[5809] 10091 10092 10093 10094 10095 10096 10097 10098 10099 10100 10101 10102
[5821] 10103 10150 10151 10152 10153 10154 10155 10156 10157 10158 10159 10160
[5833] 10161 10162 10163 10164 10165 10166 10167 10168 10169 10170 10171 10172
[5845] 10173 10174 10175 10176 10177 10178 10179 10180 10181 10182 10183 10184
[5857] 10185 10186 10187 10188 10189 10190 10191 10192 10193 10194 10195 10196
[5869] 10197 10198 10246 10247 10248 10249 10250 10251 10252 10253 10254 10255
[5881] 10256 10257 10258 10259 10260 10261 10262 10263 10264 10265 10266 10267
[5893] 10268 10269 10270 10271 10272 10273 10274 10275 10276 10277 10278 10279
[5905] 10280 10281 10282 10283 10284 10285 10286 10287 10288 10289 10290 10291
[5917] 10292 10293 10294 10342 10343 10344 10345 10346 10347 10348 10349 10350
[5929] 10351 10352 10353 10354 10355 10356 10357 10358 10359 10360 10361 10362
[5941] 10363 10364 10365 10366 10367 10368 10369 10370 10371 10372 10373 10374
[5953] 10375 10376 10377 10378 10379 10380 10381 10382 10383 10384 10385 10386
[5965] 10387 10388 10389 10390 10438 10439 10440 10441 10442 10443 10444 10445
[5977] 10446 10447 10448 10449 10450 10451 10452 10453 10454 10455 10456 10457
[5989] 10458 10459 10460 10461 10462 10463 10464 10465 10466 10467 10468 10469
[6001] 10470 10471 10472 10473 10474 10475 10476 10477 10478 10479 10480 10481
[6013] 10482 10483 10484 10485 10486 10534 10535 10536 10537 10538 10539 10540
[6025] 10541 10542 10543 10544 10545 10546 10547 10548 10549 10550 10551 10552
[6037] 10553 10554 10555 10556 10557 10558 10559 10560 10561 10562 10563 10564
[6049] 10565 10566 10567 10568 10569 10570 10571 10572 10573 10574 10575 10576
[6061] 10577 10578 10579 10580 10581 10582 10630 10631 10632 10633 10634 10635
[6073] 10636 10637 10638 10639 10640 10641 10642 10643 10644 10645 10646 10647
[6085] 10648 10649 10650 10651 10652 10653 10654 10655 10656 10657 10658 10659
[6097] 10660 10661 10662 10663 10664 10665 10666 10667 10668 10669 10670 10671
[6109] 10672 10673 10674 10675 10676 10677 10678 10726 10727 10728 10729 10730
[6121] 10731 10732 10733 10734 10735 10736 10737 10738 10739 10740 10741 10742
[6133] 10743 10744 10745 10746 10747 10748 10749 10750 10751 10752 10753 10754
[6145] 10755 10756 10757 10758 10759 10760 10761 10762 10763 10764 10765 10766
[6157] 10767 10768 10769 10770 10771 10772 10773 10774 10822 10823 10824 10825
[6169] 10826 10827 10828 10829 10830 10831 10832 10833 10834 10835 10836 10837
[6181] 10838 10839 10840 10841 10842 10843 10844 10845 10846 10847 10848 10849
[6193] 10850 10851 10852 10853 10854 10855 10856 10857 10858 10859 10860 10861
[6205] 10862 10863 10864 10865 10866 10867 10868 10869 10870 10919 10920 10921
[6217] 10922 10923 10924 10925 10926 10927 10928 10929 10930 10931 10932 10933
[6229] 10934 10935 10936 10937 10938 10939 10940 10941 10942 10943 10944 10945
[6241] 10946 10947 10948 10949 10950 10951 10952 10953 10954 10955 10956 10957
[6253] 10958 10959 10960 10961 10962 10963 10964 10965 10966 11015 11016 11017
[6265] 11018 11019 11020 11021 11022 11023 11024 11025 11026 11027 11028 11029
[6277] 11030 11031 11032 11033 11034 11035 11036 11037 11038 11039 11040 11041
[6289] 11042 11043 11044 11045 11046 11047 11048 11049 11050 11051 11052 11053
[6301] 11054 11055 11056 11057 11058 11059 11060 11061 11111 11112 11113 11114
[6313] 11115 11116 11117 11118 11119 11120 11121 11122 11123 11124 11125 11126
[6325] 11127 11128 11129 11130 11131 11132 11133 11134 11135 11136 11137 11138
[6337] 11139 11140 11141 11142 11143 11144 11145 11146 11147 11148 11149 11150
[6349] 11151 11152 11153 11154 11155 11156 11157 11207 11208 11209 11210 11211
[6361] 11212 11213 11214 11215 11216 11217 11218 11219 11220 11221 11222 11223
[6373] 11224 11225 11226 11227 11228 11229 11230 11231 11232 11233 11234 11235
[6385] 11236 11237 11238 11239 11240 11241 11242 11243 11244 11245 11246 11247
[6397] 11248 11249 11250 11251 11252 11253 11303 11304 11305 11306 11307 11308
[6409] 11309 11310 11311 11312 11313 11314 11315 11316 11317 11318 11319 11320
[6421] 11321 11322 11323 11324 11325 11326 11327 11328 11329 11330 11331 11332
[6433] 11333 11334 11335 11336 11337 11338 11339 11340 11341 11342 11343 11344
[6445] 11345 11346 11347 11348 11349 11399 11400 11401 11402 11403 11404 11405
[6457] 11406 11407 11408 11409 11410 11411 11412 11413 11414 11415 11416 11417
[6469] 11418 11419 11420 11421 11422 11423 11424 11425 11426 11427 11428 11429
[6481] 11430 11431 11432 11433 11434 11435 11436 11437 11438 11439 11440 11441
[6493] 11442 11443 11444 11445 11495 11496 11497 11498 11499 11500 11501 11502
[6505] 11503 11504 11505 11506 11507 11508 11509 11510 11511 11512 11513 11514
[6517] 11515 11516 11517 11518 11519 11520 11521 11522 11523 11524 11525 11526
[6529] 11527 11528 11529 11530 11531 11532 11533 11534 11535 11536 11537 11538
[6541] 11539 11540 11541 11591 11592 11593 11594 11595 11596 11597 11598 11599
[6553] 11600 11601 11602 11603 11604 11605 11606 11607 11608 11609 11610 11611
[6565] 11612 11613 11614 11615 11616 11617 11618 11619 11620 11621 11622 11623
[6577] 11624 11625 11626 11627 11628 11629 11630 11631 11632 11633 11634 11635
[6589] 11636 11637 11687 11688 11689 11690 11691 11692 11693 11694 11695 11696
[6601] 11697 11698 11699 11700 11701 11702 11703 11704 11705 11706 11707 11708
[6613] 11709 11710 11711 11712 11713 11714 11715 11716 11717 11718 11719 11720
[6625] 11721 11722 11723 11724 11725 11726 11727 11728 11729 11730 11731 11732
[6637] 11733 11783 11784 11785 11786 11787 11788 11789 11790 11791 11792 11793
[6649] 11794 11795 11796 11797 11798 11799 11800 11801 11802 11803 11804 11805
[6661] 11806 11807 11808 11809 11810 11811 11812 11813 11814 11815 11816 11817
[6673] 11818 11819 11820 11821 11822 11823 11824 11825 11826 11827 11828 11829
[6685] 11879 11880 11881 11882 11883 11884 11885 11886 11887 11888 11889 11890
[6697] 11891 11892 11893 11894 11895 11896 11897 11898 11899 11900 11901 11902
[6709] 11903 11904 11905 11906 11907 11908 11909 11910 11911 11912 11913 11914
[6721] 11915 11916 11917 11918 11919 11920 11921 11922 11923 11924 11925 11975
[6733] 11976 11977 11978 11979 11980 11981 11982 11983 11984 11985 11986 11987
[6745] 11988 11989 11990 11991 11992 11993 11994 11995 11996 11997 11998 11999
[6757] 12000 12001 12002 12003 12004 12005 12006 12007 12008 12009 12010 12011
[6769] 12012 12013 12014 12015 12016 12017 12018 12019 12020 12071 12072 12073
[6781] 12074 12075 12076 12077 12078 12079 12080 12081 12082 12083 12084 12085
[6793] 12086 12087 12088 12089 12090 12091 12092 12093 12094 12095 12096 12097
[6805] 12098 12099 12100 12101 12102 12103 12104 12105 12106 12107 12108 12109
[6817] 12110 12111 12112 12113 12114 12115 12116 12167 12168 12169 12170 12171
[6829] 12172 12173 12174 12175 12176 12177 12178 12179 12180 12181 12182 12183
[6841] 12184 12185 12186 12187 12188 12189 12190 12191 12192 12193 12194 12195
[6853] 12196 12197 12198 12199 12200 12201 12202 12203 12204 12205 12206 12207
[6865] 12208 12209 12210 12211 12212 12263 12264 12265 12266 12267 12268 12269
[6877] 12270 12271 12272 12273 12274 12275 12276 12277 12278 12279 12280 12281
[6889] 12282 12283 12284 12285 12286 12287 12288 12289 12290 12291 12292 12293
[6901] 12294 12295 12296 12297 12298 12299 12300 12301 12302 12303 12304 12305
[6913] 12306 12307 12308 12359 12360 12361 12362 12363 12364 12365 12366 12367
[6925] 12368 12369 12370 12371 12372 12373 12374 12375 12376 12377 12378 12379
[6937] 12380 12381 12382 12383 12384 12385 12386 12387 12388 12389 12390 12391
[6949] 12392 12393 12394 12395 12396 12397 12398 12399 12400 12401 12402 12403
[6961] 12404 12456 12457 12458 12459 12460 12461 12462 12463 12464 12465 12466
[6973] 12467 12468 12469 12470 12471 12472 12473 12474 12475 12476 12477 12478
[6985] 12479 12480 12481 12482 12483 12484 12485 12486 12487 12488 12489 12490
[6997] 12491 12492 12493 12494 12495 12496 12497 12498 12499 12500 12552 12553
[7009] 12554 12555 12556 12557 12558 12559 12560 12561 12562 12563 12564 12565
[7021] 12566 12567 12568 12569 12570 12571 12572 12573 12574 12575 12576 12577
[7033] 12578 12579 12580 12581 12582 12583 12584 12585 12586 12587 12588 12589
[7045] 12590 12591 12592 12593 12594 12595 12596 12648 12649 12650 12651 12652
[7057] 12653 12654 12655 12656 12657 12658 12659 12660 12661 12662 12663 12664
[7069] 12665 12666 12667 12668 12669 12670 12671 12672 12673 12674 12675 12676
[7081] 12677 12678 12679 12680 12681 12682 12683 12684 12685 12686 12687 12688
[7093] 12689 12690 12691 12692 12744 12745 12746 12747 12748 12749 12750 12751
[7105] 12752 12753 12754 12755 12756 12757 12758 12759 12760 12761 12762 12763
[7117] 12764 12765 12766 12767 12768 12769 12770 12771 12772 12773 12774 12775
[7129] 12776 12777 12778 12779 12780 12781 12782 12783 12784 12785 12786 12787
[7141] 12788 12840 12841 12842 12843 12844 12845 12846 12847 12848 12849 12850
[7153] 12851 12852 12853 12854 12855 12856 12857 12858 12859 12860 12861 12862
[7165] 12863 12864 12865 12866 12867 12868 12869 12870 12871 12872 12873 12874
[7177] 12875 12876 12877 12878 12879 12880 12881 12882 12883 12884 12936 12937
[7189] 12938 12939 12940 12941 12942 12943 12944 12945 12946 12947 12948 12949
[7201] 12950 12951 12952 12953 12954 12955 12956 12957 12958 12959 12960 12961
[7213] 12962 12963 12964 12965 12966 12967 12968 12969 12970 12971 12972 12973
[7225] 12974 12975 12976 12977 12978 12979 13032 13033 13034 13035 13036 13037
[7237] 13038 13039 13040 13041 13042 13043 13044 13045 13046 13047 13048 13049
[7249] 13050 13051 13052 13053 13054 13055 13056 13057 13058 13059 13060 13061
[7261] 13062 13063 13064 13065 13066 13067 13068 13069 13070 13071 13072 13073
[7273] 13074 13075 13128 13129 13130 13131 13132 13133 13134 13135 13136 13137
[7285] 13138 13139 13140 13141 13142 13143 13144 13145 13146 13147 13148 13149
[7297] 13150 13151 13152 13153 13154 13155 13156 13157 13158 13159 13160 13161
[7309] 13162 13163 13164 13165 13166 13167 13168 13169 13170 13171 13224 13225
[7321] 13226 13227 13228 13229 13230 13231 13232 13233 13234 13235 13236 13237
[7333] 13238 13239 13240 13241 13242 13243 13244 13245 13246 13247 13248 13249
[7345] 13250 13251 13252 13253 13254 13255 13256 13257 13258 13259 13260 13261
[7357] 13262 13263 13264 13265 13266 13267 13320 13321 13322 13323 13324 13325
[7369] 13326 13327 13328 13329 13330 13331 13332 13333 13334 13335 13336 13337
[7381] 13338 13339 13340 13341 13342 13343 13344 13345 13346 13347 13348 13349
[7393] 13350 13351 13352 13353 13354 13355 13356 13357 13358 13359 13360 13361
[7405] 13362 13363 13416 13417 13418 13419 13420 13421 13422 13423 13424 13425
[7417] 13426 13427 13428 13429 13430 13431 13432 13433 13434 13435 13436 13437
[7429] 13438 13439 13440 13441 13442 13443 13444 13445 13446 13447 13448 13449
[7441] 13450 13451 13452 13453 13454 13455 13456 13457 13458 13459 13512 13513
[7453] 13514 13515 13516 13517 13518 13519 13520 13521 13522 13523 13524 13525
[7465] 13526 13527 13528 13529 13530 13531 13532 13533 13534 13535 13536 13537
[7477] 13538 13539 13540 13541 13542 13543 13544 13545 13546 13547 13548 13549
[7489] 13550 13551 13552 13553 13554 13555 13608 13609 13610 13611 13612 13613
[7501] 13614 13615 13616 13617 13618 13619 13620 13621 13622 13623 13624 13625
[7513] 13626 13627 13628 13629 13630 13631 13632 13633 13634 13635 13636 13637
[7525] 13638 13639 13640 13641 13642 13643 13644 13645 13646 13647 13648 13649
[7537] 13650 13651 13704 13705 13706 13707 13708 13709 13710 13711 13712 13713
[7549] 13714 13715 13716 13717 13718 13719 13720 13721 13722 13723 13724 13725
[7561] 13726 13727 13728 13729 13730 13731 13732 13733 13734 13735 13736 13737
[7573] 13738 13739 13740 13741 13742 13743 13744 13745 13746 13747 13800 13801
[7585] 13802 13803 13804 13805 13806 13807 13808 13809 13810 13811 13812 13813
[7597] 13814 13815 13816 13817 13818 13819 13820 13821 13822 13823 13824 13825
[7609] 13826 13827 13828 13829 13830 13831 13832 13833 13834 13835 13836 13837
[7621] 13838 13839 13840 13841 13842 13843 13897 13898 13899 13900 13901 13902
[7633] 13903 13904 13905 13906 13907 13908 13909 13910 13911 13912 13913 13914
[7645] 13915 13916 13917 13918 13919 13920 13921 13922 13923 13924 13925 13926
[7657] 13927 13928 13929 13930 13931 13932 13933 13934 13935 13936 13937 13938
[7669] 13993 13994 13995 13996 13997 13998 13999 14000 14001 14002 14003 14004
[7681] 14005 14006 14007 14008 14009 14010 14011 14012 14013 14014 14015 14016
[7693] 14017 14018 14019 14020 14021 14022 14023 14024 14025 14026 14027 14028
[7705] 14029 14030 14031 14032 14033 14034 14089 14090 14091 14092 14093 14094
[7717] 14095 14096 14097 14098 14099 14100 14101 14102 14103 14104 14105 14106
[7729] 14107 14108 14109 14110 14111 14112 14113 14114 14115 14116 14117 14118
[7741] 14119 14120 14121 14122 14123 14124 14125 14126 14127 14128 14129 14130
[7753] 14185 14186 14187 14188 14189 14190 14191 14192 14193 14194 14195 14196
[7765] 14197 14198 14199 14200 14201 14202 14203 14204 14205 14206 14207 14208
[7777] 14209 14210 14211 14212 14213 14214 14215 14216 14217 14218 14219 14220
[7789] 14221 14222 14223 14224 14225 14226 14281 14282 14283 14284 14285 14286
[7801] 14287 14288 14289 14290 14291 14292 14293 14294 14295 14296 14297 14298
[7813] 14299 14300 14301 14302 14303 14304 14305 14306 14307 14308 14309 14310
[7825] 14311 14312 14313 14314 14315 14316 14317 14318 14319 14320 14321 14322
[7837] 14377 14378 14379 14380 14381 14382 14383 14384 14385 14386 14387 14388
[7849] 14389 14390 14391 14392 14393 14394 14395 14396 14397 14398 14399 14400
[7861] 14401 14402 14403 14404 14405 14406 14407 14408 14409 14410 14411 14412
[7873] 14413 14414 14415 14416 14417 14418 14473 14474 14475 14476 14477 14478
[7885] 14479 14480 14481 14482 14483 14484 14485 14486 14487 14488 14489 14490
[7897] 14491 14492 14493 14494 14495 14496 14497 14498 14499 14500 14501 14502
[7909] 14503 14504 14505 14506 14507 14508 14509 14510 14511 14512 14513 14514
[7921] 14569 14570 14571 14572 14573 14574 14575 14576 14577 14578 14579 14580
[7933] 14581 14582 14583 14584 14585 14586 14587 14588 14589 14590 14591 14592
[7945] 14593 14594 14595 14596 14597 14598 14599 14600 14601 14602 14603 14604
[7957] 14605 14606 14607 14608 14609 14610 14665 14666 14667 14668 14669 14670
[7969] 14671 14672 14673 14674 14675 14676 14677 14678 14679 14680 14681 14682
[7981] 14683 14684 14685 14686 14687 14688 14689 14690 14691 14692 14693 14694
[7993] 14695 14696 14697 14698 14699 14700 14701 14702 14703 14704 14705 14706
[8005] 14761 14762 14763 14764 14765 14766 14767 14768 14769 14770 14771 14772
[8017] 14773 14774 14775 14776 14777 14778 14779 14780 14781 14782 14783 14784
[8029] 14785 14786 14787 14788 14789 14790 14791 14792 14793 14794 14795 14796
[8041] 14797 14798 14799 14800 14801 14802 14857 14858 14859 14860 14861 14862
[8053] 14863 14864 14865 14866 14867 14868 14869 14870 14871 14872 14873 14874
[8065] 14875 14876 14877 14878 14879 14880 14881 14882 14883 14884 14885 14886
[8077] 14887 14888 14889 14890 14891 14892 14893 14894 14895 14896 14897 14898
[8089] 14953 14954 14955 14956 14957 14958 14959 14960 14961 14962 14963 14964
[8101] 14965 14966 14967 14968
> which(cmn.month$daynight)
   [1]     1     2     3     4     5     6     7     8     9    10    11    12
  [13]    13    14    15    16    34    35    36    37    38    39    40    41
  [25]    42    43    44    45    46    47    48    49    50    51    52    71
  [37]    72    73    74    75    76    77    78    79    80    81    82    83
  [49]    84    85    86    87    88    89    90    91    92    93    94    95
  [61]    96    97    98    99   100   101   102   103   104   105   106   107
  [73]   108   109   110   111   112   113   114   115   116   117   118   119
  [85]   120   121   122   123   124   125   126   161   162   163   164   165
  [97]   166   167   168   169   170   171   172   173   174   175   176   177
 [109]   178   179   180   181   182   183   184   185   186   187   188   189
 [121]   190   191   192   193   194   195   196   197   198   199   200   201
 [133]   202   203   204   205   206   207   208   209   210   211   212   213
 [145]   214   215   216   217   237   238   239   240   241   242   243   244
 [157]   245   246   247   248   249   250   251   252   253   254   255   256
 [169]   257   258   259   260   261   262   263   264   265   266   267   268
 [181]   269   270   271   288   289   290   291   292   293   294   295   296
 [193]   297   298   299   300   301   302   303   304   305   306   307   308
 [205]   309   310   311   312   313   314   315   316   317   318   319   320
 [217]   321   322   323   345   346   347   348   349   350   351   352   353
 [229]   354   355   356   357   358   359   360   361   362   363   364   365
 [241]   366   367   368   369   370   371   372   373   374   375   376   377
 [253]   378   379   380   381   382   383   384   385   386   387   388   389
 [265]   390   391   392   393   394   395   396   397   398   399   400   401
 [277]   441   442   443   444   445   446   447   448   449   450   451   452
 [289]   453   454   455   456   457   458   459   460   461   462   463   464
 [301]   465   466   467   468   469   470   471   472   473   474   475   476
 [313]   477   478   479   480   481   482   483   484   485   486   487   488
 [325]   489   490   491   492   493   494   495   496   497   537   538   539
 [337]   540   541   542   543   544   545   546   547   548   549   550   551
 [349]   552   553   554   555   556   557   558   559   560   561   562   563
 [361]   564   565   566   567   568   569   570   571   572   573   574   575
 [373]   576   577   578   579   580   581   582   583   584   585   586   587
 [385]   588   589   590   623   624   625   626   627   628   629   630   631
 [397]   632   633   634   635   636   637   638   639   640   641   642   643
 [409]   644   645   646   647   648   649   678   679   680   681   682   683
 [421]   684   685   686   687   688   689   690   691   692   693   694   695
 [433]   696   728   729   730   731   732   733   734   735   736   737   738
 [445]   739   740   741   742   743   744   745   746   747   748   749   750
 [457]   751   752   753   754   755   756   757   758   759   760   761   762
 [469]   763   797   798   799   800   801   802   803   804   805   806   807
 [481]   808   809   810   811   812   813   814   815   816   817   818   819
 [493]   820   821   822   823   824   825   826   827   828   829   830   858
 [505]   859   860   861   862   863   864   865   866   867   868   869   870
 [517]   871   872   873   874   875   876   877   878   879   880   881   882
 [529]   883   884   885   886   887   888   889   918   919   920   921   922
 [541]   923   924   925   926   927   928   929   930   931   932   933   934
 [553]   935   936   937   938   939   940   941   942   943   944   945   946
 [565]   947   948   949   950   951   952   953   954   955   956   957   958
 [577]   959   960   961   962   963   964   965   966   967   968   998   999
 [589]  1000  1001  1002  1003  1004  1005  1006  1007  1008  1009  1010  1011
 [601]  1012  1013  1014  1015  1016  1017  1018  1019  1020  1021  1022  1023
 [613]  1024  1025  1026  1027  1028  1029  1030  1031  1032  1033  1034  1035
 [625]  1036  1037  1038  1039  1040  1041  1042  1043  1044  1045  1073  1074
 [637]  1075  1076  1077  1078  1079  1080  1081  1082  1083  1084  1085  1086
 [649]  1087  1088  1089  1090  1091  1092  1093  1094  1095  1096  1097  1098
 [661]  1099  1100  1101  1102  1103  1104  1105  1106  1107  1108  1109  1110
 [673]  1111  1112  1113  1114  1115  1116  1117  1118  1119  1120  1152  1153
 [685]  1154  1155  1156  1157  1158  1159  1160  1161  1162  1163  1164  1165
 [697]  1166  1167  1168  1169  1170  1171  1172  1173  1174  1175  1176  1177
 [709]  1178  1179  1180  1181  1182  1183  1184  1185  1186  1187  1188  1189
 [721]  1190  1191  1192  1193  1194  1195  1196  1197  1198  1199  1200  1201
 [733]  1202  1203  1204  1205  1206  1207  1208  1209  1235  1236  1237  1238
 [745]  1239  1240  1241  1242  1243  1244  1245  1246  1247  1248  1249  1250
 [757]  1251  1252  1253  1254  1255  1256  1257  1258  1259  1260  1261  1262
 [769]  1263  1264  1265  1266  1267  1268  1269  1270  1271  1272  1273  1274
 [781]  1275  1276  1277  1278  1279  1280  1281  1282  1283  1284  1285  1286
 [793]  1287  1288  1289  1290  1291  1292  1331  1332  1333  1334  1335  1336
 [805]  1337  1338  1339  1340  1341  1342  1343  1344  1345  1346  1347  1348
 [817]  1349  1350  1351  1352  1353  1354  1355  1356  1357  1358  1359  1360
 [829]  1361  1362  1363  1364  1365  1366  1367  1368  1369  1370  1371  1372
 [841]  1373  1374  1375  1376  1377  1378  1379  1380  1381  1382  1383  1384
 [853]  1385  1386  1387  1388  1427  1428  1429  1430  1431  1432  1433  1434
 [865]  1435  1436  1437  1438  1439  1440  1441  1442  1443  1444  1445  1446
 [877]  1447  1448  1449  1450  1451  1452  1453  1454  1455  1456  1457  1458
 [889]  1459  1460  1461  1462  1463  1464  1465  1466  1467  1468  1469  1470
 [901]  1471  1472  1473  1474  1475  1476  1477  1478  1479  1480  1481  1482
 [913]  1483  1484  1523  1524  1525  1526  1527  1528  1529  1530  1531  1532
 [925]  1533  1534  1535  1536  1537  1538  1539  1540  1541  1542  1543  1544
 [937]  1545  1546  1547  1548  1549  1550  1551  1552  1553  1554  1555  1556
 [949]  1557  1558  1559  1560  1594  1595  1596  1597  1598  1599  1600  1601
 [961]  1602  1603  1604  1605  1606  1607  1608  1609  1610  1611  1612  1613
 [973]  1614  1615  1616  1617  1618  1619  1620  1621  1622  1623  1624  1625
 [985]  1626  1627  1628  1629  1630  1631  1632  1633  1634  1635  1636  1637
 [997]  1638  1639  1640  1641  1642  1643  1644  1645  1646  1647  1648  1649
[1009]  1650  1651  1690  1691  1692  1693  1694  1695  1696  1697  1698  1699
[1021]  1700  1701  1702  1703  1704  1705  1706  1707  1708  1709  1710  1711
[1033]  1712  1713  1714  1715  1716  1717  1718  1719  1720  1721  1722  1723
[1045]  1724  1725  1726  1727  1728  1729  1730  1731  1732  1733  1734  1735
[1057]  1736  1737  1738  1739  1740  1741  1742  1743  1744  1745  1746  1780
[1069]  1781  1782  1783  1784  1785  1786  1787  1788  1789  1790  1791  1792
[1081]  1793  1794  1795  1796  1797  1798  1799  1800  1801  1802  1803  1804
[1093]  1805  1806  1807  1808  1809  1810  1811  1812  1813  1814  1815  1854
[1105]  1855  1856  1857  1858  1859  1860  1861  1862  1863  1864  1865  1866
[1117]  1867  1868  1869  1870  1871  1872  1873  1874  1875  1876  1877  1878
[1129]  1879  1880  1881  1882  1883  1884  1885  1886  1887  1888  1889  1890
[1141]  1891  1892  1893  1894  1895  1896  1897  1898  1899  1900  1901  1902
[1153]  1903  1904  1905  1906  1907  1908  1909  1910  1911  1950  1951  1952
[1165]  1953  1954  1955  1956  1957  1958  1959  1960  1961  1962  1963  1964
[1177]  1965  1966  1967  1968  1969  1970  1971  1972  1973  1974  1975  1976
[1189]  1977  1978  1979  1980  1981  1982  1983  1984  1985  1986  1987  1988
[1201]  1989  1990  1991  1992  1993  1994  1995  1996  1997  1998  1999  2000
[1213]  2001  2002  2003  2004  2005  2006  2007  2046  2047  2048  2049  2050
[1225]  2051  2052  2053  2054  2055  2056  2057  2058  2059  2060  2061  2062
[1237]  2063  2064  2065  2066  2067  2068  2069  2070  2071  2072  2073  2074
[1249]  2075  2076  2077  2078  2079  2080  2081  2082  2083  2084  2085  2086
[1261]  2087  2088  2124  2125  2126  2127  2128  2129  2130  2131  2132  2133
[1273]  2134  2135  2136  2137  2138  2139  2140  2141  2142  2143  2144  2145
[1285]  2146  2147  2148  2149  2150  2151  2152  2153  2154  2155  2156  2157
[1297]  2158  2159  2160  2161  2162  2163  2164  2165  2166  2167  2168  2169
[1309]  2170  2171  2172  2173  2174  2175  2176  2177  2178  2179  2180  2181
[1321]  2220  2221  2222  2223  2224  2225  2226  2227  2228  2229  2230  2231
[1333]  2232  2233  2234  2235  2236  2237  2238  2239  2240  2241  2242  2243
[1345]  2244  2245  2246  2247  2248  2249  2250  2251  2252  2253  2254  2255
[1357]  2256  2257  2258  2259  2260  2261  2262  2263  2264  2265  2266  2267
[1369]  2268  2269  2270  2271  2272  2273  2274  2275  2276  2277  2316  2317
[1381]  2318  2319  2320  2321  2322  2323  2324  2325  2326  2327  2328  2329
[1393]  2330  2331  2332  2333  2334  2335  2336  2337  2338  2339  2340  2341
[1405]  2342  2343  2344  2345  2346  2347  2348  2349  2350  2351  2352  2353
[1417]  2354  2355  2356  2357  2358  2359  2360  2361  2362  2363  2364  2365
[1429]  2366  2367  2368  2369  2370  2371  2372  2373  2412  2413  2414  2415
[1441]  2416  2417  2418  2419  2420  2421  2422  2423  2424  2425  2426  2427
[1453]  2428  2429  2430  2431  2432  2433  2434  2435  2436  2437  2438  2439
[1465]  2440  2441  2442  2443  2444  2445  2446  2447  2448  2449  2450  2451
[1477]  2452  2453  2454  2455  2456  2457  2458  2459  2460  2461  2462  2463
[1489]  2464  2465  2466  2467  2468  2469  2505  2506  2507  2508  2509  2510
[1501]  2511  2512  2513  2514  2515  2516  2517  2518  2519  2520  2521  2522
[1513]  2523  2524  2525  2526  2527  2528  2529  2530  2531  2532  2533  2534
[1525]  2535  2536  2537  2538  2539  2540  2541  2542  2543  2544  2545  2546
[1537]  2547  2548  2549  2550  2551  2552  2553  2578  2579  2580  2581  2582
[1549]  2583  2584  2585  2586  2587  2588  2589  2590  2591  2592  2593  2594
[1561]  2595  2596  2597  2598  2599  2600  2601  2602  2603  2604  2605  2606
[1573]  2607  2608  2609  2610  2611  2612  2613  2614  2615  2616  2617  2618
[1585]  2619  2620  2621  2622  2623  2662  2663  2664  2665  2666  2667  2668
[1597]  2669  2670  2671  2672  2673  2674  2675  2676  2677  2678  2679  2680
[1609]  2681  2682  2683  2684  2685  2686  2687  2688  2689  2690  2691  2692
[1621]  2693  2694  2695  2696  2697  2698  2699  2700  2701  2702  2703  2704
[1633]  2705  2706  2707  2708  2709  2710  2711  2712  2713  2714  2715  2716
[1645]  2717  2718  2719  2758  2759  2760  2761  2762  2763  2764  2765  2766
[1657]  2767  2768  2769  2770  2771  2772  2773  2774  2775  2776  2777  2778
[1669]  2779  2780  2781  2782  2783  2784  2785  2786  2787  2788  2789  2790
[1681]  2791  2792  2793  2794  2795  2796  2797  2798  2799  2800  2801  2802
[1693]  2803  2804  2805  2806  2807  2829  2830  2831  2832  2833  2834  2835
[1705]  2836  2837  2838  2839  2840  2841  2842  2843  2844  2845  2846  2847
[1717]  2848  2849  2850  2851  2852  2853  2854  2855  2856  2857  2858  2859
[1729]  2860  2861  2862  2863  2864  2865  2866  2867  2868  2869  2870  2871
[1741]  2872  2873  2911  2912  2913  2914  2915  2916  2917  2918  2919  2920
[1753]  2921  2922  2923  2924  2925  2926  2927  2928  2929  2930  2931  2932
[1765]  2933  2934  2935  2936  2937  2960  2961  2962  2963  2964  2965  2966
[1777]  2967  2968  2969  2970  2971  2972  2973  2974  2975  2976  2977  2978
[1789]  2979  2980  2981  2982  2983  2984  2985  2986  2987  2988  2989  2990
[1801]  2991  2992  2993  2994  2995  2996  2997  2998  2999  3000  3001  3002
[1813]  3003  3004  3005  3006  3007  3008  3009  3010  3011  3012  3050  3051
[1825]  3052  3053  3054  3055  3056  3057  3058  3059  3060  3061  3062  3063
[1837]  3064  3065  3066  3067  3068  3069  3070  3071  3072  3073  3074  3075
[1849]  3076  3077  3078  3079  3080  3081  3082  3083  3084  3085  3086  3087
[1861]  3088  3089  3090  3091  3092  3093  3094  3095  3096  3097  3098  3099
[1873]  3100  3101  3102  3103  3104  3105  3106  3107  3108  3146  3147  3148
[1885]  3149  3150  3151  3152  3153  3154  3155  3156  3157  3158  3159  3160
[1897]  3161  3162  3163  3164  3165  3166  3167  3168  3169  3170  3171  3172
[1909]  3173  3174  3175  3176  3177  3178  3179  3180  3181  3182  3183  3184
[1921]  3185  3186  3187  3188  3189  3190  3191  3192  3193  3194  3195  3196
[1933]  3197  3198  3199  3200  3201  3202  3203  3204  3242  3243  3244  3245
[1945]  3246  3247  3248  3249  3250  3251  3252  3253  3254  3255  3256  3257
[1957]  3258  3259  3260  3261  3262  3263  3264  3265  3266  3267  3268  3269
[1969]  3270  3271  3272  3273  3274  3275  3276  3277  3278  3279  3280  3281
[1981]  3282  3316  3317  3318  3319  3320  3321  3322  3323  3324  3325  3326
[1993]  3327  3328  3329  3330  3331  3332  3333  3334  3335  3336  3337  3338
[2005]  3339  3340  3341  3342  3343  3344  3345  3346  3347  3348  3349  3350
[2017]  3351  3352  3353  3354  3382  3383  3384  3385  3386  3387  3388  3389
[2029]  3390  3391  3392  3393  3394  3395  3396  3397  3398  3399  3400  3421
[2041]  3422  3423  3424  3425  3426  3427  3428  3429  3430  3431  3432  3433
[2053]  3434  3435  3436  3437  3438  3439  3440  3441  3442  3443  3444  3445
[2065]  3468  3469  3470  3471  3472  3473  3474  3475  3476  3477  3478  3479
[2077]  3480  3481  3482  3483  3484  3485  3486  3487  3488  3489  3490  3491
[2089]  3492  3493  3494  3495  3496  3497  3498  3499  3500  3501  3502  3503
[2101]  3504  3505  3506  3507  3508  3509  3510  3511  3512  3513  3514  3552
[2113]  3553  3554  3555  3556  3557  3558  3559  3560  3561  3562  3563  3564
[2125]  3565  3566  3567  3568  3569  3570  3571  3572  3573  3574  3575  3576
[2137]  3577  3578  3579  3580  3581  3582  3583  3584  3585  3586  3587  3588
[2149]  3589  3590  3591  3592  3593  3594  3595  3596  3597  3598  3599  3600
[2161]  3601  3602  3603  3604  3605  3606  3607  3608  3609  3610  3631  3632
[2173]  3633  3634  3635  3636  3637  3638  3639  3640  3641  3642  3643  3644
[2185]  3645  3646  3647  3648  3649  3650  3651  3652  3653  3654  3655  3656
[2197]  3657  3658  3659  3660  3661  3662  3663  3664  3665  3666  3667  3668
[2209]  3669  3670  3671  3672  3673  3674  3675  3676  3677  3678  3679  3680
[2221]  3681  3682  3683  3684  3685  3709  3710  3711  3712  3713  3714  3715
[2233]  3716  3717  3718  3719  3720  3721  3722  3723  3724  3725  3726  3727
[2245]  3728  3729  3730  3731  3732  3733  3734  3735  3736  3737  3738  3739
[2257]  3740  3741  3742  3743  3744  3745  3746  3747  3748  3749  3750  3751
[2269]  3752  3753  3754  3755  3756  3792  3793  3794  3795  3796  3797  3798
[2281]  3799  3800  3801  3802  3803  3804  3805  3806  3807  3808  3809  3810
[2293]  3811  3812  3813  3814  3815  3816  3817  3818  3819  3820  3821  3822
[2305]  3823  3824  3825  3826  3827  3828  3829  3830  3831  3832  3833  3834
[2317]  3835  3836  3837  3838  3839  3840  3841  3842  3843  3844  3845  3846
[2329]  3847  3848  3886  3887  3888  3889  3890  3891  3892  3893  3894  3895
[2341]  3896  3897  3898  3899  3900  3901  3902  3903  3904  3905  3906  3907
[2353]  3908  3909  3910  3911  3912  3913  3914  3915  3916  3917  3918  3919
[2365]  3920  3921  3922  3923  3924  3925  3926  3927  3928  3943  3944  3945
[2377]  3946  3947  3948  3949  3950  3951  3952  3953  3954  3955  3956  3957
[2389]  3958  3959  3960  3961  3962  3963  3964  3965  3966  3967  3985  3986
[2401]  3987  3988  3989  3990  3991  3992  3993  3994  3995  3996  3997  3998
[2413]  3999  4000  4001  4002  4003  4004  4005  4006  4007  4008  4009  4010
[2425]  4011  4012  4013  4014  4015  4016  4017  4018  4019  4020  4021  4022
[2437]  4023  4056  4057  4058  4059  4060  4061  4062  4063  4064  4065  4066
[2449]  4067  4068  4069  4070  4071  4072  4073  4074  4075  4076  4077  4078
[2461]  4079  4080  4081  4082  4083  4084  4085  4086  4087  4088  4089  4090
[2473]  4091  4092  4093  4094  4095  4096  4097  4098  4099  4137  4138  4139
[2485]  4140  4141  4142  4143  4144  4145  4146  4147  4148  4149  4150  4151
[2497]  4152  4153  4154  4155  4156  4157  4158  4159  4160  4161  4162  4163
[2509]  4164  4165  4166  4167  4168  4169  4170  4171  4172  4173  4174  4175
[2521]  4176  4177  4178  4179  4180  4219  4220  4221  4222  4223  4224  4225
[2533]  4226  4227  4228  4229  4230  4231  4232  4233  4234  4235  4236  4237
[2545]  4238  4239  4240  4241  4242  4243  4244  4245  4246  4247  4248  4249
[2557]  4250  4251  4252  4253  4254  4255  4256  4257  4258  4259  4260  4297
[2569]  4298  4299  4300  4301  4302  4303  4304  4305  4306  4307  4308  4309
[2581]  4310  4311  4312  4313  4314  4315  4316  4317  4318  4319  4320  4321
[2593]  4322  4323  4324  4325  4326  4327  4328  4329  4330  4331  4332  4333
[2605]  4334  4335  4336  4337  4338  4371  4372  4373  4374  4375  4376  4377
[2617]  4378  4379  4380  4381  4382  4383  4384  4385  4386  4387  4388  4389
[2629]  4390  4391  4392  4393  4394  4395  4396  4397  4398  4426  4427  4428
[2641]  4429  4430  4431  4432  4433  4434  4435  4436  4437  4438  4439  4440
[2653]  4441  4442  4443  4444  4445  4446  4447  4448  4449  4450  4451  4452
[2665]  4453  4454  4455  4456  4457  4458  4459  4460  4461  4462  4463  4464
[2677]  4465  4466  4467  4468  4469  4470  4471  4472  4473  4474  4475  4476
[2689]  4499  4500  4501  4502  4503  4504  4505  4506  4507  4508  4509  4510
[2701]  4511  4512  4513  4514  4515  4516  4517  4518  4519  4520  4521  4522
[2713]  4523  4524  4525  4526  4527  4528  4529  4530  4531  4532  4533  4534
[2725]  4535  4536  4537  4538  4539  4540  4541  4566  4567  4568  4569  4570
[2737]  4571  4572  4573  4574  4575  4576  4577  4578  4579  4580  4581  4582
[2749]  4583  4584  4585  4586  4587  4588  4589  4590  4591  4592  4593  4594
[2761]  4595  4596  4597  4598  4599  4600  4601  4602  4603  4604  4605  4606
[2773]  4607  4608  4609  4610  4611  4612  4613  4614  4641  4642  4643  4644
[2785]  4645  4646  4647  4648  4649  4650  4651  4652  4653  4654  4655  4656
[2797]  4657  4658  4659  4660  4661  4662  4663  4664  4665  4666  4667  4668
[2809]  4669  4670  4671  4672  4673  4674  4675  4676  4677  4678  4679  4680
[2821]  4681  4682  4703  4704  4705  4706  4707  4708  4709  4710  4711  4712
[2833]  4713  4714  4715  4716  4717  4718  4719  4720  4721  4722  4723  4724
[2845]  4725  4726  4727  4728  4729  4730  4731  4732  4733  4734  4735  4736
[2857]  4737  4738  4739  4740  4741  4742  4743  4778  4779  4780  4781  4782
[2869]  4783  4784  4785  4786  4787  4788  4789  4790  4791  4792  4793  4794
[2881]  4795  4796  4797  4798  4799  4800  4801  4802  4803  4804  4805  4806
[2893]  4807  4808  4809  4810  4811  4812  4813  4814  4815  4816  4817  4818
[2905]  4819  4820  4821  4822  4823  4824  4825  4826  4827  4828  4829  4830
[2917]  4831  4832  4872  4873  4874  4875  4876  4877  4878  4879  4880  4881
[2929]  4882  4883  4884  4885  4886  4887  4888  4889  4890  4891  4892  4893
[2941]  4894  4895  4896  4897  4898  4899  4900  4901  4902  4903  4904  4905
[2953]  4906  4907  4908  4909  4910  4911  4912  4913  4914  4915  4916  4952
[2965]  4953  4954  4955  4956  4957  4958  4959  4960  4961  4962  4963  4964
[2977]  4965  4966  4967  4968  4969  4970  4971  4972  4973  4974  4975  4976
[2989]  4977  4978  4979  4980  4981  4982  4983  4984  4985  4986  5007  5008
[3001]  5009  5010  5011  5012  5013  5014  5015  5016  5017  5018  5019  5020
[3013]  5021  5022  5023  5024  5025  5026  5027  5028  5029  5030  5031  5032
[3025]  5033  5034  5035  5036  5037  5038  5039  5040  5041  5042  5043  5083
[3037]  5084  5085  5086  5087  5088  5089  5090  5091  5092  5093  5094  5095
[3049]  5096  5097  5098  5099  5100  5101  5102  5103  5104  5105  5106  5107
[3061]  5108  5109  5110  5111  5112  5113  5114  5115  5116  5117  5118  5119
[3073]  5120  5121  5122  5123  5124  5125  5126  5127  5128  5129  5130  5131
[3085]  5132  5133  5134  5135  5175  5176  5177  5178  5179  5180  5181  5182
[3097]  5183  5184  5185  5186  5187  5188  5189  5190  5191  5192  5193  5194
[3109]  5195  5196  5197  5198  5199  5200  5201  5202  5203  5204  5205  5206
[3121]  5207  5208  5209  5210  5211  5212  5213  5214  5215  5216  5217  5218
[3133]  5219  5220  5221  5222  5223  5224  5225  5226  5227  5228  5229  5230
[3145]  5231  5271  5272  5273  5274  5275  5276  5277  5278  5279  5280  5281
[3157]  5282  5283  5284  5285  5286  5287  5288  5289  5290  5291  5292  5293
[3169]  5294  5295  5296  5297  5298  5299  5300  5301  5302  5303  5304  5305
[3181]  5306  5307  5308  5309  5310  5311  5312  5313  5314  5315  5316  5317
[3193]  5318  5319  5320  5321  5322  5323  5324  5325  5326  5327  5367  5368
[3205]  5369  5370  5371  5372  5373  5374  5375  5376  5377  5378  5379  5380
[3217]  5381  5382  5383  5384  5385  5386  5387  5388  5389  5390  5391  5392
[3229]  5393  5394  5395  5396  5397  5398  5399  5400  5401  5402  5403  5404
[3241]  5405  5406  5407  5408  5409  5410  5411  5450  5451  5452  5453  5454
[3253]  5455  5456  5457  5458  5459  5460  5461  5462  5463  5464  5465  5466
[3265]  5467  5468  5469  5470  5471  5472  5473  5474  5475  5476  5477  5478
[3277]  5479  5480  5481  5482  5483  5484  5485  5486  5487  5488  5489  5490
[3289]  5491  5492  5493  5494  5495  5496  5497  5498  5499  5500  5501  5502
[3301]  5503  5504  5505  5506  5546  5547  5548  5549  5550  5551  5552  5553
[3313]  5554  5555  5556  5557  5558  5559  5560  5561  5562  5563  5564  5565
[3325]  5566  5567  5568  5569  5570  5571  5572  5573  5574  5575  5576  5577
[3337]  5578  5579  5580  5581  5582  5583  5584  5585  5586  5587  5588  5589
[3349]  5590  5591  5592  5593  5594  5595  5596  5597  5598  5599  5600  5601
[3361]  5602  5642  5643  5644  5645  5646  5647  5648  5649  5650  5651  5652
[3373]  5653  5654  5655  5656  5657  5658  5659  5660  5661  5662  5663  5664
[3385]  5665  5666  5667  5668  5669  5670  5671  5672  5673  5674  5675  5676
[3397]  5677  5678  5679  5680  5681  5682  5683  5684  5685  5686  5687  5688
[3409]  5689  5690  5691  5692  5693  5694  5695  5696  5697  5698  5735  5736
[3421]  5737  5738  5739  5740  5741  5742  5743  5744  5745  5746  5747  5748
[3433]  5749  5750  5751  5752  5753  5754  5755  5756  5757  5758  5759  5760
[3445]  5761  5762  5763  5764  5765  5766  5767  5768  5769  5770  5771  5772
[3457]  5773  5774  5775  5776  5777  5778  5779  5780  5781  5782  5783  5784
[3469]  5785  5786  5787  5788  5789  5790  5791  5829  5830  5831  5832  5833
[3481]  5834  5835  5836  5837  5838  5839  5840  5841  5842  5843  5844  5845
[3493]  5846  5847  5848  5849  5850  5851  5852  5853  5854  5855  5856  5857
[3505]  5858  5859  5860  5861  5862  5863  5864  5865  5866  5867  5868  5869
[3517]  5870  5871  5872  5873  5874  5875  5876  5877  5878  5879  5880  5881
[3529]  5882  5883  5884  5917  5918  5919  5920  5921  5922  5923  5924  5925
[3541]  5926  5927  5928  5929  5930  5931  5932  5933  5934  5935  5936  5937
[3553]  5938  5939  5940  5941  5942  5943  5944  5945  5946  5947  5948  5949
[3565]  5950  5951  5952  5953  5954  5955  5956  5957  5958  5959  5960  5961
[3577]  5962  5963  5964  5965  5966  5967  6000  6001  6002  6003  6004  6005
[3589]  6006  6007  6008  6009  6010  6011  6012  6013  6014  6015  6016  6017
[3601]  6018  6019  6020  6021  6022  6023  6024  6025  6026  6027  6028  6029
[3613]  6030  6031  6032  6033  6034  6035  6036  6037  6038  6039  6040  6041
[3625]  6042  6043  6044  6045  6046  6047  6048  6088  6089  6090  6091  6092
[3637]  6093  6094  6095  6096  6097  6098  6099  6100  6101  6102  6103  6104
[3649]  6105  6106  6107  6108  6109  6110  6111  6112  6113  6114  6115  6116
[3661]  6117  6118  6119  6120  6121  6122  6123  6124  6125  6126  6127  6128
[3673]  6129  6130  6131  6132  6133  6134  6135  6136  6178  6179  6180  6181
[3685]  6182  6183  6184  6185  6186  6187  6188  6189  6190  6191  6192  6193
[3697]  6194  6195  6196  6197  6198  6199  6200  6201  6202  6203  6204  6205
[3709]  6206  6207  6208  6209  6210  6211  6212  6213  6214  6215  6216  6217
[3721]  6218  6219  6220  6221  6222  6223  6224  6225  6226  6227  6269  6270
[3733]  6271  6272  6273  6274  6275  6276  6277  6278  6279  6280  6281  6282
[3745]  6283  6284  6285  6286  6287  6288  6289  6290  6291  6292  6293  6294
[3757]  6295  6296  6297  6298  6299  6300  6301  6302  6303  6304  6305  6306
[3769]  6307  6308  6335  6336  6337  6338  6339  6340  6341  6342  6343  6344
[3781]  6345  6346  6347  6348  6349  6350  6351  6352  6353  6354  6355  6356
[3793]  6357  6358  6359  6360  6361  6362  6363  6364  6365  6366  6367  6368
[3805]  6369  6370  6371  6372  6373  6374  6375  6417  6418  6419  6420  6421
[3817]  6422  6423  6424  6425  6426  6427  6428  6429  6430  6431  6432  6433
[3829]  6434  6435  6436  6437  6438  6439  6440  6441  6442  6443  6444  6445
[3841]  6446  6447  6448  6449  6450  6451  6452  6453  6454  6455  6456  6457
[3853]  6458  6459  6460  6461  6462  6463  6464  6465  6466  6467  6468  6469
[3865]  6470  6471  6510  6511  6512  6513  6514  6515  6516  6517  6518  6519
[3877]  6520  6521  6522  6523  6524  6525  6526  6527  6528  6529  6530  6531
[3889]  6532  6533  6534  6535  6536  6537  6579  6580  6581  6582  6583  6584
[3901]  6585  6586  6587  6588  6589  6590  6591  6592  6593  6594  6595  6596
[3913]  6597  6598  6599  6600  6601  6602  6603  6604  6605  6606  6607  6608
[3925]  6609  6610  6611  6612  6613  6614  6615  6616  6617  6618  6619  6620
[3937]  6621  6622  6623  6624  6625  6626  6627  6669  6670  6671  6672  6673
[3949]  6674  6675  6676  6677  6678  6679  6680  6681  6682  6683  6684  6685
[3961]  6686  6687  6688  6689  6690  6691  6692  6693  6694  6695  6696  6697
[3973]  6698  6699  6700  6701  6702  6703  6743  6744  6745  6746  6747  6748
[3985]  6749  6750  6751  6752  6753  6754  6755  6756  6757  6758  6759  6760
[3997]  6761  6762  6763  6764  6765  6766  6767  6768  6769  6770  6771  6772
[4009]  6773  6774  6775  6776  6777  6778  6779  6780  6781  6782  6783  6784
[4021]  6785  6786  6787  6788  6789  6790  6791  6792  6793  6794  6795  6796
[4033]  6797  6839  6840  6841  6842  6843  6844  6845  6846  6847  6848  6849
[4045]  6850  6851  6852  6853  6854  6855  6856  6857  6858  6859  6860  6861
[4057]  6862  6863  6864  6865  6866  6867  6868  6869  6870  6871  6872  6873
[4069]  6874  6875  6876  6877  6878  6879  6880  6881  6882  6883  6884  6885
[4081]  6886  6887  6888  6889  6890  6891  6892  6893  6935  6936  6937  6938
[4093]  6939  6940  6941  6942  6943  6944  6945  6946  6947  6948  6949  6950
[4105]  6951  6952  6953  6954  6955  6956  6957  6958  6959  6960  6961  6962
[4117]  6963  6964  6965  6966  6967  6968  6969  6970  6971  6972  6973  6974
[4129]  6975  6976  6977  6978  6979  6980  6981  6982  6983  6984  6985  6986
[4141]  6987  6988  6989  7031  7032  7033  7034  7035  7036  7037  7038  7039
[4153]  7040  7041  7042  7043  7044  7045  7046  7047  7048  7049  7050  7051
[4165]  7052  7053  7054  7055  7056  7057  7058  7059  7060  7061  7062  7063
[4177]  7064  7065  7066  7067  7068  7069  7070  7071  7072  7073  7074  7075
[4189]  7076  7077  7078  7079  7080  7107  7108  7109  7110  7111  7112  7113
[4201]  7114  7115  7116  7117  7118  7119  7120  7121  7122  7123  7124  7125
[4213]  7126  7127  7128  7129  7130  7131  7132  7133  7134  7135  7136  7137
[4225]  7138  7139  7140  7141  7142  7143  7144  7145  7146  7147  7148  7149
[4237]  7150  7151  7152  7194  7195  7196  7197  7198  7199  7200  7201  7202
[4249]  7203  7204  7205  7206  7207  7208  7209  7210  7211  7212  7213  7214
[4261]  7215  7216  7217  7218  7219  7220  7221  7222  7223  7224  7225  7226
[4273]  7227  7228  7229  7230  7231  7232  7233  7234  7235  7236  7237  7238
[4285]  7239  7240  7241  7242  7243  7244  7245  7246  7247  7248  7290  7291
[4297]  7292  7293  7294  7295  7296  7297  7298  7299  7300  7301  7302  7303
[4309]  7304  7305  7306  7307  7308  7309  7310  7311  7312  7313  7314  7315
[4321]  7316  7317  7318  7319  7320  7321  7322  7323  7324  7325  7326  7327
[4333]  7328  7329  7330  7331  7332  7333  7334  7335  7336  7337  7338  7339
[4345]  7363  7364  7365  7366  7367  7368  7369  7370  7371  7372  7373  7374
[4357]  7375  7376  7377  7378  7379  7380  7381  7382  7383  7384  7385  7386
[4369]  7387  7388  7389  7390  7391  7392  7393  7394  7395  7396  7420  7421
[4381]  7422  7423  7424  7425  7426  7427  7428  7429  7430  7431  7432  7433
[4393]  7434  7435  7436  7437  7438  7439  7440  7441  7442  7443  7444  7445
[4405]  7446  7447  7490  7491  7492  7493  7494  7495  7496  7497  7498  7499
[4417]  7500  7501  7502  7503  7504  7505  7506  7507  7508  7509  7510  7511
[4429]  7512  7513  7514  7515  7516  7517  7518  7519  7520  7521  7522  7523
[4441]  7524  7525  7526  7527  7528  7529  7530  7531  7532  7533  7534  7535
[4453]  7536  7537  7538  7539  7540  7541  7542  7543  7587  7588  7589  7590
[4465]  7591  7592  7593  7594  7595  7596  7597  7598  7599  7600  7601  7602
[4477]  7603  7604  7605  7606  7607  7608  7609  7610  7611  7655  7656  7657
[4489]  7658  7659  7660  7661  7662  7663  7664  7665  7666  7667  7668  7669
[4501]  7670  7671  7672  7673  7674  7675  7676  7677  7678  7679  7680  7681
[4513]  7682  7683  7684  7685  7686  7687  7688  7689  7690  7691  7692  7693
[4525]  7694  7695  7696  7697  7698  7699  7700  7701  7702  7703  7704  7705
[4537]  7749  7750  7751  7752  7753  7754  7755  7756  7757  7758  7759  7760
[4549]  7761  7762  7763  7764  7765  7766  7767  7768  7769  7770  7771  7772
[4561]  7773  7774  7775  7776  7777  7778  7779  7780  7781  7782  7783  7784
[4573]  7785  7786  7787  7788  7789  7790  7791  7792  7793  7794  7795  7796
[4585]  7797  7798  7799  7800  7801  7845  7846  7847  7848  7849  7850  7851
[4597]  7852  7853  7854  7855  7856  7857  7858  7859  7860  7861  7862  7863
[4609]  7864  7865  7866  7867  7868  7869  7870  7871  7872  7873  7874  7875
[4621]  7876  7877  7878  7879  7880  7881  7882  7883  7884  7885  7886  7887
[4633]  7888  7889  7890  7891  7892  7893  7894  7895  7896  7897  7941  7942
[4645]  7943  7944  7945  7946  7947  7948  7949  7950  7951  7952  7953  7954
[4657]  7955  7956  7957  7958  7959  7960  7961  7962  7963  7964  7965  7966
[4669]  7967  7968  7969  7970  7971  7972  7973  7974  7975  7976  7977  7978
[4681]  7979  7980  7981  7982  7983  7984  7985  7986  7987  7988  7989  7990
[4693]  7991  7992  7993  8037  8038  8039  8040  8041  8042  8043  8044  8045
[4705]  8046  8047  8048  8049  8050  8051  8052  8053  8054  8055  8056  8057
[4717]  8058  8059  8060  8061  8062  8063  8064  8065  8066  8067  8068  8069
[4729]  8070  8071  8072  8073  8074  8075  8076  8077  8078  8079  8080  8081
[4741]  8082  8083  8084  8085  8086  8087  8088  8089  8133  8134  8135  8136
[4753]  8137  8138  8139  8140  8141  8142  8143  8144  8145  8146  8147  8148
[4765]  8149  8150  8151  8152  8153  8154  8155  8156  8157  8158  8159  8160
[4777]  8161  8162  8163  8164  8165  8166  8167  8168  8169  8170  8171  8172
[4789]  8173  8174  8175  8176  8177  8178  8179  8180  8181  8182  8183  8184
[4801]  8185  8229  8230  8231  8232  8233  8234  8235  8236  8237  8238  8239
[4813]  8240  8241  8242  8243  8244  8245  8246  8247  8248  8249  8250  8251
[4825]  8252  8253  8254  8255  8256  8257  8258  8259  8260  8261  8262  8263
[4837]  8264  8265  8266  8267  8268  8269  8270  8271  8272  8273  8274  8275
[4849]  8276  8277  8278  8279  8280  8325  8326  8327  8328  8329  8330  8331
[4861]  8332  8333  8334  8335  8336  8337  8338  8339  8340  8341  8342  8343
[4873]  8344  8345  8346  8347  8348  8349  8350  8351  8352  8353  8354  8355
[4885]  8356  8357  8358  8359  8360  8361  8362  8363  8364  8365  8366  8367
[4897]  8368  8369  8370  8371  8372  8373  8374  8375  8376  8421  8422  8423
[4909]  8424  8425  8426  8427  8428  8429  8430  8431  8432  8433  8434  8435
[4921]  8436  8437  8438  8439  8440  8441  8442  8443  8444  8445  8446  8447
[4933]  8448  8449  8450  8451  8452  8453  8454  8455  8456  8457  8458  8459
[4945]  8460  8461  8462  8463  8464  8465  8466  8467  8468  8469  8470  8471
[4957]  8472  8517  8518  8519  8520  8521  8522  8523  8524  8525  8526  8527
[4969]  8528  8529  8530  8531  8532  8533  8534  8535  8536  8537  8538  8539
[4981]  8540  8541  8542  8543  8544  8545  8546  8547  8548  8549  8550  8551
[4993]  8552  8553  8554  8555  8556  8557  8558  8559  8560  8561  8562  8563
[5005]  8564  8565  8566  8567  8568  8613  8614  8615  8616  8617  8618  8619
[5017]  8620  8621  8622  8623  8624  8625  8626  8627  8628  8629  8630  8631
[5029]  8632  8633  8634  8635  8636  8637  8638  8639  8640  8641  8642  8643
[5041]  8644  8645  8646  8647  8648  8649  8650  8651  8652  8653  8654  8655
[5053]  8656  8657  8658  8659  8660  8661  8662  8663  8664  8709  8710  8711
[5065]  8712  8713  8714  8715  8716  8717  8718  8719  8720  8721  8722  8723
[5077]  8724  8725  8726  8727  8728  8729  8730  8731  8732  8733  8734  8735
[5089]  8736  8737  8738  8739  8740  8741  8742  8743  8744  8745  8746  8747
[5101]  8748  8749  8750  8751  8752  8753  8754  8755  8756  8757  8758  8759
[5113]  8760  8805  8806  8807  8808  8809  8810  8811  8812  8813  8814  8815
[5125]  8816  8817  8818  8819  8820  8821  8822  8823  8824  8825  8826  8827
[5137]  8828  8829  8830  8831  8832  8833  8834  8835  8836  8837  8838  8839
[5149]  8840  8841  8842  8843  8844  8845  8846  8847  8848  8849  8850  8851
[5161]  8852  8853  8854  8855  8856  8901  8902  8903  8904  8905  8906  8907
[5173]  8908  8909  8910  8911  8912  8913  8914  8915  8916  8917  8918  8919
[5185]  8920  8921  8922  8923  8924  8925  8926  8927  8928  8929  8930  8931
[5197]  8932  8933  8934  8935  8936  8937  8938  8939  8940  8941  8942  8943
[5209]  8944  8945  8946  8947  8948  8949  8950  8951  8952  8997  8998  8999
[5221]  9000  9001  9002  9003  9004  9005  9006  9007  9008  9009  9010  9011
[5233]  9012  9013  9014  9015  9016  9017  9018  9019  9020  9021  9022  9023
[5245]  9024  9025  9026  9027  9028  9029  9030  9031  9032  9033  9034  9035
[5257]  9036  9037  9038  9039  9040  9041  9042  9043  9044  9045  9046  9047
[5269]  9048  9093  9094  9095  9096  9097  9098  9099  9100  9101  9102  9103
[5281]  9104  9105  9106  9107  9108  9109  9110  9111  9112  9113  9114  9115
[5293]  9116  9117  9118  9119  9120  9121  9122  9123  9124  9125  9126  9127
[5305]  9128  9129  9130  9131  9132  9133  9134  9135  9136  9137  9138  9139
[5317]  9140  9141  9142  9143  9144  9190  9191  9192  9193  9194  9195  9196
[5329]  9197  9198  9199  9200  9201  9202  9203  9204  9205  9206  9207  9208
[5341]  9209  9210  9211  9212  9213  9214  9215  9216  9217  9218  9219  9220
[5353]  9221  9222  9223  9224  9225  9226  9227  9228  9229  9230  9231  9232
[5365]  9233  9234  9235  9236  9237  9238  9239  9286  9287  9288  9289  9290
[5377]  9291  9292  9293  9294  9295  9296  9297  9298  9299  9300  9301  9302
[5389]  9303  9304  9305  9306  9307  9308  9309  9310  9311  9312  9313  9314
[5401]  9315  9316  9317  9318  9319  9320  9321  9322  9323  9324  9325  9326
[5413]  9327  9328  9329  9330  9331  9332  9333  9334  9335  9382  9383  9384
[5425]  9385  9386  9387  9388  9389  9390  9391  9392  9393  9394  9395  9396
[5437]  9397  9398  9399  9400  9401  9402  9403  9404  9405  9406  9407  9408
[5449]  9409  9410  9411  9412  9413  9414  9415  9416  9417  9418  9419  9420
[5461]  9421  9422  9423  9424  9425  9426  9427  9428  9429  9430  9431  9478
[5473]  9479  9480  9481  9482  9483  9484  9485  9486  9487  9488  9489  9490
[5485]  9491  9492  9493  9494  9495  9496  9497  9498  9499  9500  9501  9502
[5497]  9503  9504  9505  9506  9507  9508  9509  9510  9511  9512  9513  9514
[5509]  9515  9516  9517  9518  9519  9520  9521  9522  9523  9524  9525  9526
[5521]  9527  9574  9575  9576  9577  9578  9579  9580  9581  9582  9583  9584
[5533]  9585  9586  9587  9588  9589  9590  9591  9592  9593  9594  9595  9596
[5545]  9597  9598  9599  9600  9601  9602  9603  9604  9605  9606  9607  9608
[5557]  9609  9610  9611  9612  9613  9614  9615  9616  9617  9618  9619  9620
[5569]  9621  9622  9623  9670  9671  9672  9673  9674  9675  9676  9677  9678
[5581]  9679  9680  9681  9682  9683  9684  9685  9686  9687  9688  9689  9690
[5593]  9691  9692  9693  9694  9695  9696  9697  9698  9699  9700  9701  9702
[5605]  9703  9704  9705  9706  9707  9708  9709  9710  9711  9712  9713  9714
[5617]  9715  9716  9717  9718  9719  9766  9767  9768  9769  9770  9771  9772
[5629]  9773  9774  9775  9776  9777  9778  9779  9780  9781  9782  9783  9784
[5641]  9785  9786  9787  9788  9789  9790  9791  9792  9793  9794  9795  9796
[5653]  9797  9798  9799  9800  9801  9802  9803  9804  9805  9806  9807  9808
[5665]  9809  9810  9811  9812  9813  9814  9815  9862  9863  9864  9865  9866
[5677]  9867  9868  9869  9870  9871  9872  9873  9874  9875  9876  9877  9878
[5689]  9879  9880  9881  9882  9883  9884  9885  9886  9887  9888  9889  9890
[5701]  9891  9892  9893  9894  9895  9896  9897  9898  9899  9900  9901  9902
[5713]  9903  9904  9905  9906  9907  9908  9909  9910  9911  9958  9959  9960
[5725]  9961  9962  9963  9964  9965  9966  9967  9968  9969  9970  9971  9972
[5737]  9973  9974  9975  9976  9977  9978  9979  9980  9981  9982  9983  9984
[5749]  9985  9986  9987  9988  9989  9990  9991  9992  9993  9994  9995  9996
[5761]  9997  9998  9999 10000 10001 10002 10003 10004 10005 10006 10007 10054
[5773] 10055 10056 10057 10058 10059 10060 10061 10062 10063 10064 10065 10066
[5785] 10067 10068 10069 10070 10071 10072 10073 10074 10075 10076 10077 10078
[5797] 10079 10080 10081 10082 10083 10084 10085 10086 10087 10088 10089 10090
[5809] 10091 10092 10093 10094 10095 10096 10097 10098 10099 10100 10101 10102
[5821] 10103 10150 10151 10152 10153 10154 10155 10156 10157 10158 10159 10160
[5833] 10161 10162 10163 10164 10165 10166 10167 10168 10169 10170 10171 10172
[5845] 10173 10174 10175 10176 10177 10178 10179 10180 10181 10182 10183 10184
[5857] 10185 10186 10187 10188 10189 10190 10191 10192 10193 10194 10195 10196
[5869] 10197 10198 10246 10247 10248 10249 10250 10251 10252 10253 10254 10255
[5881] 10256 10257 10258 10259 10260 10261 10262 10263 10264 10265 10266 10267
[5893] 10268 10269 10270 10271 10272 10273 10274 10275 10276 10277 10278 10279
[5905] 10280 10281 10282 10283 10284 10285 10286 10287 10288 10289 10290 10291
[5917] 10292 10293 10294 10342 10343 10344 10345 10346 10347 10348 10349 10350
[5929] 10351 10352 10353 10354 10355 10356 10357 10358 10359 10360 10361 10362
[5941] 10363 10364 10365 10366 10367 10368 10369 10370 10371 10372 10373 10374
[5953] 10375 10376 10377 10378 10379 10380 10381 10382 10383 10384 10385 10386
[5965] 10387 10388 10389 10390 10438 10439 10440 10441 10442 10443 10444 10445
[5977] 10446 10447 10448 10449 10450 10451 10452 10453 10454 10455 10456 10457
[5989] 10458 10459 10460 10461 10462 10463 10464 10465 10466 10467 10468 10469
[6001] 10470 10471 10472 10473 10474 10475 10476 10477 10478 10479 10480 10481
[6013] 10482 10483 10484 10485 10486 10534 10535 10536 10537 10538 10539 10540
[6025] 10541 10542 10543 10544 10545 10546 10547 10548 10549 10550 10551 10552
[6037] 10553 10554 10555 10556 10557 10558 10559 10560 10561 10562 10563 10564
[6049] 10565 10566 10567 10568 10569 10570 10571 10572 10573 10574 10575 10576
[6061] 10577 10578 10579 10580 10581 10582 10630 10631 10632 10633 10634 10635
[6073] 10636 10637 10638 10639 10640 10641 10642 10643 10644 10645 10646 10647
[6085] 10648 10649 10650 10651 10652 10653 10654 10655 10656 10657 10658 10659
[6097] 10660 10661 10662 10663 10664 10665 10666 10667 10668 10669 10670 10671
[6109] 10672 10673 10674 10675 10676 10677 10678 10726 10727 10728 10729 10730
[6121] 10731 10732 10733 10734 10735 10736 10737 10738 10739 10740 10741 10742
[6133] 10743 10744 10745 10746 10747 10748 10749 10750 10751 10752 10753 10754
[6145] 10755 10756 10757 10758 10759 10760 10761 10762 10763 10764 10765 10766
[6157] 10767 10768 10769 10770 10771 10772 10773 10774 10822 10823 10824 10825
[6169] 10826 10827 10828 10829 10830 10831 10832 10833 10834 10835 10836 10837
[6181] 10838 10839 10840 10841 10842 10843 10844 10845 10846 10847 10848 10849
[6193] 10850 10851 10852 10853 10854 10855 10856 10857 10858 10859 10860 10861
[6205] 10862 10863 10864 10865 10866 10867 10868 10869 10870 10919 10920 10921
[6217] 10922 10923 10924 10925 10926 10927 10928 10929 10930 10931 10932 10933
[6229] 10934 10935 10936 10937 10938 10939 10940 10941 10942 10943 10944 10945
[6241] 10946 10947 10948 10949 10950 10951 10952 10953 10954 10955 10956 10957
[6253] 10958 10959 10960 10961 10962 10963 10964 10965 10966 11015 11016 11017
[6265] 11018 11019 11020 11021 11022 11023 11024 11025 11026 11027 11028 11029
[6277] 11030 11031 11032 11033 11034 11035 11036 11037 11038 11039 11040 11041
[6289] 11042 11043 11044 11045 11046 11047 11048 11049 11050 11051 11052 11053
[6301] 11054 11055 11056 11057 11058 11059 11060 11061 11111 11112 11113 11114
[6313] 11115 11116 11117 11118 11119 11120 11121 11122 11123 11124 11125 11126
[6325] 11127 11128 11129 11130 11131 11132 11133 11134 11135 11136 11137 11138
[6337] 11139 11140 11141 11142 11143 11144 11145 11146 11147 11148 11149 11150
[6349] 11151 11152 11153 11154 11155 11156 11157 11207 11208 11209 11210 11211
[6361] 11212 11213 11214 11215 11216 11217 11218 11219 11220 11221 11222 11223
[6373] 11224 11225 11226 11227 11228 11229 11230 11231 11232 11233 11234 11235
[6385] 11236 11237 11238 11239 11240 11241 11242 11243 11244 11245 11246 11247
[6397] 11248 11249 11250 11251 11252 11253 11303 11304 11305 11306 11307 11308
[6409] 11309 11310 11311 11312 11313 11314 11315 11316 11317 11318 11319 11320
[6421] 11321 11322 11323 11324 11325 11326 11327 11328 11329 11330 11331 11332
[6433] 11333 11334 11335 11336 11337 11338 11339 11340 11341 11342 11343 11344
[6445] 11345 11346 11347 11348 11349 11399 11400 11401 11402 11403 11404 11405
[6457] 11406 11407 11408 11409 11410 11411 11412 11413 11414 11415 11416 11417
[6469] 11418 11419 11420 11421 11422 11423 11424 11425 11426 11427 11428 11429
[6481] 11430 11431 11432 11433 11434 11435 11436 11437 11438 11439 11440 11441
[6493] 11442 11443 11444 11445 11495 11496 11497 11498 11499 11500 11501 11502
[6505] 11503 11504 11505 11506 11507 11508 11509 11510 11511 11512 11513 11514
[6517] 11515 11516 11517 11518 11519 11520 11521 11522 11523 11524 11525 11526
[6529] 11527 11528 11529 11530 11531 11532 11533 11534 11535 11536 11537 11538
[6541] 11539 11540 11541 11591 11592 11593 11594 11595 11596 11597 11598 11599
[6553] 11600 11601 11602 11603 11604 11605 11606 11607 11608 11609 11610 11611
[6565] 11612 11613 11614 11615 11616 11617 11618 11619 11620 11621 11622 11623
[6577] 11624 11625 11626 11627 11628 11629 11630 11631 11632 11633 11634 11635
[6589] 11636 11637 11687 11688 11689 11690 11691 11692 11693 11694 11695 11696
[6601] 11697 11698 11699 11700 11701 11702 11703 11704 11705 11706 11707 11708
[6613] 11709 11710 11711 11712 11713 11714 11715 11716 11717 11718 11719 11720
[6625] 11721 11722 11723 11724 11725 11726 11727 11728 11729 11730 11731 11732
[6637] 11733 11783 11784 11785 11786 11787 11788 11789 11790 11791 11792 11793
[6649] 11794 11795 11796 11797 11798 11799 11800 11801 11802 11803 11804 11805
[6661] 11806 11807 11808 11809 11810 11811 11812 11813 11814 11815 11816 11817
[6673] 11818 11819 11820 11821 11822 11823 11824 11825 11826 11827 11828 11829
[6685] 11879 11880 11881 11882 11883 11884 11885 11886 11887 11888 11889 11890
[6697] 11891 11892 11893 11894 11895 11896 11897 11898 11899 11900 11901 11902
[6709] 11903 11904 11905 11906 11907 11908 11909 11910 11911 11912 11913 11914
[6721] 11915 11916 11917 11918 11919 11920 11921 11922 11923 11924 11925 11975
[6733] 11976 11977 11978 11979 11980 11981 11982 11983 11984 11985 11986 11987
[6745] 11988 11989 11990 11991 11992 11993 11994 11995 11996 11997 11998 11999
[6757] 12000 12001 12002 12003 12004 12005 12006 12007 12008 12009 12010 12011
[6769] 12012 12013 12014 12015 12016 12017 12018 12019 12020 12071 12072 12073
[6781] 12074 12075 12076 12077 12078 12079 12080 12081 12082 12083 12084 12085
[6793] 12086 12087 12088 12089 12090 12091 12092 12093 12094 12095 12096 12097
[6805] 12098 12099 12100 12101 12102 12103 12104 12105 12106 12107 12108 12109
[6817] 12110 12111 12112 12113 12114 12115 12116 12167 12168 12169 12170 12171
[6829] 12172 12173 12174 12175 12176 12177 12178 12179 12180 12181 12182 12183
[6841] 12184 12185 12186 12187 12188 12189 12190 12191 12192 12193 12194 12195
[6853] 12196 12197 12198 12199 12200 12201 12202 12203 12204 12205 12206 12207
[6865] 12208 12209 12210 12211 12212 12263 12264 12265 12266 12267 12268 12269
[6877] 12270 12271 12272 12273 12274 12275 12276 12277 12278 12279 12280 12281
[6889] 12282 12283 12284 12285 12286 12287 12288 12289 12290 12291 12292 12293
[6901] 12294 12295 12296 12297 12298 12299 12300 12301 12302 12303 12304 12305
[6913] 12306 12307 12308 12359 12360 12361 12362 12363 12364 12365 12366 12367
[6925] 12368 12369 12370 12371 12372 12373 12374 12375 12376 12377 12378 12379
[6937] 12380 12381 12382 12383 12384 12385 12386 12387 12388 12389 12390 12391
[6949] 12392 12393 12394 12395 12396 12397 12398 12399 12400 12401 12402 12403
[6961] 12404 12456 12457 12458 12459 12460 12461 12462 12463 12464 12465 12466
[6973] 12467 12468 12469 12470 12471 12472 12473 12474 12475 12476 12477 12478
[6985] 12479 12480 12481 12482 12483 12484 12485 12486 12487 12488 12489 12490
[6997] 12491 12492 12493 12494 12495 12496 12497 12498 12499 12500 12552 12553
[7009] 12554 12555 12556 12557 12558 12559 12560 12561 12562 12563 12564 12565
[7021] 12566 12567 12568 12569 12570 12571 12572 12573 12574 12575 12576 12577
[7033] 12578 12579 12580 12581 12582 12583 12584 12585 12586 12587 12588 12589
[7045] 12590 12591 12592 12593 12594 12595 12596 12648 12649 12650 12651 12652
[7057] 12653 12654 12655 12656 12657 12658 12659 12660 12661 12662 12663 12664
[7069] 12665 12666 12667 12668 12669 12670 12671 12672 12673 12674 12675 12676
[7081] 12677 12678 12679 12680 12681 12682 12683 12684 12685 12686 12687 12688
[7093] 12689 12690 12691 12692 12744 12745 12746 12747 12748 12749 12750 12751
[7105] 12752 12753 12754 12755 12756 12757 12758 12759 12760 12761 12762 12763
[7117] 12764 12765 12766 12767 12768 12769 12770 12771 12772 12773 12774 12775
[7129] 12776 12777 12778 12779 12780 12781 12782 12783 12784 12785 12786 12787
[7141] 12788 12840 12841 12842 12843 12844 12845 12846 12847 12848 12849 12850
[7153] 12851 12852 12853 12854 12855 12856 12857 12858 12859 12860 12861 12862
[7165] 12863 12864 12865 12866 12867 12868 12869 12870 12871 12872 12873 12874
[7177] 12875 12876 12877 12878 12879 12880 12881 12882 12883 12884 12936 12937
[7189] 12938 12939 12940 12941 12942 12943 12944 12945 12946 12947 12948 12949
[7201] 12950 12951 12952 12953 12954 12955 12956 12957 12958 12959 12960 12961
[7213] 12962 12963 12964 12965 12966 12967 12968 12969 12970 12971 12972 12973
[7225] 12974 12975 12976 12977 12978 12979 13032 13033 13034 13035 13036 13037
[7237] 13038 13039 13040 13041 13042 13043 13044 13045 13046 13047 13048 13049
[7249] 13050 13051 13052 13053 13054 13055 13056 13057 13058 13059 13060 13061
[7261] 13062 13063 13064 13065 13066 13067 13068 13069 13070 13071 13072 13073
[7273] 13074 13075 13128 13129 13130 13131 13132 13133 13134 13135 13136 13137
[7285] 13138 13139 13140 13141 13142 13143 13144 13145 13146 13147 13148 13149
[7297] 13150 13151 13152 13153 13154 13155 13156 13157 13158 13159 13160 13161
[7309] 13162 13163 13164 13165 13166 13167 13168 13169 13170 13171 13224 13225
[7321] 13226 13227 13228 13229 13230 13231 13232 13233 13234 13235 13236 13237
[7333] 13238 13239 13240 13241 13242 13243 13244 13245 13246 13247 13248 13249
[7345] 13250 13251 13252 13253 13254 13255 13256 13257 13258 13259 13260 13261
[7357] 13262 13263 13264 13265 13266 13267 13320 13321 13322 13323 13324 13325
[7369] 13326 13327 13328 13329 13330 13331 13332 13333 13334 13335 13336 13337
[7381] 13338 13339 13340 13341 13342 13343 13344 13345 13346 13347 13348 13349
[7393] 13350 13351 13352 13353 13354 13355 13356 13357 13358 13359 13360 13361
[7405] 13362 13363 13416 13417 13418 13419 13420 13421 13422 13423 13424 13425
[7417] 13426 13427 13428 13429 13430 13431 13432 13433 13434 13435 13436 13437
[7429] 13438 13439 13440 13441 13442 13443 13444 13445 13446 13447 13448 13449
[7441] 13450 13451 13452 13453 13454 13455 13456 13457 13458 13459 13512 13513
[7453] 13514 13515 13516 13517 13518 13519 13520 13521 13522 13523 13524 13525
[7465] 13526 13527 13528 13529 13530 13531 13532 13533 13534 13535 13536 13537
[7477] 13538 13539 13540 13541 13542 13543 13544 13545 13546 13547 13548 13549
[7489] 13550 13551 13552 13553 13554 13555 13608 13609 13610 13611 13612 13613
[7501] 13614 13615 13616 13617 13618 13619 13620 13621 13622 13623 13624 13625
[7513] 13626 13627 13628 13629 13630 13631 13632 13633 13634 13635 13636 13637
[7525] 13638 13639 13640 13641 13642 13643 13644 13645 13646 13647 13648 13649
[7537] 13650 13651 13704 13705 13706 13707 13708 13709 13710 13711 13712 13713
[7549] 13714 13715 13716 13717 13718 13719 13720 13721 13722 13723 13724 13725
[7561] 13726 13727 13728 13729 13730 13731 13732 13733 13734 13735 13736 13737
[7573] 13738 13739 13740 13741 13742 13743 13744 13745 13746 13747 13800 13801
[7585] 13802 13803 13804 13805 13806 13807 13808 13809 13810 13811 13812 13813
[7597] 13814 13815 13816 13817 13818 13819 13820 13821 13822 13823 13824 13825
[7609] 13826 13827 13828 13829 13830 13831 13832 13833 13834 13835 13836 13837
[7621] 13838 13839 13840 13841 13842 13843 13897 13898 13899 13900 13901 13902
[7633] 13903 13904 13905 13906 13907 13908 13909 13910 13911 13912 13913 13914
[7645] 13915 13916 13917 13918 13919 13920 13921 13922 13923 13924 13925 13926
[7657] 13927 13928 13929 13930 13931 13932 13933 13934 13935 13936 13937 13938
[7669] 13993 13994 13995 13996 13997 13998 13999 14000 14001 14002 14003 14004
[7681] 14005 14006 14007 14008 14009 14010 14011 14012 14013 14014 14015 14016
[7693] 14017 14018 14019 14020 14021 14022 14023 14024 14025 14026 14027 14028
[7705] 14029 14030 14031 14032 14033 14034 14089 14090 14091 14092 14093 14094
[7717] 14095 14096 14097 14098 14099 14100 14101 14102 14103 14104 14105 14106
[7729] 14107 14108 14109 14110 14111 14112 14113 14114 14115 14116 14117 14118
[7741] 14119 14120 14121 14122 14123 14124 14125 14126 14127 14128 14129 14130
[7753] 14185 14186 14187 14188 14189 14190 14191 14192 14193 14194 14195 14196
[7765] 14197 14198 14199 14200 14201 14202 14203 14204 14205 14206 14207 14208
[7777] 14209 14210 14211 14212 14213 14214 14215 14216 14217 14218 14219 14220
[7789] 14221 14222 14223 14224 14225 14226 14281 14282 14283 14284 14285 14286
[7801] 14287 14288 14289 14290 14291 14292 14293 14294 14295 14296 14297 14298
[7813] 14299 14300 14301 14302 14303 14304 14305 14306 14307 14308 14309 14310
[7825] 14311 14312 14313 14314 14315 14316 14317 14318 14319 14320 14321 14322
[7837] 14377 14378 14379 14380 14381 14382 14383 14384 14385 14386 14387 14388
[7849] 14389 14390 14391 14392 14393 14394 14395 14396 14397 14398 14399 14400
[7861] 14401 14402 14403 14404 14405 14406 14407 14408 14409 14410 14411 14412
[7873] 14413 14414 14415 14416 14417 14418 14473 14474 14475 14476 14477 14478
[7885] 14479 14480 14481 14482 14483 14484 14485 14486 14487 14488 14489 14490
[7897] 14491 14492 14493 14494 14495 14496 14497 14498 14499 14500 14501 14502
[7909] 14503 14504 14505 14506 14507 14508 14509 14510 14511 14512 14513 14514
[7921] 14569 14570 14571 14572 14573 14574 14575 14576 14577 14578 14579 14580
[7933] 14581 14582 14583 14584 14585 14586 14587 14588 14589 14590 14591 14592
[7945] 14593 14594 14595 14596 14597 14598 14599 14600 14601 14602 14603 14604
[7957] 14605 14606 14607 14608 14609 14610 14665 14666 14667 14668 14669 14670
[7969] 14671 14672 14673 14674 14675 14676 14677 14678 14679 14680 14681 14682
[7981] 14683 14684 14685 14686 14687 14688 14689 14690 14691 14692 14693 14694
[7993] 14695 14696 14697 14698 14699 14700 14701 14702 14703 14704 14705 14706
[8005] 14761 14762 14763 14764 14765 14766 14767 14768 14769 14770 14771 14772
[8017] 14773 14774 14775 14776 14777 14778 14779 14780 14781 14782 14783 14784
[8029] 14785 14786 14787 14788 14789 14790 14791 14792 14793 14794 14795 14796
[8041] 14797 14798 14799 14800 14801 14802 14857 14858 14859 14860 14861 14862
[8053] 14863 14864 14865 14866 14867 14868 14869 14870 14871 14872 14873 14874
[8065] 14875 14876 14877 14878 14879 14880 14881 14882 14883 14884 14885 14886
[8077] 14887 14888 14889 14890 14891 14892 14893 14894 14895 14896 14897 14898
[8089] 14953 14954 14955 14956 14957 14958 14959 14960 14961 14962 14963 14964
[8101] 14965 14966 14967 14968
> cmn.month$daynight
    [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
   [13]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
   [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
   [37]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
   [49]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
   [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
   [73]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
   [85]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
   [97]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [109]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [121]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
  [133] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [145] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [157] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [169]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [181]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [193]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [205]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [217]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [229] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
  [241]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [253]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [265]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
  [277] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
  [289]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [301]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [313]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
  [325] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [337] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
  [349]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [361]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [373]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [385]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [397]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [409] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [421] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [433] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
  [445]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [457]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [469]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [481]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [493]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [505] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [517] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [529] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
  [541]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [553]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [565]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [577]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [589]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [601] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [613] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
  [625]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [637]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [649]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [661] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [673] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [685]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [697] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [709] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [721] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
  [733]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [745]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [757]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
  [769] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [781] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [793] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [805]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [817]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [829]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [841] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [853] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [865]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [877]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [889]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [901] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [913] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [925]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [937]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [949]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [961]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
  [973] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [985] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
  [997] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1009]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1021]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1033]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1045]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1057] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1069] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1081]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1093]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1105]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1117]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1129] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1141] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [1153]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1165]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1177]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1189]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1201]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
 [1213] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1225] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [1237]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1249]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1261]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1273]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1285]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
 [1297] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1309] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1321] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [1333]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1345]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1357]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1369]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1381]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
 [1393] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1405] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1417] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [1429]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1441]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1453]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1465]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1477]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
 [1489] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1501] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1513] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [1525]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1537]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1549]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1561] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1573] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1585] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [1597]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1609]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1621]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1633]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1645]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
 [1657] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1669] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1681] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [1693]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1705]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1717]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1729]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1741]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
 [1753] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1765] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1777] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1789]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1801]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1813]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1825] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1837] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1849] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1861]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1873]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1885]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1897]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1909]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1921] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1933] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [1945] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1957]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1969]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1981]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [1993]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2005]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2017] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2029] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2041] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2053]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2065]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2077]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2089] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2101] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2113] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [2125]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2137]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2149]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2161]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2173]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
 [2185] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2197] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2209] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [2221]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2233]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2245]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2257]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2269]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
 [2281] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2293] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2305] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [2317]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2329]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2341]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2353]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2365]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
 [2377] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2389] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2401] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [2413]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2425]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2437]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2449]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2461]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
 [2473] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2485] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2497] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [2509]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2521]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2533]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2545]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
 [2557] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2569] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [2581]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2593]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2605]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2617]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
 [2629] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2641] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2653] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [2665]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2677]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2689]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2701]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2713]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
 [2725] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2737] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2749] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [2761]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2773]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2785]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2797]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [2809] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2821] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [2833]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2845]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2857]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2869]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2881] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2893] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2905] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2917]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2929]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
 [2941] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [2953] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2965]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2977]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [2989]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3001]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3013] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3025] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3037] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3049] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3061]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3073]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3085]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3097]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3109] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3133] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3145] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3157]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3169]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3181]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3193]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3205] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3217] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3229] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3241] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3253]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3265]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3277]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
 [3289] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3301] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3313] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3325]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3337]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3349]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
 [3361] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3373] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [3385]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3397]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3409] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3421]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3433]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3445]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3457] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [3469]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3481]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3493]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3505]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
 [3517] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3529] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3541] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [3553]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3565]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3577]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3589]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3601]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
 [3613] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3625] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3637]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3649]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3661]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3673]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3685]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3697] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3709]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3721]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3733]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3745]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3757] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3769] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3781] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [3793]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3805]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3817]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3829]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3841]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
 [3853] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3865] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3877] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [3889]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3901]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3913]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3925]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3937] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3949]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3961]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
 [3973] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [3985]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [3997]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4009]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4021]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4033] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4045] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [4057]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4069]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4081]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4093]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
 [4105] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4117] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4129] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [4141]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4153]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4165]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4177]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4189] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4201] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4213] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4225]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4237]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4249]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4261] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4273] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4285] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4297]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4309]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4321]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4333]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
 [4345] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4357] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4369] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4381]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4393]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
 [4405] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4417] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [4429]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4441]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4453]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4465]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4477] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4489] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [4501]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4513]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4525]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4537]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4549] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4561] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4573]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4585]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4597]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4609]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
 [4621] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4633] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [4645]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4657]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4669]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4681]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4693] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [4705]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4717]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4729]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4741]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4753] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4765] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4777] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4789]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4801]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4813]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4825]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
 [4837] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4849] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4861] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [4873]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4885]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4897]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4909]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
 [4921] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4933] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [4945] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4957]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4969]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [4981]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
 [4993] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5005] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5017]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5029]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5041]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5053] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5065] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5077] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5089]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5101]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5113]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5125]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [5137] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5149] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5161] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5173] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5185]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5197]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5209]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5221]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [5233] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5245] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5257] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5269] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5281]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5293]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5305]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5317]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [5329] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5341] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5353] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5365] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5377]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5389]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5401]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [5413] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5425] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5437] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5449] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5461]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5473]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5485]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5497]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
 [5509] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5521] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5533] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5545] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5557]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5569]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5581]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5593]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
 [5605] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5617] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5629] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5641] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5653]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5665]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5677]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5689]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
 [5701] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5713] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5725] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [5737]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5749]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5761]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5773]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5785]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
 [5797] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5809] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5821] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [5833]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5845]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5857]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5869]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5881]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5893] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5905] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5917]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5929]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5941]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5953]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [5965]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5977] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [5989] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
 [6001]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6013]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6025]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6037]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6049] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6061] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6073] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6085] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6097]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6109]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6121]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6133]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6145] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6157] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6169] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [6181]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6193]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6205]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6217]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [6229] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6241] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6253] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6265] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6277]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6289]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6301]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
 [6313] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6325] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [6337]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6349]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6361]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6373]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6385] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6397] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6409] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [6421]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6433]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6445]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6457]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6469]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6481] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6493] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6505] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6517]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6529]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
 [6541] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6553] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6565] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6577] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6589]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6601]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6613]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6625]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6637] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6649] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6661] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [6673]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6685]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6697]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
 [6709] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6721] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6733] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [6745]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6757]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6769]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6781]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6793]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6805] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6817] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6829] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [6841]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6853]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6865]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6877]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6889]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6901] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6913] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6925] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [6937]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6949]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6961]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6973]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [6985]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [6997] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7009] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7021] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [7033]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7045]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7057]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7069]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7081] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7093] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7105] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7117]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7129]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7141]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7153] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7165] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7177] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7189] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7201]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7213]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7225]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7237]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7249] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7261] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7273] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7285] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7297]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7309]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7321]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7333]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
 [7345] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7357] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7369]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7381]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7393]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7405] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7417] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7429]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7441]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
 [7453] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7465] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7477] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7489] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7501]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7513]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7525]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7537]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
 [7549] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7561] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7573] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7585] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7597]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7609]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7621] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7633] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7645] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
 [7657]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7669]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7681]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7693]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7705]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7717] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7729] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7741] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [7753]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7765]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7777]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7789]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7801]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7813] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7825] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7837] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [7849]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7861]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7873]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7885]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7897]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7909] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7921] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [7933] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [7945]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7957]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7969]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7981]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [7993]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8005] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8017] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8029] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [8041]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8053]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8065]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8077]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8089]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8101] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8113] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8125] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [8137]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8149]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8161]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8173]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8185]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8197] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8209] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8221] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [8233]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8245]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8257]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8269]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8281] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8293] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8305] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8317] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [8329]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8341]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8353]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8365]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8377] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8389] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8401] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8413] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [8425]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8437]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8449]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8461]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8473] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8485] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8497] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8509] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [8521]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8533]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8545]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8557]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8569] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8581] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8593] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8605] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [8617]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8629]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8641]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8653]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8665] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8677] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8689] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8701] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [8713]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8725]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8737]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8749]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8761] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8773] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8785] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8797] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [8809]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8821]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8833]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8845]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8857] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8869] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8881] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8893] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [8905]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8917]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8929]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8941]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [8953] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8965] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8977] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [8989] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [9001]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9013]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9025]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9037]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9049] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9061] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9073] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9085] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [9097]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9109]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9121]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9133]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9145] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9157] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9169] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9181] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [9193]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9205]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9217]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9229]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [9241] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9253] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9265] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9277] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [9289]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9301]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9313]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9325]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [9337] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9349] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9361] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9373] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [9385]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9397]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9409]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9421]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [9433] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9445] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9457] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9469] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [9481]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9493]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9505]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9517]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [9529] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9541] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9553] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9565] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [9577]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9589]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9601]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9613]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [9625] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9637] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9649] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9661] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [9673]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9685]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9697]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9709]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [9721] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9733] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9745] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9757] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [9769]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9781]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9793]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9805]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [9817] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9829] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9841] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9853] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [9865]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9877]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9889]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9901]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [9913] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9925] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9937] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [9949] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
 [9961]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9973]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9985]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [9997]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
[10009] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10021] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10033] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10045] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
[10057]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10069]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10081]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10093]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
[10105] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10117] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10129] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10141] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
[10153]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10165]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10177]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10189]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
[10201] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10213] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10225] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10237] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
[10249]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10261]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10273]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10285]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
[10297] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10309] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10321] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10333] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
[10345]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10357]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10369]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10381]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
[10393] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10405] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10417] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10429] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
[10441]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10453]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10465]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10477]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
[10489] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10501] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10513] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10525] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
[10537]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10549]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10561]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10573]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
[10585] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10597] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10609] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10621] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
[10633]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10645]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10657]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10669]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
[10681] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10693] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10705] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10717] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
[10729]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10741]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10753]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10765]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
[10777] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10789] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10801] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10813] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE
[10825]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10837]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10849]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10861]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
[10873] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10885] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10897] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10909] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[10921]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10933]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10945]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[10957]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
[10969] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10981] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[10993] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11005] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11017]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11029]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11041]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11053]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
[11065] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11077] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11089] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11101] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11113]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11125]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11137]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11149]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
[11161] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11173] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11185] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11197] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11209]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11221]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11233]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11245]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
[11257] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11269] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11281] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11293] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11305]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11317]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11329]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11341]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
[11353] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11365] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11377] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11389] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11401]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11413]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11425]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11437]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
[11449] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11461] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11473] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11485] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11497]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11509]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11521]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11533]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
[11545] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11557] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11569] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11581] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11593]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11605]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11617]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11629]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
[11641] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11653] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11665] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11677] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11689]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11701]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11713]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11725]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
[11737] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11749] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11761] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11773] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11785]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11797]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11809]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11821]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
[11833] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11845] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11857] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11869] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11881]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11893]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11905]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11917]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
[11929] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11941] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11953] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[11965] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[11977]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[11989]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12001]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12013]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
[12025] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12037] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12049] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12061] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[12073]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12085]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12097]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12109]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
[12121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12133] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12145] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12157] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[12169]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12181]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12193]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12205]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
[12217] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12229] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12241] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12253] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[12265]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12277]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12289]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12301]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
[12313] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12325] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12337] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12349] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE
[12361]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12373]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12385]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12397]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
[12409] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12421] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12433] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12445] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[12457]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12469]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12481]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12493]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
[12505] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12517] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12529] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12541] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[12553]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12565]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12577]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12589]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
[12601] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12613] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12625] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12637] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[12649]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12661]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12673]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12685]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
[12697] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12709] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12721] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12733] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[12745]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12757]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12769]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12781]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
[12793] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12805] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12817] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12829] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[12841]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12853]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12865]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12877]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
[12889] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12901] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12913] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12925] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[12937]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12949]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12961]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[12973]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
[12985] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12997] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13009] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13021] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[13033]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13045]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13057]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13069]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
[13081] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13093] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13105] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13117] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[13129]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13141]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13153]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13165]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
[13177] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13189] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13201] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13213] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[13225]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13237]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13249]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13261]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
[13273] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13285] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13297] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13309] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[13321]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13333]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13345]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13357]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
[13369] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13381] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13393] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13405] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[13417]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13429]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13441]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13453]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
[13465] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13477] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13489] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13501] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[13513]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13525]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13537]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13549]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
[13561] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13573] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13585] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13597] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[13609]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13621]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13633]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13645]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
[13657] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13669] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13681] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13693] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[13705]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13717]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13729]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13741]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
[13753] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13765] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13777] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13789] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
[13801]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13813]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13825]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13837]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
[13849] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13861] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13873] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13885] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13897]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13909]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13921]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[13933]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[13945] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13957] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13969] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13981] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13993]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14005]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14017]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14029]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[14041] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14053] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14065] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14077] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14089]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14101]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14113]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14125]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[14137] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14149] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14161] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14173] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14185]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14197]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14209]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14221]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[14233] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14245] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14257] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14269] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14281]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14293]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14305]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14317]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[14329] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14341] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14353] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14365] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14377]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14389]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14401]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14413]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[14425] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14437] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14449] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14461] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14473]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14485]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14497]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14509]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[14521] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14533] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14545] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14557] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14569]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14581]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14593]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14605]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[14617] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14629] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14641] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14653] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14665]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14677]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14689]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14701]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[14713] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14725] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14737] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14749] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14761]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14773]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14785]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14797]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[14809] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14821] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14833] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14845] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14857]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14869]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14881]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14893]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
[14905] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14917] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14929] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14941] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[14953]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[14965]  TRUE  TRUE  TRUE  TRUE
> which(cmn.month$day_night)
Error in which(cmn.month$day_night) : argument to 'which' is not logical
> which(cmn.month$day_night == 'day')
   [1]     1     2     3     4     5     6     7     8     9    10    11    12
  [13]    13    14    15    16    34    35    36    37    38    39    40    41
  [25]    42    43    44    45    46    47    48    49    50    51    52    71
  [37]    72    73    74    75    76    77    78    79    80    81    82    83
  [49]    84    85    86    87    88    89    90    91    92    93    94    95
  [61]    96    97    98    99   100   101   102   103   104   105   106   107
  [73]   108   109   110   111   112   113   114   115   116   117   118   119
  [85]   120   121   122   123   124   125   126   161   162   163   164   165
  [97]   166   167   168   169   170   171   172   173   174   175   176   177
 [109]   178   179   180   181   182   183   184   185   186   187   188   189
 [121]   190   191   192   193   194   195   196   197   198   199   200   201
 [133]   202   203   204   205   206   207   208   209   210   211   212   213
 [145]   214   215   216   217   237   238   239   240   241   242   243   244
 [157]   245   246   247   248   249   250   251   252   253   254   255   256
 [169]   257   258   259   260   261   262   263   264   265   266   267   268
 [181]   269   270   271   288   289   290   291   292   293   294   295   296
 [193]   297   298   299   300   301   302   303   304   305   306   307   308
 [205]   309   310   311   312   313   314   315   316   317   318   319   320
 [217]   321   322   323   345   346   347   348   349   350   351   352   353
 [229]   354   355   356   357   358   359   360   361   362   363   364   365
 [241]   366   367   368   369   370   371   372   373   374   375   376   377
 [253]   378   379   380   381   382   383   384   385   386   387   388   389
 [265]   390   391   392   393   394   395   396   397   398   399   400   401
 [277]   441   442   443   444   445   446   447   448   449   450   451   452
 [289]   453   454   455   456   457   458   459   460   461   462   463   464
 [301]   465   466   467   468   469   470   471   472   473   474   475   476
 [313]   477   478   479   480   481   482   483   484   485   486   487   488
 [325]   489   490   491   492   493   494   495   496   497   537   538   539
 [337]   540   541   542   543   544   545   546   547   548   549   550   551
 [349]   552   553   554   555   556   557   558   559   560   561   562   563
 [361]   564   565   566   567   568   569   570   571   572   573   574   575
 [373]   576   577   578   579   580   581   582   583   584   585   586   587
 [385]   588   589   590   623   624   625   626   627   628   629   630   631
 [397]   632   633   634   635   636   637   638   639   640   641   642   643
 [409]   644   645   646   647   648   649   678   679   680   681   682   683
 [421]   684   685   686   687   688   689   690   691   692   693   694   695
 [433]   696   728   729   730   731   732   733   734   735   736   737   738
 [445]   739   740   741   742   743   744   745   746   747   748   749   750
 [457]   751   752   753   754   755   756   757   758   759   760   761   762
 [469]   763   797   798   799   800   801   802   803   804   805   806   807
 [481]   808   809   810   811   812   813   814   815   816   817   818   819
 [493]   820   821   822   823   824   825   826   827   828   829   830   858
 [505]   859   860   861   862   863   864   865   866   867   868   869   870
 [517]   871   872   873   874   875   876   877   878   879   880   881   882
 [529]   883   884   885   886   887   888   889   918   919   920   921   922
 [541]   923   924   925   926   927   928   929   930   931   932   933   934
 [553]   935   936   937   938   939   940   941   942   943   944   945   946
 [565]   947   948   949   950   951   952   953   954   955   956   957   958
 [577]   959   960   961   962   963   964   965   966   967   968   998   999
 [589]  1000  1001  1002  1003  1004  1005  1006  1007  1008  1009  1010  1011
 [601]  1012  1013  1014  1015  1016  1017  1018  1019  1020  1021  1022  1023
 [613]  1024  1025  1026  1027  1028  1029  1030  1031  1032  1033  1034  1035
 [625]  1036  1037  1038  1039  1040  1041  1042  1043  1044  1045  1073  1074
 [637]  1075  1076  1077  1078  1079  1080  1081  1082  1083  1084  1085  1086
 [649]  1087  1088  1089  1090  1091  1092  1093  1094  1095  1096  1097  1098
 [661]  1099  1100  1101  1102  1103  1104  1105  1106  1107  1108  1109  1110
 [673]  1111  1112  1113  1114  1115  1116  1117  1118  1119  1120  1152  1153
 [685]  1154  1155  1156  1157  1158  1159  1160  1161  1162  1163  1164  1165
 [697]  1166  1167  1168  1169  1170  1171  1172  1173  1174  1175  1176  1177
 [709]  1178  1179  1180  1181  1182  1183  1184  1185  1186  1187  1188  1189
 [721]  1190  1191  1192  1193  1194  1195  1196  1197  1198  1199  1200  1201
 [733]  1202  1203  1204  1205  1206  1207  1208  1209  1235  1236  1237  1238
 [745]  1239  1240  1241  1242  1243  1244  1245  1246  1247  1248  1249  1250
 [757]  1251  1252  1253  1254  1255  1256  1257  1258  1259  1260  1261  1262
 [769]  1263  1264  1265  1266  1267  1268  1269  1270  1271  1272  1273  1274
 [781]  1275  1276  1277  1278  1279  1280  1281  1282  1283  1284  1285  1286
 [793]  1287  1288  1289  1290  1291  1292  1331  1332  1333  1334  1335  1336
 [805]  1337  1338  1339  1340  1341  1342  1343  1344  1345  1346  1347  1348
 [817]  1349  1350  1351  1352  1353  1354  1355  1356  1357  1358  1359  1360
 [829]  1361  1362  1363  1364  1365  1366  1367  1368  1369  1370  1371  1372
 [841]  1373  1374  1375  1376  1377  1378  1379  1380  1381  1382  1383  1384
 [853]  1385  1386  1387  1388  1427  1428  1429  1430  1431  1432  1433  1434
 [865]  1435  1436  1437  1438  1439  1440  1441  1442  1443  1444  1445  1446
 [877]  1447  1448  1449  1450  1451  1452  1453  1454  1455  1456  1457  1458
 [889]  1459  1460  1461  1462  1463  1464  1465  1466  1467  1468  1469  1470
 [901]  1471  1472  1473  1474  1475  1476  1477  1478  1479  1480  1481  1482
 [913]  1483  1484  1523  1524  1525  1526  1527  1528  1529  1530  1531  1532
 [925]  1533  1534  1535  1536  1537  1538  1539  1540  1541  1542  1543  1544
 [937]  1545  1546  1547  1548  1549  1550  1551  1552  1553  1554  1555  1556
 [949]  1557  1558  1559  1560  1594  1595  1596  1597  1598  1599  1600  1601
 [961]  1602  1603  1604  1605  1606  1607  1608  1609  1610  1611  1612  1613
 [973]  1614  1615  1616  1617  1618  1619  1620  1621  1622  1623  1624  1625
 [985]  1626  1627  1628  1629  1630  1631  1632  1633  1634  1635  1636  1637
 [997]  1638  1639  1640  1641  1642  1643  1644  1645  1646  1647  1648  1649
[1009]  1650  1651  1690  1691  1692  1693  1694  1695  1696  1697  1698  1699
[1021]  1700  1701  1702  1703  1704  1705  1706  1707  1708  1709  1710  1711
[1033]  1712  1713  1714  1715  1716  1717  1718  1719  1720  1721  1722  1723
[1045]  1724  1725  1726  1727  1728  1729  1730  1731  1732  1733  1734  1735
[1057]  1736  1737  1738  1739  1740  1741  1742  1743  1744  1745  1746  1780
[1069]  1781  1782  1783  1784  1785  1786  1787  1788  1789  1790  1791  1792
[1081]  1793  1794  1795  1796  1797  1798  1799  1800  1801  1802  1803  1804
[1093]  1805  1806  1807  1808  1809  1810  1811  1812  1813  1814  1815  1854
[1105]  1855  1856  1857  1858  1859  1860  1861  1862  1863  1864  1865  1866
[1117]  1867  1868  1869  1870  1871  1872  1873  1874  1875  1876  1877  1878
[1129]  1879  1880  1881  1882  1883  1884  1885  1886  1887  1888  1889  1890
[1141]  1891  1892  1893  1894  1895  1896  1897  1898  1899  1900  1901  1902
[1153]  1903  1904  1905  1906  1907  1908  1909  1910  1911  1950  1951  1952
[1165]  1953  1954  1955  1956  1957  1958  1959  1960  1961  1962  1963  1964
[1177]  1965  1966  1967  1968  1969  1970  1971  1972  1973  1974  1975  1976
[1189]  1977  1978  1979  1980  1981  1982  1983  1984  1985  1986  1987  1988
[1201]  1989  1990  1991  1992  1993  1994  1995  1996  1997  1998  1999  2000
[1213]  2001  2002  2003  2004  2005  2006  2007  2046  2047  2048  2049  2050
[1225]  2051  2052  2053  2054  2055  2056  2057  2058  2059  2060  2061  2062
[1237]  2063  2064  2065  2066  2067  2068  2069  2070  2071  2072  2073  2074
[1249]  2075  2076  2077  2078  2079  2080  2081  2082  2083  2084  2085  2086
[1261]  2087  2088  2124  2125  2126  2127  2128  2129  2130  2131  2132  2133
[1273]  2134  2135  2136  2137  2138  2139  2140  2141  2142  2143  2144  2145
[1285]  2146  2147  2148  2149  2150  2151  2152  2153  2154  2155  2156  2157
[1297]  2158  2159  2160  2161  2162  2163  2164  2165  2166  2167  2168  2169
[1309]  2170  2171  2172  2173  2174  2175  2176  2177  2178  2179  2180  2181
[1321]  2220  2221  2222  2223  2224  2225  2226  2227  2228  2229  2230  2231
[1333]  2232  2233  2234  2235  2236  2237  2238  2239  2240  2241  2242  2243
[1345]  2244  2245  2246  2247  2248  2249  2250  2251  2252  2253  2254  2255
[1357]  2256  2257  2258  2259  2260  2261  2262  2263  2264  2265  2266  2267
[1369]  2268  2269  2270  2271  2272  2273  2274  2275  2276  2277  2316  2317
[1381]  2318  2319  2320  2321  2322  2323  2324  2325  2326  2327  2328  2329
[1393]  2330  2331  2332  2333  2334  2335  2336  2337  2338  2339  2340  2341
[1405]  2342  2343  2344  2345  2346  2347  2348  2349  2350  2351  2352  2353
[1417]  2354  2355  2356  2357  2358  2359  2360  2361  2362  2363  2364  2365
[1429]  2366  2367  2368  2369  2370  2371  2372  2373  2412  2413  2414  2415
[1441]  2416  2417  2418  2419  2420  2421  2422  2423  2424  2425  2426  2427
[1453]  2428  2429  2430  2431  2432  2433  2434  2435  2436  2437  2438  2439
[1465]  2440  2441  2442  2443  2444  2445  2446  2447  2448  2449  2450  2451
[1477]  2452  2453  2454  2455  2456  2457  2458  2459  2460  2461  2462  2463
[1489]  2464  2465  2466  2467  2468  2469  2505  2506  2507  2508  2509  2510
[1501]  2511  2512  2513  2514  2515  2516  2517  2518  2519  2520  2521  2522
[1513]  2523  2524  2525  2526  2527  2528  2529  2530  2531  2532  2533  2534
[1525]  2535  2536  2537  2538  2539  2540  2541  2542  2543  2544  2545  2546
[1537]  2547  2548  2549  2550  2551  2552  2553  2578  2579  2580  2581  2582
[1549]  2583  2584  2585  2586  2587  2588  2589  2590  2591  2592  2593  2594
[1561]  2595  2596  2597  2598  2599  2600  2601  2602  2603  2604  2605  2606
[1573]  2607  2608  2609  2610  2611  2612  2613  2614  2615  2616  2617  2618
[1585]  2619  2620  2621  2622  2623  2662  2663  2664  2665  2666  2667  2668
[1597]  2669  2670  2671  2672  2673  2674  2675  2676  2677  2678  2679  2680
[1609]  2681  2682  2683  2684  2685  2686  2687  2688  2689  2690  2691  2692
[1621]  2693  2694  2695  2696  2697  2698  2699  2700  2701  2702  2703  2704
[1633]  2705  2706  2707  2708  2709  2710  2711  2712  2713  2714  2715  2716
[1645]  2717  2718  2719  2758  2759  2760  2761  2762  2763  2764  2765  2766
[1657]  2767  2768  2769  2770  2771  2772  2773  2774  2775  2776  2777  2778
[1669]  2779  2780  2781  2782  2783  2784  2785  2786  2787  2788  2789  2790
[1681]  2791  2792  2793  2794  2795  2796  2797  2798  2799  2800  2801  2802
[1693]  2803  2804  2805  2806  2807  2829  2830  2831  2832  2833  2834  2835
[1705]  2836  2837  2838  2839  2840  2841  2842  2843  2844  2845  2846  2847
[1717]  2848  2849  2850  2851  2852  2853  2854  2855  2856  2857  2858  2859
[1729]  2860  2861  2862  2863  2864  2865  2866  2867  2868  2869  2870  2871
[1741]  2872  2873  2911  2912  2913  2914  2915  2916  2917  2918  2919  2920
[1753]  2921  2922  2923  2924  2925  2926  2927  2928  2929  2930  2931  2932
[1765]  2933  2934  2935  2936  2937  2960  2961  2962  2963  2964  2965  2966
[1777]  2967  2968  2969  2970  2971  2972  2973  2974  2975  2976  2977  2978
[1789]  2979  2980  2981  2982  2983  2984  2985  2986  2987  2988  2989  2990
[1801]  2991  2992  2993  2994  2995  2996  2997  2998  2999  3000  3001  3002
[1813]  3003  3004  3005  3006  3007  3008  3009  3010  3011  3012  3050  3051
[1825]  3052  3053  3054  3055  3056  3057  3058  3059  3060  3061  3062  3063
[1837]  3064  3065  3066  3067  3068  3069  3070  3071  3072  3073  3074  3075
[1849]  3076  3077  3078  3079  3080  3081  3082  3083  3084  3085  3086  3087
[1861]  3088  3089  3090  3091  3092  3093  3094  3095  3096  3097  3098  3099
[1873]  3100  3101  3102  3103  3104  3105  3106  3107  3108  3146  3147  3148
[1885]  3149  3150  3151  3152  3153  3154  3155  3156  3157  3158  3159  3160
[1897]  3161  3162  3163  3164  3165  3166  3167  3168  3169  3170  3171  3172
[1909]  3173  3174  3175  3176  3177  3178  3179  3180  3181  3182  3183  3184
[1921]  3185  3186  3187  3188  3189  3190  3191  3192  3193  3194  3195  3196
[1933]  3197  3198  3199  3200  3201  3202  3203  3204  3242  3243  3244  3245
[1945]  3246  3247  3248  3249  3250  3251  3252  3253  3254  3255  3256  3257
[1957]  3258  3259  3260  3261  3262  3263  3264  3265  3266  3267  3268  3269
[1969]  3270  3271  3272  3273  3274  3275  3276  3277  3278  3279  3280  3281
[1981]  3282  3316  3317  3318  3319  3320  3321  3322  3323  3324  3325  3326
[1993]  3327  3328  3329  3330  3331  3332  3333  3334  3335  3336  3337  3338
[2005]  3339  3340  3341  3342  3343  3344  3345  3346  3347  3348  3349  3350
[2017]  3351  3352  3353  3354  3382  3383  3384  3385  3386  3387  3388  3389
[2029]  3390  3391  3392  3393  3394  3395  3396  3397  3398  3399  3400  3421
[2041]  3422  3423  3424  3425  3426  3427  3428  3429  3430  3431  3432  3433
[2053]  3434  3435  3436  3437  3438  3439  3440  3441  3442  3443  3444  3445
[2065]  3468  3469  3470  3471  3472  3473  3474  3475  3476  3477  3478  3479
[2077]  3480  3481  3482  3483  3484  3485  3486  3487  3488  3489  3490  3491
[2089]  3492  3493  3494  3495  3496  3497  3498  3499  3500  3501  3502  3503
[2101]  3504  3505  3506  3507  3508  3509  3510  3511  3512  3513  3514  3552
[2113]  3553  3554  3555  3556  3557  3558  3559  3560  3561  3562  3563  3564
[2125]  3565  3566  3567  3568  3569  3570  3571  3572  3573  3574  3575  3576
[2137]  3577  3578  3579  3580  3581  3582  3583  3584  3585  3586  3587  3588
[2149]  3589  3590  3591  3592  3593  3594  3595  3596  3597  3598  3599  3600
[2161]  3601  3602  3603  3604  3605  3606  3607  3608  3609  3610  3631  3632
[2173]  3633  3634  3635  3636  3637  3638  3639  3640  3641  3642  3643  3644
[2185]  3645  3646  3647  3648  3649  3650  3651  3652  3653  3654  3655  3656
[2197]  3657  3658  3659  3660  3661  3662  3663  3664  3665  3666  3667  3668
[2209]  3669  3670  3671  3672  3673  3674  3675  3676  3677  3678  3679  3680
[2221]  3681  3682  3683  3684  3685  3709  3710  3711  3712  3713  3714  3715
[2233]  3716  3717  3718  3719  3720  3721  3722  3723  3724  3725  3726  3727
[2245]  3728  3729  3730  3731  3732  3733  3734  3735  3736  3737  3738  3739
[2257]  3740  3741  3742  3743  3744  3745  3746  3747  3748  3749  3750  3751
[2269]  3752  3753  3754  3755  3756  3792  3793  3794  3795  3796  3797  3798
[2281]  3799  3800  3801  3802  3803  3804  3805  3806  3807  3808  3809  3810
[2293]  3811  3812  3813  3814  3815  3816  3817  3818  3819  3820  3821  3822
[2305]  3823  3824  3825  3826  3827  3828  3829  3830  3831  3832  3833  3834
[2317]  3835  3836  3837  3838  3839  3840  3841  3842  3843  3844  3845  3846
[2329]  3847  3848  3886  3887  3888  3889  3890  3891  3892  3893  3894  3895
[2341]  3896  3897  3898  3899  3900  3901  3902  3903  3904  3905  3906  3907
[2353]  3908  3909  3910  3911  3912  3913  3914  3915  3916  3917  3918  3919
[2365]  3920  3921  3922  3923  3924  3925  3926  3927  3928  3943  3944  3945
[2377]  3946  3947  3948  3949  3950  3951  3952  3953  3954  3955  3956  3957
[2389]  3958  3959  3960  3961  3962  3963  3964  3965  3966  3967  3985  3986
[2401]  3987  3988  3989  3990  3991  3992  3993  3994  3995  3996  3997  3998
[2413]  3999  4000  4001  4002  4003  4004  4005  4006  4007  4008  4009  4010
[2425]  4011  4012  4013  4014  4015  4016  4017  4018  4019  4020  4021  4022
[2437]  4023  4056  4057  4058  4059  4060  4061  4062  4063  4064  4065  4066
[2449]  4067  4068  4069  4070  4071  4072  4073  4074  4075  4076  4077  4078
[2461]  4079  4080  4081  4082  4083  4084  4085  4086  4087  4088  4089  4090
[2473]  4091  4092  4093  4094  4095  4096  4097  4098  4099  4137  4138  4139
[2485]  4140  4141  4142  4143  4144  4145  4146  4147  4148  4149  4150  4151
[2497]  4152  4153  4154  4155  4156  4157  4158  4159  4160  4161  4162  4163
[2509]  4164  4165  4166  4167  4168  4169  4170  4171  4172  4173  4174  4175
[2521]  4176  4177  4178  4179  4180  4219  4220  4221  4222  4223  4224  4225
[2533]  4226  4227  4228  4229  4230  4231  4232  4233  4234  4235  4236  4237
[2545]  4238  4239  4240  4241  4242  4243  4244  4245  4246  4247  4248  4249
[2557]  4250  4251  4252  4253  4254  4255  4256  4257  4258  4259  4260  4297
[2569]  4298  4299  4300  4301  4302  4303  4304  4305  4306  4307  4308  4309
[2581]  4310  4311  4312  4313  4314  4315  4316  4317  4318  4319  4320  4321
[2593]  4322  4323  4324  4325  4326  4327  4328  4329  4330  4331  4332  4333
[2605]  4334  4335  4336  4337  4338  4371  4372  4373  4374  4375  4376  4377
[2617]  4378  4379  4380  4381  4382  4383  4384  4385  4386  4387  4388  4389
[2629]  4390  4391  4392  4393  4394  4395  4396  4397  4398  4426  4427  4428
[2641]  4429  4430  4431  4432  4433  4434  4435  4436  4437  4438  4439  4440
[2653]  4441  4442  4443  4444  4445  4446  4447  4448  4449  4450  4451  4452
[2665]  4453  4454  4455  4456  4457  4458  4459  4460  4461  4462  4463  4464
[2677]  4465  4466  4467  4468  4469  4470  4471  4472  4473  4474  4475  4476
[2689]  4499  4500  4501  4502  4503  4504  4505  4506  4507  4508  4509  4510
[2701]  4511  4512  4513  4514  4515  4516  4517  4518  4519  4520  4521  4522
[2713]  4523  4524  4525  4526  4527  4528  4529  4530  4531  4532  4533  4534
[2725]  4535  4536  4537  4538  4539  4540  4541  4566  4567  4568  4569  4570
[2737]  4571  4572  4573  4574  4575  4576  4577  4578  4579  4580  4581  4582
[2749]  4583  4584  4585  4586  4587  4588  4589  4590  4591  4592  4593  4594
[2761]  4595  4596  4597  4598  4599  4600  4601  4602  4603  4604  4605  4606
[2773]  4607  4608  4609  4610  4611  4612  4613  4614  4641  4642  4643  4644
[2785]  4645  4646  4647  4648  4649  4650  4651  4652  4653  4654  4655  4656
[2797]  4657  4658  4659  4660  4661  4662  4663  4664  4665  4666  4667  4668
[2809]  4669  4670  4671  4672  4673  4674  4675  4676  4677  4678  4679  4680
[2821]  4681  4682  4703  4704  4705  4706  4707  4708  4709  4710  4711  4712
[2833]  4713  4714  4715  4716  4717  4718  4719  4720  4721  4722  4723  4724
[2845]  4725  4726  4727  4728  4729  4730  4731  4732  4733  4734  4735  4736
[2857]  4737  4738  4739  4740  4741  4742  4743  4778  4779  4780  4781  4782
[2869]  4783  4784  4785  4786  4787  4788  4789  4790  4791  4792  4793  4794
[2881]  4795  4796  4797  4798  4799  4800  4801  4802  4803  4804  4805  4806
[2893]  4807  4808  4809  4810  4811  4812  4813  4814  4815  4816  4817  4818
[2905]  4819  4820  4821  4822  4823  4824  4825  4826  4827  4828  4829  4830
[2917]  4831  4832  4872  4873  4874  4875  4876  4877  4878  4879  4880  4881
[2929]  4882  4883  4884  4885  4886  4887  4888  4889  4890  4891  4892  4893
[2941]  4894  4895  4896  4897  4898  4899  4900  4901  4902  4903  4904  4905
[2953]  4906  4907  4908  4909  4910  4911  4912  4913  4914  4915  4916  4952
[2965]  4953  4954  4955  4956  4957  4958  4959  4960  4961  4962  4963  4964
[2977]  4965  4966  4967  4968  4969  4970  4971  4972  4973  4974  4975  4976
[2989]  4977  4978  4979  4980  4981  4982  4983  4984  4985  4986  5007  5008
[3001]  5009  5010  5011  5012  5013  5014  5015  5016  5017  5018  5019  5020
[3013]  5021  5022  5023  5024  5025  5026  5027  5028  5029  5030  5031  5032
[3025]  5033  5034  5035  5036  5037  5038  5039  5040  5041  5042  5043  5083
[3037]  5084  5085  5086  5087  5088  5089  5090  5091  5092  5093  5094  5095
[3049]  5096  5097  5098  5099  5100  5101  5102  5103  5104  5105  5106  5107
[3061]  5108  5109  5110  5111  5112  5113  5114  5115  5116  5117  5118  5119
[3073]  5120  5121  5122  5123  5124  5125  5126  5127  5128  5129  5130  5131
[3085]  5132  5133  5134  5135  5175  5176  5177  5178  5179  5180  5181  5182
[3097]  5183  5184  5185  5186  5187  5188  5189  5190  5191  5192  5193  5194
[3109]  5195  5196  5197  5198  5199  5200  5201  5202  5203  5204  5205  5206
[3121]  5207  5208  5209  5210  5211  5212  5213  5214  5215  5216  5217  5218
[3133]  5219  5220  5221  5222  5223  5224  5225  5226  5227  5228  5229  5230
[3145]  5231  5271  5272  5273  5274  5275  5276  5277  5278  5279  5280  5281
[3157]  5282  5283  5284  5285  5286  5287  5288  5289  5290  5291  5292  5293
[3169]  5294  5295  5296  5297  5298  5299  5300  5301  5302  5303  5304  5305
[3181]  5306  5307  5308  5309  5310  5311  5312  5313  5314  5315  5316  5317
[3193]  5318  5319  5320  5321  5322  5323  5324  5325  5326  5327  5367  5368
[3205]  5369  5370  5371  5372  5373  5374  5375  5376  5377  5378  5379  5380
[3217]  5381  5382  5383  5384  5385  5386  5387  5388  5389  5390  5391  5392
[3229]  5393  5394  5395  5396  5397  5398  5399  5400  5401  5402  5403  5404
[3241]  5405  5406  5407  5408  5409  5410  5411  5450  5451  5452  5453  5454
[3253]  5455  5456  5457  5458  5459  5460  5461  5462  5463  5464  5465  5466
[3265]  5467  5468  5469  5470  5471  5472  5473  5474  5475  5476  5477  5478
[3277]  5479  5480  5481  5482  5483  5484  5485  5486  5487  5488  5489  5490
[3289]  5491  5492  5493  5494  5495  5496  5497  5498  5499  5500  5501  5502
[3301]  5503  5504  5505  5506  5546  5547  5548  5549  5550  5551  5552  5553
[3313]  5554  5555  5556  5557  5558  5559  5560  5561  5562  5563  5564  5565
[3325]  5566  5567  5568  5569  5570  5571  5572  5573  5574  5575  5576  5577
[3337]  5578  5579  5580  5581  5582  5583  5584  5585  5586  5587  5588  5589
[3349]  5590  5591  5592  5593  5594  5595  5596  5597  5598  5599  5600  5601
[3361]  5602  5642  5643  5644  5645  5646  5647  5648  5649  5650  5651  5652
[3373]  5653  5654  5655  5656  5657  5658  5659  5660  5661  5662  5663  5664
[3385]  5665  5666  5667  5668  5669  5670  5671  5672  5673  5674  5675  5676
[3397]  5677  5678  5679  5680  5681  5682  5683  5684  5685  5686  5687  5688
[3409]  5689  5690  5691  5692  5693  5694  5695  5696  5697  5698  5735  5736
[3421]  5737  5738  5739  5740  5741  5742  5743  5744  5745  5746  5747  5748
[3433]  5749  5750  5751  5752  5753  5754  5755  5756  5757  5758  5759  5760
[3445]  5761  5762  5763  5764  5765  5766  5767  5768  5769  5770  5771  5772
[3457]  5773  5774  5775  5776  5777  5778  5779  5780  5781  5782  5783  5784
[3469]  5785  5786  5787  5788  5789  5790  5791  5829  5830  5831  5832  5833
[3481]  5834  5835  5836  5837  5838  5839  5840  5841  5842  5843  5844  5845
[3493]  5846  5847  5848  5849  5850  5851  5852  5853  5854  5855  5856  5857
[3505]  5858  5859  5860  5861  5862  5863  5864  5865  5866  5867  5868  5869
[3517]  5870  5871  5872  5873  5874  5875  5876  5877  5878  5879  5880  5881
[3529]  5882  5883  5884  5917  5918  5919  5920  5921  5922  5923  5924  5925
[3541]  5926  5927  5928  5929  5930  5931  5932  5933  5934  5935  5936  5937
[3553]  5938  5939  5940  5941  5942  5943  5944  5945  5946  5947  5948  5949
[3565]  5950  5951  5952  5953  5954  5955  5956  5957  5958  5959  5960  5961
[3577]  5962  5963  5964  5965  5966  5967  6000  6001  6002  6003  6004  6005
[3589]  6006  6007  6008  6009  6010  6011  6012  6013  6014  6015  6016  6017
[3601]  6018  6019  6020  6021  6022  6023  6024  6025  6026  6027  6028  6029
[3613]  6030  6031  6032  6033  6034  6035  6036  6037  6038  6039  6040  6041
[3625]  6042  6043  6044  6045  6046  6047  6048  6088  6089  6090  6091  6092
[3637]  6093  6094  6095  6096  6097  6098  6099  6100  6101  6102  6103  6104
[3649]  6105  6106  6107  6108  6109  6110  6111  6112  6113  6114  6115  6116
[3661]  6117  6118  6119  6120  6121  6122  6123  6124  6125  6126  6127  6128
[3673]  6129  6130  6131  6132  6133  6134  6135  6136  6178  6179  6180  6181
[3685]  6182  6183  6184  6185  6186  6187  6188  6189  6190  6191  6192  6193
[3697]  6194  6195  6196  6197  6198  6199  6200  6201  6202  6203  6204  6205
[3709]  6206  6207  6208  6209  6210  6211  6212  6213  6214  6215  6216  6217
[3721]  6218  6219  6220  6221  6222  6223  6224  6225  6226  6227  6269  6270
[3733]  6271  6272  6273  6274  6275  6276  6277  6278  6279  6280  6281  6282
[3745]  6283  6284  6285  6286  6287  6288  6289  6290  6291  6292  6293  6294
[3757]  6295  6296  6297  6298  6299  6300  6301  6302  6303  6304  6305  6306
[3769]  6307  6308  6335  6336  6337  6338  6339  6340  6341  6342  6343  6344
[3781]  6345  6346  6347  6348  6349  6350  6351  6352  6353  6354  6355  6356
[3793]  6357  6358  6359  6360  6361  6362  6363  6364  6365  6366  6367  6368
[3805]  6369  6370  6371  6372  6373  6374  6375  6417  6418  6419  6420  6421
[3817]  6422  6423  6424  6425  6426  6427  6428  6429  6430  6431  6432  6433
[3829]  6434  6435  6436  6437  6438  6439  6440  6441  6442  6443  6444  6445
[3841]  6446  6447  6448  6449  6450  6451  6452  6453  6454  6455  6456  6457
[3853]  6458  6459  6460  6461  6462  6463  6464  6465  6466  6467  6468  6469
[3865]  6470  6471  6510  6511  6512  6513  6514  6515  6516  6517  6518  6519
[3877]  6520  6521  6522  6523  6524  6525  6526  6527  6528  6529  6530  6531
[3889]  6532  6533  6534  6535  6536  6537  6579  6580  6581  6582  6583  6584
[3901]  6585  6586  6587  6588  6589  6590  6591  6592  6593  6594  6595  6596
[3913]  6597  6598  6599  6600  6601  6602  6603  6604  6605  6606  6607  6608
[3925]  6609  6610  6611  6612  6613  6614  6615  6616  6617  6618  6619  6620
[3937]  6621  6622  6623  6624  6625  6626  6627  6669  6670  6671  6672  6673
[3949]  6674  6675  6676  6677  6678  6679  6680  6681  6682  6683  6684  6685
[3961]  6686  6687  6688  6689  6690  6691  6692  6693  6694  6695  6696  6697
[3973]  6698  6699  6700  6701  6702  6703  6743  6744  6745  6746  6747  6748
[3985]  6749  6750  6751  6752  6753  6754  6755  6756  6757  6758  6759  6760
[3997]  6761  6762  6763  6764  6765  6766  6767  6768  6769  6770  6771  6772
[4009]  6773  6774  6775  6776  6777  6778  6779  6780  6781  6782  6783  6784
[4021]  6785  6786  6787  6788  6789  6790  6791  6792  6793  6794  6795  6796
[4033]  6797  6839  6840  6841  6842  6843  6844  6845  6846  6847  6848  6849
[4045]  6850  6851  6852  6853  6854  6855  6856  6857  6858  6859  6860  6861
[4057]  6862  6863  6864  6865  6866  6867  6868  6869  6870  6871  6872  6873
[4069]  6874  6875  6876  6877  6878  6879  6880  6881  6882  6883  6884  6885
[4081]  6886  6887  6888  6889  6890  6891  6892  6893  6935  6936  6937  6938
[4093]  6939  6940  6941  6942  6943  6944  6945  6946  6947  6948  6949  6950
[4105]  6951  6952  6953  6954  6955  6956  6957  6958  6959  6960  6961  6962
[4117]  6963  6964  6965  6966  6967  6968  6969  6970  6971  6972  6973  6974
[4129]  6975  6976  6977  6978  6979  6980  6981  6982  6983  6984  6985  6986
[4141]  6987  6988  6989  7031  7032  7033  7034  7035  7036  7037  7038  7039
[4153]  7040  7041  7042  7043  7044  7045  7046  7047  7048  7049  7050  7051
[4165]  7052  7053  7054  7055  7056  7057  7058  7059  7060  7061  7062  7063
[4177]  7064  7065  7066  7067  7068  7069  7070  7071  7072  7073  7074  7075
[4189]  7076  7077  7078  7079  7080  7107  7108  7109  7110  7111  7112  7113
[4201]  7114  7115  7116  7117  7118  7119  7120  7121  7122  7123  7124  7125
[4213]  7126  7127  7128  7129  7130  7131  7132  7133  7134  7135  7136  7137
[4225]  7138  7139  7140  7141  7142  7143  7144  7145  7146  7147  7148  7149
[4237]  7150  7151  7152  7194  7195  7196  7197  7198  7199  7200  7201  7202
[4249]  7203  7204  7205  7206  7207  7208  7209  7210  7211  7212  7213  7214
[4261]  7215  7216  7217  7218  7219  7220  7221  7222  7223  7224  7225  7226
[4273]  7227  7228  7229  7230  7231  7232  7233  7234  7235  7236  7237  7238
[4285]  7239  7240  7241  7242  7243  7244  7245  7246  7247  7248  7290  7291
[4297]  7292  7293  7294  7295  7296  7297  7298  7299  7300  7301  7302  7303
[4309]  7304  7305  7306  7307  7308  7309  7310  7311  7312  7313  7314  7315
[4321]  7316  7317  7318  7319  7320  7321  7322  7323  7324  7325  7326  7327
[4333]  7328  7329  7330  7331  7332  7333  7334  7335  7336  7337  7338  7339
[4345]  7363  7364  7365  7366  7367  7368  7369  7370  7371  7372  7373  7374
[4357]  7375  7376  7377  7378  7379  7380  7381  7382  7383  7384  7385  7386
[4369]  7387  7388  7389  7390  7391  7392  7393  7394  7395  7396  7420  7421
[4381]  7422  7423  7424  7425  7426  7427  7428  7429  7430  7431  7432  7433
[4393]  7434  7435  7436  7437  7438  7439  7440  7441  7442  7443  7444  7445
[4405]  7446  7447  7490  7491  7492  7493  7494  7495  7496  7497  7498  7499
[4417]  7500  7501  7502  7503  7504  7505  7506  7507  7508  7509  7510  7511
[4429]  7512  7513  7514  7515  7516  7517  7518  7519  7520  7521  7522  7523
[4441]  7524  7525  7526  7527  7528  7529  7530  7531  7532  7533  7534  7535
[4453]  7536  7537  7538  7539  7540  7541  7542  7543  7587  7588  7589  7590
[4465]  7591  7592  7593  7594  7595  7596  7597  7598  7599  7600  7601  7602
[4477]  7603  7604  7605  7606  7607  7608  7609  7610  7611  7655  7656  7657
[4489]  7658  7659  7660  7661  7662  7663  7664  7665  7666  7667  7668  7669
[4501]  7670  7671  7672  7673  7674  7675  7676  7677  7678  7679  7680  7681
[4513]  7682  7683  7684  7685  7686  7687  7688  7689  7690  7691  7692  7693
[4525]  7694  7695  7696  7697  7698  7699  7700  7701  7702  7703  7704  7705
[4537]  7749  7750  7751  7752  7753  7754  7755  7756  7757  7758  7759  7760
[4549]  7761  7762  7763  7764  7765  7766  7767  7768  7769  7770  7771  7772
[4561]  7773  7774  7775  7776  7777  7778  7779  7780  7781  7782  7783  7784
[4573]  7785  7786  7787  7788  7789  7790  7791  7792  7793  7794  7795  7796
[4585]  7797  7798  7799  7800  7801  7845  7846  7847  7848  7849  7850  7851
[4597]  7852  7853  7854  7855  7856  7857  7858  7859  7860  7861  7862  7863
[4609]  7864  7865  7866  7867  7868  7869  7870  7871  7872  7873  7874  7875
[4621]  7876  7877  7878  7879  7880  7881  7882  7883  7884  7885  7886  7887
[4633]  7888  7889  7890  7891  7892  7893  7894  7895  7896  7897  7941  7942
[4645]  7943  7944  7945  7946  7947  7948  7949  7950  7951  7952  7953  7954
[4657]  7955  7956  7957  7958  7959  7960  7961  7962  7963  7964  7965  7966
[4669]  7967  7968  7969  7970  7971  7972  7973  7974  7975  7976  7977  7978
[4681]  7979  7980  7981  7982  7983  7984  7985  7986  7987  7988  7989  7990
[4693]  7991  7992  7993  8037  8038  8039  8040  8041  8042  8043  8044  8045
[4705]  8046  8047  8048  8049  8050  8051  8052  8053  8054  8055  8056  8057
[4717]  8058  8059  8060  8061  8062  8063  8064  8065  8066  8067  8068  8069
[4729]  8070  8071  8072  8073  8074  8075  8076  8077  8078  8079  8080  8081
[4741]  8082  8083  8084  8085  8086  8087  8088  8089  8133  8134  8135  8136
[4753]  8137  8138  8139  8140  8141  8142  8143  8144  8145  8146  8147  8148
[4765]  8149  8150  8151  8152  8153  8154  8155  8156  8157  8158  8159  8160
[4777]  8161  8162  8163  8164  8165  8166  8167  8168  8169  8170  8171  8172
[4789]  8173  8174  8175  8176  8177  8178  8179  8180  8181  8182  8183  8184
[4801]  8185  8229  8230  8231  8232  8233  8234  8235  8236  8237  8238  8239
[4813]  8240  8241  8242  8243  8244  8245  8246  8247  8248  8249  8250  8251
[4825]  8252  8253  8254  8255  8256  8257  8258  8259  8260  8261  8262  8263
[4837]  8264  8265  8266  8267  8268  8269  8270  8271  8272  8273  8274  8275
[4849]  8276  8277  8278  8279  8280  8325  8326  8327  8328  8329  8330  8331
[4861]  8332  8333  8334  8335  8336  8337  8338  8339  8340  8341  8342  8343
[4873]  8344  8345  8346  8347  8348  8349  8350  8351  8352  8353  8354  8355
[4885]  8356  8357  8358  8359  8360  8361  8362  8363  8364  8365  8366  8367
[4897]  8368  8369  8370  8371  8372  8373  8374  8375  8376  8421  8422  8423
[4909]  8424  8425  8426  8427  8428  8429  8430  8431  8432  8433  8434  8435
[4921]  8436  8437  8438  8439  8440  8441  8442  8443  8444  8445  8446  8447
[4933]  8448  8449  8450  8451  8452  8453  8454  8455  8456  8457  8458  8459
[4945]  8460  8461  8462  8463  8464  8465  8466  8467  8468  8469  8470  8471
[4957]  8472  8517  8518  8519  8520  8521  8522  8523  8524  8525  8526  8527
[4969]  8528  8529  8530  8531  8532  8533  8534  8535  8536  8537  8538  8539
[4981]  8540  8541  8542  8543  8544  8545  8546  8547  8548  8549  8550  8551
[4993]  8552  8553  8554  8555  8556  8557  8558  8559  8560  8561  8562  8563
[5005]  8564  8565  8566  8567  8568  8613  8614  8615  8616  8617  8618  8619
[5017]  8620  8621  8622  8623  8624  8625  8626  8627  8628  8629  8630  8631
[5029]  8632  8633  8634  8635  8636  8637  8638  8639  8640  8641  8642  8643
[5041]  8644  8645  8646  8647  8648  8649  8650  8651  8652  8653  8654  8655
[5053]  8656  8657  8658  8659  8660  8661  8662  8663  8664  8709  8710  8711
[5065]  8712  8713  8714  8715  8716  8717  8718  8719  8720  8721  8722  8723
[5077]  8724  8725  8726  8727  8728  8729  8730  8731  8732  8733  8734  8735
[5089]  8736  8737  8738  8739  8740  8741  8742  8743  8744  8745  8746  8747
[5101]  8748  8749  8750  8751  8752  8753  8754  8755  8756  8757  8758  8759
[5113]  8760  8805  8806  8807  8808  8809  8810  8811  8812  8813  8814  8815
[5125]  8816  8817  8818  8819  8820  8821  8822  8823  8824  8825  8826  8827
[5137]  8828  8829  8830  8831  8832  8833  8834  8835  8836  8837  8838  8839
[5149]  8840  8841  8842  8843  8844  8845  8846  8847  8848  8849  8850  8851
[5161]  8852  8853  8854  8855  8856  8901  8902  8903  8904  8905  8906  8907
[5173]  8908  8909  8910  8911  8912  8913  8914  8915  8916  8917  8918  8919
[5185]  8920  8921  8922  8923  8924  8925  8926  8927  8928  8929  8930  8931
[5197]  8932  8933  8934  8935  8936  8937  8938  8939  8940  8941  8942  8943
[5209]  8944  8945  8946  8947  8948  8949  8950  8951  8952  8997  8998  8999
[5221]  9000  9001  9002  9003  9004  9005  9006  9007  9008  9009  9010  9011
[5233]  9012  9013  9014  9015  9016  9017  9018  9019  9020  9021  9022  9023
[5245]  9024  9025  9026  9027  9028  9029  9030  9031  9032  9033  9034  9035
[5257]  9036  9037  9038  9039  9040  9041  9042  9043  9044  9045  9046  9047
[5269]  9048  9093  9094  9095  9096  9097  9098  9099  9100  9101  9102  9103
[5281]  9104  9105  9106  9107  9108  9109  9110  9111  9112  9113  9114  9115
[5293]  9116  9117  9118  9119  9120  9121  9122  9123  9124  9125  9126  9127
[5305]  9128  9129  9130  9131  9132  9133  9134  9135  9136  9137  9138  9139
[5317]  9140  9141  9142  9143  9144  9190  9191  9192  9193  9194  9195  9196
[5329]  9197  9198  9199  9200  9201  9202  9203  9204  9205  9206  9207  9208
[5341]  9209  9210  9211  9212  9213  9214  9215  9216  9217  9218  9219  9220
[5353]  9221  9222  9223  9224  9225  9226  9227  9228  9229  9230  9231  9232
[5365]  9233  9234  9235  9236  9237  9238  9239  9286  9287  9288  9289  9290
[5377]  9291  9292  9293  9294  9295  9296  9297  9298  9299  9300  9301  9302
[5389]  9303  9304  9305  9306  9307  9308  9309  9310  9311  9312  9313  9314
[5401]  9315  9316  9317  9318  9319  9320  9321  9322  9323  9324  9325  9326
[5413]  9327  9328  9329  9330  9331  9332  9333  9334  9335  9382  9383  9384
[5425]  9385  9386  9387  9388  9389  9390  9391  9392  9393  9394  9395  9396
[5437]  9397  9398  9399  9400  9401  9402  9403  9404  9405  9406  9407  9408
[5449]  9409  9410  9411  9412  9413  9414  9415  9416  9417  9418  9419  9420
[5461]  9421  9422  9423  9424  9425  9426  9427  9428  9429  9430  9431  9478
[5473]  9479  9480  9481  9482  9483  9484  9485  9486  9487  9488  9489  9490
[5485]  9491  9492  9493  9494  9495  9496  9497  9498  9499  9500  9501  9502
[5497]  9503  9504  9505  9506  9507  9508  9509  9510  9511  9512  9513  9514
[5509]  9515  9516  9517  9518  9519  9520  9521  9522  9523  9524  9525  9526
[5521]  9527  9574  9575  9576  9577  9578  9579  9580  9581  9582  9583  9584
[5533]  9585  9586  9587  9588  9589  9590  9591  9592  9593  9594  9595  9596
[5545]  9597  9598  9599  9600  9601  9602  9603  9604  9605  9606  9607  9608
[5557]  9609  9610  9611  9612  9613  9614  9615  9616  9617  9618  9619  9620
[5569]  9621  9622  9623  9670  9671  9672  9673  9674  9675  9676  9677  9678
[5581]  9679  9680  9681  9682  9683  9684  9685  9686  9687  9688  9689  9690
[5593]  9691  9692  9693  9694  9695  9696  9697  9698  9699  9700  9701  9702
[5605]  9703  9704  9705  9706  9707  9708  9709  9710  9711  9712  9713  9714
[5617]  9715  9716  9717  9718  9719  9766  9767  9768  9769  9770  9771  9772
[5629]  9773  9774  9775  9776  9777  9778  9779  9780  9781  9782  9783  9784
[5641]  9785  9786  9787  9788  9789  9790  9791  9792  9793  9794  9795  9796
[5653]  9797  9798  9799  9800  9801  9802  9803  9804  9805  9806  9807  9808
[5665]  9809  9810  9811  9812  9813  9814  9815  9862  9863  9864  9865  9866
[5677]  9867  9868  9869  9870  9871  9872  9873  9874  9875  9876  9877  9878
[5689]  9879  9880  9881  9882  9883  9884  9885  9886  9887  9888  9889  9890
[5701]  9891  9892  9893  9894  9895  9896  9897  9898  9899  9900  9901  9902
[5713]  9903  9904  9905  9906  9907  9908  9909  9910  9911  9958  9959  9960
[5725]  9961  9962  9963  9964  9965  9966  9967  9968  9969  9970  9971  9972
[5737]  9973  9974  9975  9976  9977  9978  9979  9980  9981  9982  9983  9984
[5749]  9985  9986  9987  9988  9989  9990  9991  9992  9993  9994  9995  9996
[5761]  9997  9998  9999 10000 10001 10002 10003 10004 10005 10006 10007 10054
[5773] 10055 10056 10057 10058 10059 10060 10061 10062 10063 10064 10065 10066
[5785] 10067 10068 10069 10070 10071 10072 10073 10074 10075 10076 10077 10078
[5797] 10079 10080 10081 10082 10083 10084 10085 10086 10087 10088 10089 10090
[5809] 10091 10092 10093 10094 10095 10096 10097 10098 10099 10100 10101 10102
[5821] 10103 10150 10151 10152 10153 10154 10155 10156 10157 10158 10159 10160
[5833] 10161 10162 10163 10164 10165 10166 10167 10168 10169 10170 10171 10172
[5845] 10173 10174 10175 10176 10177 10178 10179 10180 10181 10182 10183 10184
[5857] 10185 10186 10187 10188 10189 10190 10191 10192 10193 10194 10195 10196
[5869] 10197 10198 10246 10247 10248 10249 10250 10251 10252 10253 10254 10255
[5881] 10256 10257 10258 10259 10260 10261 10262 10263 10264 10265 10266 10267
[5893] 10268 10269 10270 10271 10272 10273 10274 10275 10276 10277 10278 10279
[5905] 10280 10281 10282 10283 10284 10285 10286 10287 10288 10289 10290 10291
[5917] 10292 10293 10294 10342 10343 10344 10345 10346 10347 10348 10349 10350
[5929] 10351 10352 10353 10354 10355 10356 10357 10358 10359 10360 10361 10362
[5941] 10363 10364 10365 10366 10367 10368 10369 10370 10371 10372 10373 10374
[5953] 10375 10376 10377 10378 10379 10380 10381 10382 10383 10384 10385 10386
[5965] 10387 10388 10389 10390 10438 10439 10440 10441 10442 10443 10444 10445
[5977] 10446 10447 10448 10449 10450 10451 10452 10453 10454 10455 10456 10457
[5989] 10458 10459 10460 10461 10462 10463 10464 10465 10466 10467 10468 10469
[6001] 10470 10471 10472 10473 10474 10475 10476 10477 10478 10479 10480 10481
[6013] 10482 10483 10484 10485 10486 10534 10535 10536 10537 10538 10539 10540
[6025] 10541 10542 10543 10544 10545 10546 10547 10548 10549 10550 10551 10552
[6037] 10553 10554 10555 10556 10557 10558 10559 10560 10561 10562 10563 10564
[6049] 10565 10566 10567 10568 10569 10570 10571 10572 10573 10574 10575 10576
[6061] 10577 10578 10579 10580 10581 10582 10630 10631 10632 10633 10634 10635
[6073] 10636 10637 10638 10639 10640 10641 10642 10643 10644 10645 10646 10647
[6085] 10648 10649 10650 10651 10652 10653 10654 10655 10656 10657 10658 10659
[6097] 10660 10661 10662 10663 10664 10665 10666 10667 10668 10669 10670 10671
[6109] 10672 10673 10674 10675 10676 10677 10678 10726 10727 10728 10729 10730
[6121] 10731 10732 10733 10734 10735 10736 10737 10738 10739 10740 10741 10742
[6133] 10743 10744 10745 10746 10747 10748 10749 10750 10751 10752 10753 10754
[6145] 10755 10756 10757 10758 10759 10760 10761 10762 10763 10764 10765 10766
[6157] 10767 10768 10769 10770 10771 10772 10773 10774 10822 10823 10824 10825
[6169] 10826 10827 10828 10829 10830 10831 10832 10833 10834 10835 10836 10837
[6181] 10838 10839 10840 10841 10842 10843 10844 10845 10846 10847 10848 10849
[6193] 10850 10851 10852 10853 10854 10855 10856 10857 10858 10859 10860 10861
[6205] 10862 10863 10864 10865 10866 10867 10868 10869 10870 10919 10920 10921
[6217] 10922 10923 10924 10925 10926 10927 10928 10929 10930 10931 10932 10933
[6229] 10934 10935 10936 10937 10938 10939 10940 10941 10942 10943 10944 10945
[6241] 10946 10947 10948 10949 10950 10951 10952 10953 10954 10955 10956 10957
[6253] 10958 10959 10960 10961 10962 10963 10964 10965 10966 11015 11016 11017
[6265] 11018 11019 11020 11021 11022 11023 11024 11025 11026 11027 11028 11029
[6277] 11030 11031 11032 11033 11034 11035 11036 11037 11038 11039 11040 11041
[6289] 11042 11043 11044 11045 11046 11047 11048 11049 11050 11051 11052 11053
[6301] 11054 11055 11056 11057 11058 11059 11060 11061 11111 11112 11113 11114
[6313] 11115 11116 11117 11118 11119 11120 11121 11122 11123 11124 11125 11126
[6325] 11127 11128 11129 11130 11131 11132 11133 11134 11135 11136 11137 11138
[6337] 11139 11140 11141 11142 11143 11144 11145 11146 11147 11148 11149 11150
[6349] 11151 11152 11153 11154 11155 11156 11157 11207 11208 11209 11210 11211
[6361] 11212 11213 11214 11215 11216 11217 11218 11219 11220 11221 11222 11223
[6373] 11224 11225 11226 11227 11228 11229 11230 11231 11232 11233 11234 11235
[6385] 11236 11237 11238 11239 11240 11241 11242 11243 11244 11245 11246 11247
[6397] 11248 11249 11250 11251 11252 11253 11303 11304 11305 11306 11307 11308
[6409] 11309 11310 11311 11312 11313 11314 11315 11316 11317 11318 11319 11320
[6421] 11321 11322 11323 11324 11325 11326 11327 11328 11329 11330 11331 11332
[6433] 11333 11334 11335 11336 11337 11338 11339 11340 11341 11342 11343 11344
[6445] 11345 11346 11347 11348 11349 11399 11400 11401 11402 11403 11404 11405
[6457] 11406 11407 11408 11409 11410 11411 11412 11413 11414 11415 11416 11417
[6469] 11418 11419 11420 11421 11422 11423 11424 11425 11426 11427 11428 11429
[6481] 11430 11431 11432 11433 11434 11435 11436 11437 11438 11439 11440 11441
[6493] 11442 11443 11444 11445 11495 11496 11497 11498 11499 11500 11501 11502
[6505] 11503 11504 11505 11506 11507 11508 11509 11510 11511 11512 11513 11514
[6517] 11515 11516 11517 11518 11519 11520 11521 11522 11523 11524 11525 11526
[6529] 11527 11528 11529 11530 11531 11532 11533 11534 11535 11536 11537 11538
[6541] 11539 11540 11541 11591 11592 11593 11594 11595 11596 11597 11598 11599
[6553] 11600 11601 11602 11603 11604 11605 11606 11607 11608 11609 11610 11611
[6565] 11612 11613 11614 11615 11616 11617 11618 11619 11620 11621 11622 11623
[6577] 11624 11625 11626 11627 11628 11629 11630 11631 11632 11633 11634 11635
[6589] 11636 11637 11687 11688 11689 11690 11691 11692 11693 11694 11695 11696
[6601] 11697 11698 11699 11700 11701 11702 11703 11704 11705 11706 11707 11708
[6613] 11709 11710 11711 11712 11713 11714 11715 11716 11717 11718 11719 11720
[6625] 11721 11722 11723 11724 11725 11726 11727 11728 11729 11730 11731 11732
[6637] 11733 11783 11784 11785 11786 11787 11788 11789 11790 11791 11792 11793
[6649] 11794 11795 11796 11797 11798 11799 11800 11801 11802 11803 11804 11805
[6661] 11806 11807 11808 11809 11810 11811 11812 11813 11814 11815 11816 11817
[6673] 11818 11819 11820 11821 11822 11823 11824 11825 11826 11827 11828 11829
[6685] 11879 11880 11881 11882 11883 11884 11885 11886 11887 11888 11889 11890
[6697] 11891 11892 11893 11894 11895 11896 11897 11898 11899 11900 11901 11902
[6709] 11903 11904 11905 11906 11907 11908 11909 11910 11911 11912 11913 11914
[6721] 11915 11916 11917 11918 11919 11920 11921 11922 11923 11924 11925 11975
[6733] 11976 11977 11978 11979 11980 11981 11982 11983 11984 11985 11986 11987
[6745] 11988 11989 11990 11991 11992 11993 11994 11995 11996 11997 11998 11999
[6757] 12000 12001 12002 12003 12004 12005 12006 12007 12008 12009 12010 12011
[6769] 12012 12013 12014 12015 12016 12017 12018 12019 12020 12071 12072 12073
[6781] 12074 12075 12076 12077 12078 12079 12080 12081 12082 12083 12084 12085
[6793] 12086 12087 12088 12089 12090 12091 12092 12093 12094 12095 12096 12097
[6805] 12098 12099 12100 12101 12102 12103 12104 12105 12106 12107 12108 12109
[6817] 12110 12111 12112 12113 12114 12115 12116 12167 12168 12169 12170 12171
[6829] 12172 12173 12174 12175 12176 12177 12178 12179 12180 12181 12182 12183
[6841] 12184 12185 12186 12187 12188 12189 12190 12191 12192 12193 12194 12195
[6853] 12196 12197 12198 12199 12200 12201 12202 12203 12204 12205 12206 12207
[6865] 12208 12209 12210 12211 12212 12263 12264 12265 12266 12267 12268 12269
[6877] 12270 12271 12272 12273 12274 12275 12276 12277 12278 12279 12280 12281
[6889] 12282 12283 12284 12285 12286 12287 12288 12289 12290 12291 12292 12293
[6901] 12294 12295 12296 12297 12298 12299 12300 12301 12302 12303 12304 12305
[6913] 12306 12307 12308 12359 12360 12361 12362 12363 12364 12365 12366 12367
[6925] 12368 12369 12370 12371 12372 12373 12374 12375 12376 12377 12378 12379
[6937] 12380 12381 12382 12383 12384 12385 12386 12387 12388 12389 12390 12391
[6949] 12392 12393 12394 12395 12396 12397 12398 12399 12400 12401 12402 12403
[6961] 12404 12456 12457 12458 12459 12460 12461 12462 12463 12464 12465 12466
[6973] 12467 12468 12469 12470 12471 12472 12473 12474 12475 12476 12477 12478
[6985] 12479 12480 12481 12482 12483 12484 12485 12486 12487 12488 12489 12490
[6997] 12491 12492 12493 12494 12495 12496 12497 12498 12499 12500 12552 12553
[7009] 12554 12555 12556 12557 12558 12559 12560 12561 12562 12563 12564 12565
[7021] 12566 12567 12568 12569 12570 12571 12572 12573 12574 12575 12576 12577
[7033] 12578 12579 12580 12581 12582 12583 12584 12585 12586 12587 12588 12589
[7045] 12590 12591 12592 12593 12594 12595 12596 12648 12649 12650 12651 12652
[7057] 12653 12654 12655 12656 12657 12658 12659 12660 12661 12662 12663 12664
[7069] 12665 12666 12667 12668 12669 12670 12671 12672 12673 12674 12675 12676
[7081] 12677 12678 12679 12680 12681 12682 12683 12684 12685 12686 12687 12688
[7093] 12689 12690 12691 12692 12744 12745 12746 12747 12748 12749 12750 12751
[7105] 12752 12753 12754 12755 12756 12757 12758 12759 12760 12761 12762 12763
[7117] 12764 12765 12766 12767 12768 12769 12770 12771 12772 12773 12774 12775
[7129] 12776 12777 12778 12779 12780 12781 12782 12783 12784 12785 12786 12787
[7141] 12788 12840 12841 12842 12843 12844 12845 12846 12847 12848 12849 12850
[7153] 12851 12852 12853 12854 12855 12856 12857 12858 12859 12860 12861 12862
[7165] 12863 12864 12865 12866 12867 12868 12869 12870 12871 12872 12873 12874
[7177] 12875 12876 12877 12878 12879 12880 12881 12882 12883 12884 12936 12937
[7189] 12938 12939 12940 12941 12942 12943 12944 12945 12946 12947 12948 12949
[7201] 12950 12951 12952 12953 12954 12955 12956 12957 12958 12959 12960 12961
[7213] 12962 12963 12964 12965 12966 12967 12968 12969 12970 12971 12972 12973
[7225] 12974 12975 12976 12977 12978 12979 13032 13033 13034 13035 13036 13037
[7237] 13038 13039 13040 13041 13042 13043 13044 13045 13046 13047 13048 13049
[7249] 13050 13051 13052 13053 13054 13055 13056 13057 13058 13059 13060 13061
[7261] 13062 13063 13064 13065 13066 13067 13068 13069 13070 13071 13072 13073
[7273] 13074 13075 13128 13129 13130 13131 13132 13133 13134 13135 13136 13137
[7285] 13138 13139 13140 13141 13142 13143 13144 13145 13146 13147 13148 13149
[7297] 13150 13151 13152 13153 13154 13155 13156 13157 13158 13159 13160 13161
[7309] 13162 13163 13164 13165 13166 13167 13168 13169 13170 13171 13224 13225
[7321] 13226 13227 13228 13229 13230 13231 13232 13233 13234 13235 13236 13237
[7333] 13238 13239 13240 13241 13242 13243 13244 13245 13246 13247 13248 13249
[7345] 13250 13251 13252 13253 13254 13255 13256 13257 13258 13259 13260 13261
[7357] 13262 13263 13264 13265 13266 13267 13320 13321 13322 13323 13324 13325
[7369] 13326 13327 13328 13329 13330 13331 13332 13333 13334 13335 13336 13337
[7381] 13338 13339 13340 13341 13342 13343 13344 13345 13346 13347 13348 13349
[7393] 13350 13351 13352 13353 13354 13355 13356 13357 13358 13359 13360 13361
[7405] 13362 13363 13416 13417 13418 13419 13420 13421 13422 13423 13424 13425
[7417] 13426 13427 13428 13429 13430 13431 13432 13433 13434 13435 13436 13437
[7429] 13438 13439 13440 13441 13442 13443 13444 13445 13446 13447 13448 13449
[7441] 13450 13451 13452 13453 13454 13455 13456 13457 13458 13459 13512 13513
[7453] 13514 13515 13516 13517 13518 13519 13520 13521 13522 13523 13524 13525
[7465] 13526 13527 13528 13529 13530 13531 13532 13533 13534 13535 13536 13537
[7477] 13538 13539 13540 13541 13542 13543 13544 13545 13546 13547 13548 13549
[7489] 13550 13551 13552 13553 13554 13555 13608 13609 13610 13611 13612 13613
[7501] 13614 13615 13616 13617 13618 13619 13620 13621 13622 13623 13624 13625
[7513] 13626 13627 13628 13629 13630 13631 13632 13633 13634 13635 13636 13637
[7525] 13638 13639 13640 13641 13642 13643 13644 13645 13646 13647 13648 13649
[7537] 13650 13651 13704 13705 13706 13707 13708 13709 13710 13711 13712 13713
[7549] 13714 13715 13716 13717 13718 13719 13720 13721 13722 13723 13724 13725
[7561] 13726 13727 13728 13729 13730 13731 13732 13733 13734 13735 13736 13737
[7573] 13738 13739 13740 13741 13742 13743 13744 13745 13746 13747 13800 13801
[7585] 13802 13803 13804 13805 13806 13807 13808 13809 13810 13811 13812 13813
[7597] 13814 13815 13816 13817 13818 13819 13820 13821 13822 13823 13824 13825
[7609] 13826 13827 13828 13829 13830 13831 13832 13833 13834 13835 13836 13837
[7621] 13838 13839 13840 13841 13842 13843 13897 13898 13899 13900 13901 13902
[7633] 13903 13904 13905 13906 13907 13908 13909 13910 13911 13912 13913 13914
[7645] 13915 13916 13917 13918 13919 13920 13921 13922 13923 13924 13925 13926
[7657] 13927 13928 13929 13930 13931 13932 13933 13934 13935 13936 13937 13938
[7669] 13993 13994 13995 13996 13997 13998 13999 14000 14001 14002 14003 14004
[7681] 14005 14006 14007 14008 14009 14010 14011 14012 14013 14014 14015 14016
[7693] 14017 14018 14019 14020 14021 14022 14023 14024 14025 14026 14027 14028
[7705] 14029 14030 14031 14032 14033 14034 14089 14090 14091 14092 14093 14094
[7717] 14095 14096 14097 14098 14099 14100 14101 14102 14103 14104 14105 14106
[7729] 14107 14108 14109 14110 14111 14112 14113 14114 14115 14116 14117 14118
[7741] 14119 14120 14121 14122 14123 14124 14125 14126 14127 14128 14129 14130
[7753] 14185 14186 14187 14188 14189 14190 14191 14192 14193 14194 14195 14196
[7765] 14197 14198 14199 14200 14201 14202 14203 14204 14205 14206 14207 14208
[7777] 14209 14210 14211 14212 14213 14214 14215 14216 14217 14218 14219 14220
[7789] 14221 14222 14223 14224 14225 14226 14281 14282 14283 14284 14285 14286
[7801] 14287 14288 14289 14290 14291 14292 14293 14294 14295 14296 14297 14298
[7813] 14299 14300 14301 14302 14303 14304 14305 14306 14307 14308 14309 14310
[7825] 14311 14312 14313 14314 14315 14316 14317 14318 14319 14320 14321 14322
[7837] 14377 14378 14379 14380 14381 14382 14383 14384 14385 14386 14387 14388
[7849] 14389 14390 14391 14392 14393 14394 14395 14396 14397 14398 14399 14400
[7861] 14401 14402 14403 14404 14405 14406 14407 14408 14409 14410 14411 14412
[7873] 14413 14414 14415 14416 14417 14418 14473 14474 14475 14476 14477 14478
[7885] 14479 14480 14481 14482 14483 14484 14485 14486 14487 14488 14489 14490
[7897] 14491 14492 14493 14494 14495 14496 14497 14498 14499 14500 14501 14502
[7909] 14503 14504 14505 14506 14507 14508 14509 14510 14511 14512 14513 14514
[7921] 14569 14570 14571 14572 14573 14574 14575 14576 14577 14578 14579 14580
[7933] 14581 14582 14583 14584 14585 14586 14587 14588 14589 14590 14591 14592
[7945] 14593 14594 14595 14596 14597 14598 14599 14600 14601 14602 14603 14604
[7957] 14605 14606 14607 14608 14609 14610 14665 14666 14667 14668 14669 14670
[7969] 14671 14672 14673 14674 14675 14676 14677 14678 14679 14680 14681 14682
[7981] 14683 14684 14685 14686 14687 14688 14689 14690 14691 14692 14693 14694
[7993] 14695 14696 14697 14698 14699 14700 14701 14702 14703 14704 14705 14706
[8005] 14761 14762 14763 14764 14765 14766 14767 14768 14769 14770 14771 14772
[8017] 14773 14774 14775 14776 14777 14778 14779 14780 14781 14782 14783 14784
[8029] 14785 14786 14787 14788 14789 14790 14791 14792 14793 14794 14795 14796
[8041] 14797 14798 14799 14800 14801 14802 14857 14858 14859 14860 14861 14862
[8053] 14863 14864 14865 14866 14867 14868 14869 14870 14871 14872 14873 14874
[8065] 14875 14876 14877 14878 14879 14880 14881 14882 14883 14884 14885 14886
[8077] 14887 14888 14889 14890 14891 14892 14893 14894 14895 14896 14897 14898
[8089] 14953 14954 14955 14956 14957 14958 14959 14960 14961 14962 14963 14964
[8101] 14965 14966 14967 14968
> which(cmn.month$day_night == 'night')
   [1]    17    18    19    20    21    22    23    24    25    26    27    28
  [13]    29    30    31    32    33    53    54    55    56    57    58    59
  [25]    60    61    62    63    64    65    66    67    68    69    70   127
  [37]   128   129   130   131   132   133   134   135   136   137   138   139
  [49]   140   141   142   143   144   145   146   147   148   149   150   151
  [61]   152   153   154   155   156   157   158   159   160   218   219   220
  [73]   221   222   223   224   225   226   227   228   229   230   231   232
  [85]   233   234   235   236   272   273   274   275   276   277   278   279
  [97]   280   281   282   283   284   285   286   287   324   325   326   327
 [109]   328   329   330   331   332   333   334   335   336   337   338   339
 [121]   340   341   342   343   344   402   403   404   405   406   407   408
 [133]   409   410   411   412   413   414   415   416   417   418   419   420
 [145]   421   422   423   424   425   426   427   428   429   430   431   432
 [157]   433   434   435   436   437   438   439   440   498   499   500   501
 [169]   502   503   504   505   506   507   508   509   510   511   512   513
 [181]   514   515   516   517   518   519   520   521   522   523   524   525
 [193]   526   527   528   529   530   531   532   533   534   535   536   591
 [205]   592   593   594   595   596   597   598   599   600   601   602   603
 [217]   604   605   606   607   608   609   610   611   612   613   614   615
 [229]   616   617   618   619   620   621   622   650   651   652   653   654
 [241]   655   656   657   658   659   660   661   662   663   664   665   666
 [253]   667   668   669   670   671   672   673   674   675   676   677   697
 [265]   698   699   700   701   702   703   704   705   706   707   708   709
 [277]   710   711   712   713   714   715   716   717   718   719   720   721
 [289]   722   723   724   725   726   727   764   765   766   767   768   769
 [301]   770   771   772   773   774   775   776   777   778   779   780   781
 [313]   782   783   784   785   786   787   788   789   790   791   792   793
 [325]   794   795   796   831   832   833   834   835   836   837   838   839
 [337]   840   841   842   843   844   845   846   847   848   849   850   851
 [349]   852   853   854   855   856   857   890   891   892   893   894   895
 [361]   896   897   898   899   900   901   902   903   904   905   906   907
 [373]   908   909   910   911   912   913   914   915   916   917   969   970
 [385]   971   972   973   974   975   976   977   978   979   980   981   982
 [397]   983   984   985   986   987   988   989   990   991   992   993   994
 [409]   995   996   997  1046  1047  1048  1049  1050  1051  1052  1053  1054
 [421]  1055  1056  1057  1058  1059  1060  1061  1062  1063  1064  1065  1066
 [433]  1067  1068  1069  1070  1071  1072  1121  1122  1123  1124  1125  1126
 [445]  1127  1128  1129  1130  1131  1132  1133  1134  1135  1136  1137  1138
 [457]  1139  1140  1141  1142  1143  1144  1145  1146  1147  1148  1149  1150
 [469]  1151  1210  1211  1212  1213  1214  1215  1216  1217  1218  1219  1220
 [481]  1221  1222  1223  1224  1225  1226  1227  1228  1229  1230  1231  1232
 [493]  1233  1234  1293  1294  1295  1296  1297  1298  1299  1300  1301  1302
 [505]  1303  1304  1305  1306  1307  1308  1309  1310  1311  1312  1313  1314
 [517]  1315  1316  1317  1318  1319  1320  1321  1322  1323  1324  1325  1326
 [529]  1327  1328  1329  1330  1389  1390  1391  1392  1393  1394  1395  1396
 [541]  1397  1398  1399  1400  1401  1402  1403  1404  1405  1406  1407  1408
 [553]  1409  1410  1411  1412  1413  1414  1415  1416  1417  1418  1419  1420
 [565]  1421  1422  1423  1424  1425  1426  1485  1486  1487  1488  1489  1490
 [577]  1491  1492  1493  1494  1495  1496  1497  1498  1499  1500  1501  1502
 [589]  1503  1504  1505  1506  1507  1508  1509  1510  1511  1512  1513  1514
 [601]  1515  1516  1517  1518  1519  1520  1521  1522  1561  1562  1563  1564
 [613]  1565  1566  1567  1568  1569  1570  1571  1572  1573  1574  1575  1576
 [625]  1577  1578  1579  1580  1581  1582  1583  1584  1585  1586  1587  1588
 [637]  1589  1590  1591  1592  1593  1652  1653  1654  1655  1656  1657  1658
 [649]  1659  1660  1661  1662  1663  1664  1665  1666  1667  1668  1669  1670
 [661]  1671  1672  1673  1674  1675  1676  1677  1678  1679  1680  1681  1682
 [673]  1683  1684  1685  1686  1687  1688  1689  1747  1748  1749  1750  1751
 [685]  1752  1753  1754  1755  1756  1757  1758  1759  1760  1761  1762  1763
 [697]  1764  1765  1766  1767  1768  1769  1770  1771  1772  1773  1774  1775
 [709]  1776  1777  1778  1779  1816  1817  1818  1819  1820  1821  1822  1823
 [721]  1824  1825  1826  1827  1828  1829  1830  1831  1832  1833  1834  1835
 [733]  1836  1837  1838  1839  1840  1841  1842  1843  1844  1845  1846  1847
 [745]  1848  1849  1850  1851  1852  1853  1912  1913  1914  1915  1916  1917
 [757]  1918  1919  1920  1921  1922  1923  1924  1925  1926  1927  1928  1929
 [769]  1930  1931  1932  1933  1934  1935  1936  1937  1938  1939  1940  1941
 [781]  1942  1943  1944  1945  1946  1947  1948  1949  2008  2009  2010  2011
 [793]  2012  2013  2014  2015  2016  2017  2018  2019  2020  2021  2022  2023
 [805]  2024  2025  2026  2027  2028  2029  2030  2031  2032  2033  2034  2035
 [817]  2036  2037  2038  2039  2040  2041  2042  2043  2044  2045  2089  2090
 [829]  2091  2092  2093  2094  2095  2096  2097  2098  2099  2100  2101  2102
 [841]  2103  2104  2105  2106  2107  2108  2109  2110  2111  2112  2113  2114
 [853]  2115  2116  2117  2118  2119  2120  2121  2122  2123  2182  2183  2184
 [865]  2185  2186  2187  2188  2189  2190  2191  2192  2193  2194  2195  2196
 [877]  2197  2198  2199  2200  2201  2202  2203  2204  2205  2206  2207  2208
 [889]  2209  2210  2211  2212  2213  2214  2215  2216  2217  2218  2219  2278
 [901]  2279  2280  2281  2282  2283  2284  2285  2286  2287  2288  2289  2290
 [913]  2291  2292  2293  2294  2295  2296  2297  2298  2299  2300  2301  2302
 [925]  2303  2304  2305  2306  2307  2308  2309  2310  2311  2312  2313  2314
 [937]  2315  2374  2375  2376  2377  2378  2379  2380  2381  2382  2383  2384
 [949]  2385  2386  2387  2388  2389  2390  2391  2392  2393  2394  2395  2396
 [961]  2397  2398  2399  2400  2401  2402  2403  2404  2405  2406  2407  2408
 [973]  2409  2410  2411  2470  2471  2472  2473  2474  2475  2476  2477  2478
 [985]  2479  2480  2481  2482  2483  2484  2485  2486  2487  2488  2489  2490
 [997]  2491  2492  2493  2494  2495  2496  2497  2498  2499  2500  2501  2502
[1009]  2503  2504  2554  2555  2556  2557  2558  2559  2560  2561  2562  2563
[1021]  2564  2565  2566  2567  2568  2569  2570  2571  2572  2573  2574  2575
[1033]  2576  2577  2624  2625  2626  2627  2628  2629  2630  2631  2632  2633
[1045]  2634  2635  2636  2637  2638  2639  2640  2641  2642  2643  2644  2645
[1057]  2646  2647  2648  2649  2650  2651  2652  2653  2654  2655  2656  2657
[1069]  2658  2659  2660  2661  2720  2721  2722  2723  2724  2725  2726  2727
[1081]  2728  2729  2730  2731  2732  2733  2734  2735  2736  2737  2738  2739
[1093]  2740  2741  2742  2743  2744  2745  2746  2747  2748  2749  2750  2751
[1105]  2752  2753  2754  2755  2756  2757  2808  2809  2810  2811  2812  2813
[1117]  2814  2815  2816  2817  2818  2819  2820  2821  2822  2823  2824  2825
[1129]  2826  2827  2828  2874  2875  2876  2877  2878  2879  2880  2881  2882
[1141]  2883  2884  2885  2886  2887  2888  2889  2890  2891  2892  2893  2894
[1153]  2895  2896  2897  2898  2899  2900  2901  2902  2903  2904  2905  2906
[1165]  2907  2908  2909  2910  2938  2939  2940  2941  2942  2943  2944  2945
[1177]  2946  2947  2948  2949  2950  2951  2952  2953  2954  2955  2956  2957
[1189]  2958  2959  3013  3014  3015  3016  3017  3018  3019  3020  3021  3022
[1201]  3023  3024  3025  3026  3027  3028  3029  3030  3031  3032  3033  3034
[1213]  3035  3036  3037  3038  3039  3040  3041  3042  3043  3044  3045  3046
[1225]  3047  3048  3049  3109  3110  3111  3112  3113  3114  3115  3116  3117
[1237]  3118  3119  3120  3121  3122  3123  3124  3125  3126  3127  3128  3129
[1249]  3130  3131  3132  3133  3134  3135  3136  3137  3138  3139  3140  3141
[1261]  3142  3143  3144  3145  3205  3206  3207  3208  3209  3210  3211  3212
[1273]  3213  3214  3215  3216  3217  3218  3219  3220  3221  3222  3223  3224
[1285]  3225  3226  3227  3228  3229  3230  3231  3232  3233  3234  3235  3236
[1297]  3237  3238  3239  3240  3241  3283  3284  3285  3286  3287  3288  3289
[1309]  3290  3291  3292  3293  3294  3295  3296  3297  3298  3299  3300  3301
[1321]  3302  3303  3304  3305  3306  3307  3308  3309  3310  3311  3312  3313
[1333]  3314  3315  3355  3356  3357  3358  3359  3360  3361  3362  3363  3364
[1345]  3365  3366  3367  3368  3369  3370  3371  3372  3373  3374  3375  3376
[1357]  3377  3378  3379  3380  3381  3401  3402  3403  3404  3405  3406  3407
[1369]  3408  3409  3410  3411  3412  3413  3414  3415  3416  3417  3418  3419
[1381]  3420  3446  3447  3448  3449  3450  3451  3452  3453  3454  3455  3456
[1393]  3457  3458  3459  3460  3461  3462  3463  3464  3465  3466  3467  3515
[1405]  3516  3517  3518  3519  3520  3521  3522  3523  3524  3525  3526  3527
[1417]  3528  3529  3530  3531  3532  3533  3534  3535  3536  3537  3538  3539
[1429]  3540  3541  3542  3543  3544  3545  3546  3547  3548  3549  3550  3551
[1441]  3611  3612  3613  3614  3615  3616  3617  3618  3619  3620  3621  3622
[1453]  3623  3624  3625  3626  3627  3628  3629  3630  3686  3687  3688  3689
[1465]  3690  3691  3692  3693  3694  3695  3696  3697  3698  3699  3700  3701
[1477]  3702  3703  3704  3705  3706  3707  3708  3757  3758  3759  3760  3761
[1489]  3762  3763  3764  3765  3766  3767  3768  3769  3770  3771  3772  3773
[1501]  3774  3775  3776  3777  3778  3779  3780  3781  3782  3783  3784  3785
[1513]  3786  3787  3788  3789  3790  3791  3849  3850  3851  3852  3853  3854
[1525]  3855  3856  3857  3858  3859  3860  3861  3862  3863  3864  3865  3866
[1537]  3867  3868  3869  3870  3871  3872  3873  3874  3875  3876  3877  3878
[1549]  3879  3880  3881  3882  3883  3884  3885  3929  3930  3931  3932  3933
[1561]  3934  3935  3936  3937  3938  3939  3940  3941  3942  3968  3969  3970
[1573]  3971  3972  3973  3974  3975  3976  3977  3978  3979  3980  3981  3982
[1585]  3983  3984  4024  4025  4026  4027  4028  4029  4030  4031  4032  4033
[1597]  4034  4035  4036  4037  4038  4039  4040  4041  4042  4043  4044  4045
[1609]  4046  4047  4048  4049  4050  4051  4052  4053  4054  4055  4100  4101
[1621]  4102  4103  4104  4105  4106  4107  4108  4109  4110  4111  4112  4113
[1633]  4114  4115  4116  4117  4118  4119  4120  4121  4122  4123  4124  4125
[1645]  4126  4127  4128  4129  4130  4131  4132  4133  4134  4135  4136  4181
[1657]  4182  4183  4184  4185  4186  4187  4188  4189  4190  4191  4192  4193
[1669]  4194  4195  4196  4197  4198  4199  4200  4201  4202  4203  4204  4205
[1681]  4206  4207  4208  4209  4210  4211  4212  4213  4214  4215  4216  4217
[1693]  4218  4261  4262  4263  4264  4265  4266  4267  4268  4269  4270  4271
[1705]  4272  4273  4274  4275  4276  4277  4278  4279  4280  4281  4282  4283
[1717]  4284  4285  4286  4287  4288  4289  4290  4291  4292  4293  4294  4295
[1729]  4296  4339  4340  4341  4342  4343  4344  4345  4346  4347  4348  4349
[1741]  4350  4351  4352  4353  4354  4355  4356  4357  4358  4359  4360  4361
[1753]  4362  4363  4364  4365  4366  4367  4368  4369  4370  4399  4400  4401
[1765]  4402  4403  4404  4405  4406  4407  4408  4409  4410  4411  4412  4413
[1777]  4414  4415  4416  4417  4418  4419  4420  4421  4422  4423  4424  4425
[1789]  4477  4478  4479  4480  4481  4482  4483  4484  4485  4486  4487  4488
[1801]  4489  4490  4491  4492  4493  4494  4495  4496  4497  4498  4542  4543
[1813]  4544  4545  4546  4547  4548  4549  4550  4551  4552  4553  4554  4555
[1825]  4556  4557  4558  4559  4560  4561  4562  4563  4564  4565  4615  4616
[1837]  4617  4618  4619  4620  4621  4622  4623  4624  4625  4626  4627  4628
[1849]  4629  4630  4631  4632  4633  4634  4635  4636  4637  4638  4639  4640
[1861]  4683  4684  4685  4686  4687  4688  4689  4690  4691  4692  4693  4694
[1873]  4695  4696  4697  4698  4699  4700  4701  4702  4744  4745  4746  4747
[1885]  4748  4749  4750  4751  4752  4753  4754  4755  4756  4757  4758  4759
[1897]  4760  4761  4762  4763  4764  4765  4766  4767  4768  4769  4770  4771
[1909]  4772  4773  4774  4775  4776  4777  4833  4834  4835  4836  4837  4838
[1921]  4839  4840  4841  4842  4843  4844  4845  4846  4847  4848  4849  4850
[1933]  4851  4852  4853  4854  4855  4856  4857  4858  4859  4860  4861  4862
[1945]  4863  4864  4865  4866  4867  4868  4869  4870  4871  4917  4918  4919
[1957]  4920  4921  4922  4923  4924  4925  4926  4927  4928  4929  4930  4931
[1969]  4932  4933  4934  4935  4936  4937  4938  4939  4940  4941  4942  4943
[1981]  4944  4945  4946  4947  4948  4949  4950  4951  4987  4988  4989  4990
[1993]  4991  4992  4993  4994  4995  4996  4997  4998  4999  5000  5001  5002
[2005]  5003  5004  5005  5006  5044  5045  5046  5047  5048  5049  5050  5051
[2017]  5052  5053  5054  5055  5056  5057  5058  5059  5060  5061  5062  5063
[2029]  5064  5065  5066  5067  5068  5069  5070  5071  5072  5073  5074  5075
[2041]  5076  5077  5078  5079  5080  5081  5082  5136  5137  5138  5139  5140
[2053]  5141  5142  5143  5144  5145  5146  5147  5148  5149  5150  5151  5152
[2065]  5153  5154  5155  5156  5157  5158  5159  5160  5161  5162  5163  5164
[2077]  5165  5166  5167  5168  5169  5170  5171  5172  5173  5174  5232  5233
[2089]  5234  5235  5236  5237  5238  5239  5240  5241  5242  5243  5244  5245
[2101]  5246  5247  5248  5249  5250  5251  5252  5253  5254  5255  5256  5257
[2113]  5258  5259  5260  5261  5262  5263  5264  5265  5266  5267  5268  5269
[2125]  5270  5328  5329  5330  5331  5332  5333  5334  5335  5336  5337  5338
[2137]  5339  5340  5341  5342  5343  5344  5345  5346  5347  5348  5349  5350
[2149]  5351  5352  5353  5354  5355  5356  5357  5358  5359  5360  5361  5362
[2161]  5363  5364  5365  5366  5412  5413  5414  5415  5416  5417  5418  5419
[2173]  5420  5421  5422  5423  5424  5425  5426  5427  5428  5429  5430  5431
[2185]  5432  5433  5434  5435  5436  5437  5438  5439  5440  5441  5442  5443
[2197]  5444  5445  5446  5447  5448  5449  5507  5508  5509  5510  5511  5512
[2209]  5513  5514  5515  5516  5517  5518  5519  5520  5521  5522  5523  5524
[2221]  5525  5526  5527  5528  5529  5530  5531  5532  5533  5534  5535  5536
[2233]  5537  5538  5539  5540  5541  5542  5543  5544  5545  5603  5604  5605
[2245]  5606  5607  5608  5609  5610  5611  5612  5613  5614  5615  5616  5617
[2257]  5618  5619  5620  5621  5622  5623  5624  5625  5626  5627  5628  5629
[2269]  5630  5631  5632  5633  5634  5635  5636  5637  5638  5639  5640  5641
[2281]  5699  5700  5701  5702  5703  5704  5705  5706  5707  5708  5709  5710
[2293]  5711  5712  5713  5714  5715  5716  5717  5718  5719  5720  5721  5722
[2305]  5723  5724  5725  5726  5727  5728  5729  5730  5731  5732  5733  5734
[2317]  5792  5793  5794  5795  5796  5797  5798  5799  5800  5801  5802  5803
[2329]  5804  5805  5806  5807  5808  5809  5810  5811  5812  5813  5814  5815
[2341]  5816  5817  5818  5819  5820  5821  5822  5823  5824  5825  5826  5827
[2353]  5828  5885  5886  5887  5888  5889  5890  5891  5892  5893  5894  5895
[2365]  5896  5897  5898  5899  5900  5901  5902  5903  5904  5905  5906  5907
[2377]  5908  5909  5910  5911  5912  5913  5914  5915  5916  5968  5969  5970
[2389]  5971  5972  5973  5974  5975  5976  5977  5978  5979  5980  5981  5982
[2401]  5983  5984  5985  5986  5987  5988  5989  5990  5991  5992  5993  5994
[2413]  5995  5996  5997  5998  5999  6049  6050  6051  6052  6053  6054  6055
[2425]  6056  6057  6058  6059  6060  6061  6062  6063  6064  6065  6066  6067
[2437]  6068  6069  6070  6071  6072  6073  6074  6075  6076  6077  6078  6079
[2449]  6080  6081  6082  6083  6084  6085  6086  6087  6137  6138  6139  6140
[2461]  6141  6142  6143  6144  6145  6146  6147  6148  6149  6150  6151  6152
[2473]  6153  6154  6155  6156  6157  6158  6159  6160  6161  6162  6163  6164
[2485]  6165  6166  6167  6168  6169  6170  6171  6172  6173  6174  6175  6176
[2497]  6177  6228  6229  6230  6231  6232  6233  6234  6235  6236  6237  6238
[2509]  6239  6240  6241  6242  6243  6244  6245  6246  6247  6248  6249  6250
[2521]  6251  6252  6253  6254  6255  6256  6257  6258  6259  6260  6261  6262
[2533]  6263  6264  6265  6266  6267  6268  6309  6310  6311  6312  6313  6314
[2545]  6315  6316  6317  6318  6319  6320  6321  6322  6323  6324  6325  6326
[2557]  6327  6328  6329  6330  6331  6332  6333  6334  6376  6377  6378  6379
[2569]  6380  6381  6382  6383  6384  6385  6386  6387  6388  6389  6390  6391
[2581]  6392  6393  6394  6395  6396  6397  6398  6399  6400  6401  6402  6403
[2593]  6404  6405  6406  6407  6408  6409  6410  6411  6412  6413  6414  6415
[2605]  6416  6472  6473  6474  6475  6476  6477  6478  6479  6480  6481  6482
[2617]  6483  6484  6485  6486  6487  6488  6489  6490  6491  6492  6493  6494
[2629]  6495  6496  6497  6498  6499  6500  6501  6502  6503  6504  6505  6506
[2641]  6507  6508  6509  6538  6539  6540  6541  6542  6543  6544  6545  6546
[2653]  6547  6548  6549  6550  6551  6552  6553  6554  6555  6556  6557  6558
[2665]  6559  6560  6561  6562  6563  6564  6565  6566  6567  6568  6569  6570
[2677]  6571  6572  6573  6574  6575  6576  6577  6578  6628  6629  6630  6631
[2689]  6632  6633  6634  6635  6636  6637  6638  6639  6640  6641  6642  6643
[2701]  6644  6645  6646  6647  6648  6649  6650  6651  6652  6653  6654  6655
[2713]  6656  6657  6658  6659  6660  6661  6662  6663  6664  6665  6666  6667
[2725]  6668  6704  6705  6706  6707  6708  6709  6710  6711  6712  6713  6714
[2737]  6715  6716  6717  6718  6719  6720  6721  6722  6723  6724  6725  6726
[2749]  6727  6728  6729  6730  6731  6732  6733  6734  6735  6736  6737  6738
[2761]  6739  6740  6741  6742  6798  6799  6800  6801  6802  6803  6804  6805
[2773]  6806  6807  6808  6809  6810  6811  6812  6813  6814  6815  6816  6817
[2785]  6818  6819  6820  6821  6822  6823  6824  6825  6826  6827  6828  6829
[2797]  6830  6831  6832  6833  6834  6835  6836  6837  6838  6894  6895  6896
[2809]  6897  6898  6899  6900  6901  6902  6903  6904  6905  6906  6907  6908
[2821]  6909  6910  6911  6912  6913  6914  6915  6916  6917  6918  6919  6920
[2833]  6921  6922  6923  6924  6925  6926  6927  6928  6929  6930  6931  6932
[2845]  6933  6934  6990  6991  6992  6993  6994  6995  6996  6997  6998  6999
[2857]  7000  7001  7002  7003  7004  7005  7006  7007  7008  7009  7010  7011
[2869]  7012  7013  7014  7015  7016  7017  7018  7019  7020  7021  7022  7023
[2881]  7024  7025  7026  7027  7028  7029  7030  7081  7082  7083  7084  7085
[2893]  7086  7087  7088  7089  7090  7091  7092  7093  7094  7095  7096  7097
[2905]  7098  7099  7100  7101  7102  7103  7104  7105  7106  7153  7154  7155
[2917]  7156  7157  7158  7159  7160  7161  7162  7163  7164  7165  7166  7167
[2929]  7168  7169  7170  7171  7172  7173  7174  7175  7176  7177  7178  7179
[2941]  7180  7181  7182  7183  7184  7185  7186  7187  7188  7189  7190  7191
[2953]  7192  7193  7249  7250  7251  7252  7253  7254  7255  7256  7257  7258
[2965]  7259  7260  7261  7262  7263  7264  7265  7266  7267  7268  7269  7270
[2977]  7271  7272  7273  7274  7275  7276  7277  7278  7279  7280  7281  7282
[2989]  7283  7284  7285  7286  7287  7288  7289  7340  7341  7342  7343  7344
[3001]  7345  7346  7347  7348  7349  7350  7351  7352  7353  7354  7355  7356
[3013]  7357  7358  7359  7360  7361  7362  7397  7398  7399  7400  7401  7402
[3025]  7403  7404  7405  7406  7407  7408  7409  7410  7411  7412  7413  7414
[3037]  7415  7416  7417  7418  7419  7448  7449  7450  7451  7452  7453  7454
[3049]  7455  7456  7457  7458  7459  7460  7461  7462  7463  7464  7465  7466
[3061]  7467  7468  7469  7470  7471  7472  7473  7474  7475  7476  7477  7478
[3073]  7479  7480  7481  7482  7483  7484  7485  7486  7487  7488  7489  7544
[3085]  7545  7546  7547  7548  7549  7550  7551  7552  7553  7554  7555  7556
[3097]  7557  7558  7559  7560  7561  7562  7563  7564  7565  7566  7567  7568
[3109]  7569  7570  7571  7572  7573  7574  7575  7576  7577  7578  7579  7580
[3121]  7581  7582  7583  7584  7585  7586  7612  7613  7614  7615  7616  7617
[3133]  7618  7619  7620  7621  7622  7623  7624  7625  7626  7627  7628  7629
[3145]  7630  7631  7632  7633  7634  7635  7636  7637  7638  7639  7640  7641
[3157]  7642  7643  7644  7645  7646  7647  7648  7649  7650  7651  7652  7653
[3169]  7654  7706  7707  7708  7709  7710  7711  7712  7713  7714  7715  7716
[3181]  7717  7718  7719  7720  7721  7722  7723  7724  7725  7726  7727  7728
[3193]  7729  7730  7731  7732  7733  7734  7735  7736  7737  7738  7739  7740
[3205]  7741  7742  7743  7744  7745  7746  7747  7748  7802  7803  7804  7805
[3217]  7806  7807  7808  7809  7810  7811  7812  7813  7814  7815  7816  7817
[3229]  7818  7819  7820  7821  7822  7823  7824  7825  7826  7827  7828  7829
[3241]  7830  7831  7832  7833  7834  7835  7836  7837  7838  7839  7840  7841
[3253]  7842  7843  7844  7898  7899  7900  7901  7902  7903  7904  7905  7906
[3265]  7907  7908  7909  7910  7911  7912  7913  7914  7915  7916  7917  7918
[3277]  7919  7920  7921  7922  7923  7924  7925  7926  7927  7928  7929  7930
[3289]  7931  7932  7933  7934  7935  7936  7937  7938  7939  7940  7994  7995
[3301]  7996  7997  7998  7999  8000  8001  8002  8003  8004  8005  8006  8007
[3313]  8008  8009  8010  8011  8012  8013  8014  8015  8016  8017  8018  8019
[3325]  8020  8021  8022  8023  8024  8025  8026  8027  8028  8029  8030  8031
[3337]  8032  8033  8034  8035  8036  8090  8091  8092  8093  8094  8095  8096
[3349]  8097  8098  8099  8100  8101  8102  8103  8104  8105  8106  8107  8108
[3361]  8109  8110  8111  8112  8113  8114  8115  8116  8117  8118  8119  8120
[3373]  8121  8122  8123  8124  8125  8126  8127  8128  8129  8130  8131  8132
[3385]  8186  8187  8188  8189  8190  8191  8192  8193  8194  8195  8196  8197
[3397]  8198  8199  8200  8201  8202  8203  8204  8205  8206  8207  8208  8209
[3409]  8210  8211  8212  8213  8214  8215  8216  8217  8218  8219  8220  8221
[3421]  8222  8223  8224  8225  8226  8227  8228  8281  8282  8283  8284  8285
[3433]  8286  8287  8288  8289  8290  8291  8292  8293  8294  8295  8296  8297
[3445]  8298  8299  8300  8301  8302  8303  8304  8305  8306  8307  8308  8309
[3457]  8310  8311  8312  8313  8314  8315  8316  8317  8318  8319  8320  8321
[3469]  8322  8323  8324  8377  8378  8379  8380  8381  8382  8383  8384  8385
[3481]  8386  8387  8388  8389  8390  8391  8392  8393  8394  8395  8396  8397
[3493]  8398  8399  8400  8401  8402  8403  8404  8405  8406  8407  8408  8409
[3505]  8410  8411  8412  8413  8414  8415  8416  8417  8418  8419  8420  8473
[3517]  8474  8475  8476  8477  8478  8479  8480  8481  8482  8483  8484  8485
[3529]  8486  8487  8488  8489  8490  8491  8492  8493  8494  8495  8496  8497
[3541]  8498  8499  8500  8501  8502  8503  8504  8505  8506  8507  8508  8509
[3553]  8510  8511  8512  8513  8514  8515  8516  8569  8570  8571  8572  8573
[3565]  8574  8575  8576  8577  8578  8579  8580  8581  8582  8583  8584  8585
[3577]  8586  8587  8588  8589  8590  8591  8592  8593  8594  8595  8596  8597
[3589]  8598  8599  8600  8601  8602  8603  8604  8605  8606  8607  8608  8609
[3601]  8610  8611  8612  8665  8666  8667  8668  8669  8670  8671  8672  8673
[3613]  8674  8675  8676  8677  8678  8679  8680  8681  8682  8683  8684  8685
[3625]  8686  8687  8688  8689  8690  8691  8692  8693  8694  8695  8696  8697
[3637]  8698  8699  8700  8701  8702  8703  8704  8705  8706  8707  8708  8761
[3649]  8762  8763  8764  8765  8766  8767  8768  8769  8770  8771  8772  8773
[3661]  8774  8775  8776  8777  8778  8779  8780  8781  8782  8783  8784  8785
[3673]  8786  8787  8788  8789  8790  8791  8792  8793  8794  8795  8796  8797
[3685]  8798  8799  8800  8801  8802  8803  8804  8857  8858  8859  8860  8861
[3697]  8862  8863  8864  8865  8866  8867  8868  8869  8870  8871  8872  8873
[3709]  8874  8875  8876  8877  8878  8879  8880  8881  8882  8883  8884  8885
[3721]  8886  8887  8888  8889  8890  8891  8892  8893  8894  8895  8896  8897
[3733]  8898  8899  8900  8953  8954  8955  8956  8957  8958  8959  8960  8961
[3745]  8962  8963  8964  8965  8966  8967  8968  8969  8970  8971  8972  8973
[3757]  8974  8975  8976  8977  8978  8979  8980  8981  8982  8983  8984  8985
[3769]  8986  8987  8988  8989  8990  8991  8992  8993  8994  8995  8996  9049
[3781]  9050  9051  9052  9053  9054  9055  9056  9057  9058  9059  9060  9061
[3793]  9062  9063  9064  9065  9066  9067  9068  9069  9070  9071  9072  9073
[3805]  9074  9075  9076  9077  9078  9079  9080  9081  9082  9083  9084  9085
[3817]  9086  9087  9088  9089  9090  9091  9092  9145  9146  9147  9148  9149
[3829]  9150  9151  9152  9153  9154  9155  9156  9157  9158  9159  9160  9161
[3841]  9162  9163  9164  9165  9166  9167  9168  9169  9170  9171  9172  9173
[3853]  9174  9175  9176  9177  9178  9179  9180  9181  9182  9183  9184  9185
[3865]  9186  9187  9188  9189  9240  9241  9242  9243  9244  9245  9246  9247
[3877]  9248  9249  9250  9251  9252  9253  9254  9255  9256  9257  9258  9259
[3889]  9260  9261  9262  9263  9264  9265  9266  9267  9268  9269  9270  9271
[3901]  9272  9273  9274  9275  9276  9277  9278  9279  9280  9281  9282  9283
[3913]  9284  9285  9336  9337  9338  9339  9340  9341  9342  9343  9344  9345
[3925]  9346  9347  9348  9349  9350  9351  9352  9353  9354  9355  9356  9357
[3937]  9358  9359  9360  9361  9362  9363  9364  9365  9366  9367  9368  9369
[3949]  9370  9371  9372  9373  9374  9375  9376  9377  9378  9379  9380  9381
[3961]  9432  9433  9434  9435  9436  9437  9438  9439  9440  9441  9442  9443
[3973]  9444  9445  9446  9447  9448  9449  9450  9451  9452  9453  9454  9455
[3985]  9456  9457  9458  9459  9460  9461  9462  9463  9464  9465  9466  9467
[3997]  9468  9469  9470  9471  9472  9473  9474  9475  9476  9477  9528  9529
[4009]  9530  9531  9532  9533  9534  9535  9536  9537  9538  9539  9540  9541
[4021]  9542  9543  9544  9545  9546  9547  9548  9549  9550  9551  9552  9553
[4033]  9554  9555  9556  9557  9558  9559  9560  9561  9562  9563  9564  9565
[4045]  9566  9567  9568  9569  9570  9571  9572  9573  9624  9625  9626  9627
[4057]  9628  9629  9630  9631  9632  9633  9634  9635  9636  9637  9638  9639
[4069]  9640  9641  9642  9643  9644  9645  9646  9647  9648  9649  9650  9651
[4081]  9652  9653  9654  9655  9656  9657  9658  9659  9660  9661  9662  9663
[4093]  9664  9665  9666  9667  9668  9669  9720  9721  9722  9723  9724  9725
[4105]  9726  9727  9728  9729  9730  9731  9732  9733  9734  9735  9736  9737
[4117]  9738  9739  9740  9741  9742  9743  9744  9745  9746  9747  9748  9749
[4129]  9750  9751  9752  9753  9754  9755  9756  9757  9758  9759  9760  9761
[4141]  9762  9763  9764  9765  9816  9817  9818  9819  9820  9821  9822  9823
[4153]  9824  9825  9826  9827  9828  9829  9830  9831  9832  9833  9834  9835
[4165]  9836  9837  9838  9839  9840  9841  9842  9843  9844  9845  9846  9847
[4177]  9848  9849  9850  9851  9852  9853  9854  9855  9856  9857  9858  9859
[4189]  9860  9861  9912  9913  9914  9915  9916  9917  9918  9919  9920  9921
[4201]  9922  9923  9924  9925  9926  9927  9928  9929  9930  9931  9932  9933
[4213]  9934  9935  9936  9937  9938  9939  9940  9941  9942  9943  9944  9945
[4225]  9946  9947  9948  9949  9950  9951  9952  9953  9954  9955  9956  9957
[4237] 10008 10009 10010 10011 10012 10013 10014 10015 10016 10017 10018 10019
[4249] 10020 10021 10022 10023 10024 10025 10026 10027 10028 10029 10030 10031
[4261] 10032 10033 10034 10035 10036 10037 10038 10039 10040 10041 10042 10043
[4273] 10044 10045 10046 10047 10048 10049 10050 10051 10052 10053 10104 10105
[4285] 10106 10107 10108 10109 10110 10111 10112 10113 10114 10115 10116 10117
[4297] 10118 10119 10120 10121 10122 10123 10124 10125 10126 10127 10128 10129
[4309] 10130 10131 10132 10133 10134 10135 10136 10137 10138 10139 10140 10141
[4321] 10142 10143 10144 10145 10146 10147 10148 10149 10199 10200 10201 10202
[4333] 10203 10204 10205 10206 10207 10208 10209 10210 10211 10212 10213 10214
[4345] 10215 10216 10217 10218 10219 10220 10221 10222 10223 10224 10225 10226
[4357] 10227 10228 10229 10230 10231 10232 10233 10234 10235 10236 10237 10238
[4369] 10239 10240 10241 10242 10243 10244 10245 10295 10296 10297 10298 10299
[4381] 10300 10301 10302 10303 10304 10305 10306 10307 10308 10309 10310 10311
[4393] 10312 10313 10314 10315 10316 10317 10318 10319 10320 10321 10322 10323
[4405] 10324 10325 10326 10327 10328 10329 10330 10331 10332 10333 10334 10335
[4417] 10336 10337 10338 10339 10340 10341 10391 10392 10393 10394 10395 10396
[4429] 10397 10398 10399 10400 10401 10402 10403 10404 10405 10406 10407 10408
[4441] 10409 10410 10411 10412 10413 10414 10415 10416 10417 10418 10419 10420
[4453] 10421 10422 10423 10424 10425 10426 10427 10428 10429 10430 10431 10432
[4465] 10433 10434 10435 10436 10437 10487 10488 10489 10490 10491 10492 10493
[4477] 10494 10495 10496 10497 10498 10499 10500 10501 10502 10503 10504 10505
[4489] 10506 10507 10508 10509 10510 10511 10512 10513 10514 10515 10516 10517
[4501] 10518 10519 10520 10521 10522 10523 10524 10525 10526 10527 10528 10529
[4513] 10530 10531 10532 10533 10583 10584 10585 10586 10587 10588 10589 10590
[4525] 10591 10592 10593 10594 10595 10596 10597 10598 10599 10600 10601 10602
[4537] 10603 10604 10605 10606 10607 10608 10609 10610 10611 10612 10613 10614
[4549] 10615 10616 10617 10618 10619 10620 10621 10622 10623 10624 10625 10626
[4561] 10627 10628 10629 10679 10680 10681 10682 10683 10684 10685 10686 10687
[4573] 10688 10689 10690 10691 10692 10693 10694 10695 10696 10697 10698 10699
[4585] 10700 10701 10702 10703 10704 10705 10706 10707 10708 10709 10710 10711
[4597] 10712 10713 10714 10715 10716 10717 10718 10719 10720 10721 10722 10723
[4609] 10724 10725 10775 10776 10777 10778 10779 10780 10781 10782 10783 10784
[4621] 10785 10786 10787 10788 10789 10790 10791 10792 10793 10794 10795 10796
[4633] 10797 10798 10799 10800 10801 10802 10803 10804 10805 10806 10807 10808
[4645] 10809 10810 10811 10812 10813 10814 10815 10816 10817 10818 10819 10820
[4657] 10821 10871 10872 10873 10874 10875 10876 10877 10878 10879 10880 10881
[4669] 10882 10883 10884 10885 10886 10887 10888 10889 10890 10891 10892 10893
[4681] 10894 10895 10896 10897 10898 10899 10900 10901 10902 10903 10904 10905
[4693] 10906 10907 10908 10909 10910 10911 10912 10913 10914 10915 10916 10917
[4705] 10918 10967 10968 10969 10970 10971 10972 10973 10974 10975 10976 10977
[4717] 10978 10979 10980 10981 10982 10983 10984 10985 10986 10987 10988 10989
[4729] 10990 10991 10992 10993 10994 10995 10996 10997 10998 10999 11000 11001
[4741] 11002 11003 11004 11005 11006 11007 11008 11009 11010 11011 11012 11013
[4753] 11014 11062 11063 11064 11065 11066 11067 11068 11069 11070 11071 11072
[4765] 11073 11074 11075 11076 11077 11078 11079 11080 11081 11082 11083 11084
[4777] 11085 11086 11087 11088 11089 11090 11091 11092 11093 11094 11095 11096
[4789] 11097 11098 11099 11100 11101 11102 11103 11104 11105 11106 11107 11108
[4801] 11109 11110 11158 11159 11160 11161 11162 11163 11164 11165 11166 11167
[4813] 11168 11169 11170 11171 11172 11173 11174 11175 11176 11177 11178 11179
[4825] 11180 11181 11182 11183 11184 11185 11186 11187 11188 11189 11190 11191
[4837] 11192 11193 11194 11195 11196 11197 11198 11199 11200 11201 11202 11203
[4849] 11204 11205 11206 11254 11255 11256 11257 11258 11259 11260 11261 11262
[4861] 11263 11264 11265 11266 11267 11268 11269 11270 11271 11272 11273 11274
[4873] 11275 11276 11277 11278 11279 11280 11281 11282 11283 11284 11285 11286
[4885] 11287 11288 11289 11290 11291 11292 11293 11294 11295 11296 11297 11298
[4897] 11299 11300 11301 11302 11350 11351 11352 11353 11354 11355 11356 11357
[4909] 11358 11359 11360 11361 11362 11363 11364 11365 11366 11367 11368 11369
[4921] 11370 11371 11372 11373 11374 11375 11376 11377 11378 11379 11380 11381
[4933] 11382 11383 11384 11385 11386 11387 11388 11389 11390 11391 11392 11393
[4945] 11394 11395 11396 11397 11398 11446 11447 11448 11449 11450 11451 11452
[4957] 11453 11454 11455 11456 11457 11458 11459 11460 11461 11462 11463 11464
[4969] 11465 11466 11467 11468 11469 11470 11471 11472 11473 11474 11475 11476
[4981] 11477 11478 11479 11480 11481 11482 11483 11484 11485 11486 11487 11488
[4993] 11489 11490 11491 11492 11493 11494 11542 11543 11544 11545 11546 11547
[5005] 11548 11549 11550 11551 11552 11553 11554 11555 11556 11557 11558 11559
[5017] 11560 11561 11562 11563 11564 11565 11566 11567 11568 11569 11570 11571
[5029] 11572 11573 11574 11575 11576 11577 11578 11579 11580 11581 11582 11583
[5041] 11584 11585 11586 11587 11588 11589 11590 11638 11639 11640 11641 11642
[5053] 11643 11644 11645 11646 11647 11648 11649 11650 11651 11652 11653 11654
[5065] 11655 11656 11657 11658 11659 11660 11661 11662 11663 11664 11665 11666
[5077] 11667 11668 11669 11670 11671 11672 11673 11674 11675 11676 11677 11678
[5089] 11679 11680 11681 11682 11683 11684 11685 11686 11734 11735 11736 11737
[5101] 11738 11739 11740 11741 11742 11743 11744 11745 11746 11747 11748 11749
[5113] 11750 11751 11752 11753 11754 11755 11756 11757 11758 11759 11760 11761
[5125] 11762 11763 11764 11765 11766 11767 11768 11769 11770 11771 11772 11773
[5137] 11774 11775 11776 11777 11778 11779 11780 11781 11782 11830 11831 11832
[5149] 11833 11834 11835 11836 11837 11838 11839 11840 11841 11842 11843 11844
[5161] 11845 11846 11847 11848 11849 11850 11851 11852 11853 11854 11855 11856
[5173] 11857 11858 11859 11860 11861 11862 11863 11864 11865 11866 11867 11868
[5185] 11869 11870 11871 11872 11873 11874 11875 11876 11877 11878 11926 11927
[5197] 11928 11929 11930 11931 11932 11933 11934 11935 11936 11937 11938 11939
[5209] 11940 11941 11942 11943 11944 11945 11946 11947 11948 11949 11950 11951
[5221] 11952 11953 11954 11955 11956 11957 11958 11959 11960 11961 11962 11963
[5233] 11964 11965 11966 11967 11968 11969 11970 11971 11972 11973 11974 12021
[5245] 12022 12023 12024 12025 12026 12027 12028 12029 12030 12031 12032 12033
[5257] 12034 12035 12036 12037 12038 12039 12040 12041 12042 12043 12044 12045
[5269] 12046 12047 12048 12049 12050 12051 12052 12053 12054 12055 12056 12057
[5281] 12058 12059 12060 12061 12062 12063 12064 12065 12066 12067 12068 12069
[5293] 12070 12117 12118 12119 12120 12121 12122 12123 12124 12125 12126 12127
[5305] 12128 12129 12130 12131 12132 12133 12134 12135 12136 12137 12138 12139
[5317] 12140 12141 12142 12143 12144 12145 12146 12147 12148 12149 12150 12151
[5329] 12152 12153 12154 12155 12156 12157 12158 12159 12160 12161 12162 12163
[5341] 12164 12165 12166 12213 12214 12215 12216 12217 12218 12219 12220 12221
[5353] 12222 12223 12224 12225 12226 12227 12228 12229 12230 12231 12232 12233
[5365] 12234 12235 12236 12237 12238 12239 12240 12241 12242 12243 12244 12245
[5377] 12246 12247 12248 12249 12250 12251 12252 12253 12254 12255 12256 12257
[5389] 12258 12259 12260 12261 12262 12309 12310 12311 12312 12313 12314 12315
[5401] 12316 12317 12318 12319 12320 12321 12322 12323 12324 12325 12326 12327
[5413] 12328 12329 12330 12331 12332 12333 12334 12335 12336 12337 12338 12339
[5425] 12340 12341 12342 12343 12344 12345 12346 12347 12348 12349 12350 12351
[5437] 12352 12353 12354 12355 12356 12357 12358 12405 12406 12407 12408 12409
[5449] 12410 12411 12412 12413 12414 12415 12416 12417 12418 12419 12420 12421
[5461] 12422 12423 12424 12425 12426 12427 12428 12429 12430 12431 12432 12433
[5473] 12434 12435 12436 12437 12438 12439 12440 12441 12442 12443 12444 12445
[5485] 12446 12447 12448 12449 12450 12451 12452 12453 12454 12455 12501 12502
[5497] 12503 12504 12505 12506 12507 12508 12509 12510 12511 12512 12513 12514
[5509] 12515 12516 12517 12518 12519 12520 12521 12522 12523 12524 12525 12526
[5521] 12527 12528 12529 12530 12531 12532 12533 12534 12535 12536 12537 12538
[5533] 12539 12540 12541 12542 12543 12544 12545 12546 12547 12548 12549 12550
[5545] 12551 12597 12598 12599 12600 12601 12602 12603 12604 12605 12606 12607
[5557] 12608 12609 12610 12611 12612 12613 12614 12615 12616 12617 12618 12619
[5569] 12620 12621 12622 12623 12624 12625 12626 12627 12628 12629 12630 12631
[5581] 12632 12633 12634 12635 12636 12637 12638 12639 12640 12641 12642 12643
[5593] 12644 12645 12646 12647 12693 12694 12695 12696 12697 12698 12699 12700
[5605] 12701 12702 12703 12704 12705 12706 12707 12708 12709 12710 12711 12712
[5617] 12713 12714 12715 12716 12717 12718 12719 12720 12721 12722 12723 12724
[5629] 12725 12726 12727 12728 12729 12730 12731 12732 12733 12734 12735 12736
[5641] 12737 12738 12739 12740 12741 12742 12743 12789 12790 12791 12792 12793
[5653] 12794 12795 12796 12797 12798 12799 12800 12801 12802 12803 12804 12805
[5665] 12806 12807 12808 12809 12810 12811 12812 12813 12814 12815 12816 12817
[5677] 12818 12819 12820 12821 12822 12823 12824 12825 12826 12827 12828 12829
[5689] 12830 12831 12832 12833 12834 12835 12836 12837 12838 12839 12885 12886
[5701] 12887 12888 12889 12890 12891 12892 12893 12894 12895 12896 12897 12898
[5713] 12899 12900 12901 12902 12903 12904 12905 12906 12907 12908 12909 12910
[5725] 12911 12912 12913 12914 12915 12916 12917 12918 12919 12920 12921 12922
[5737] 12923 12924 12925 12926 12927 12928 12929 12930 12931 12932 12933 12934
[5749] 12935 12980 12981 12982 12983 12984 12985 12986 12987 12988 12989 12990
[5761] 12991 12992 12993 12994 12995 12996 12997 12998 12999 13000 13001 13002
[5773] 13003 13004 13005 13006 13007 13008 13009 13010 13011 13012 13013 13014
[5785] 13015 13016 13017 13018 13019 13020 13021 13022 13023 13024 13025 13026
[5797] 13027 13028 13029 13030 13031 13076 13077 13078 13079 13080 13081 13082
[5809] 13083 13084 13085 13086 13087 13088 13089 13090 13091 13092 13093 13094
[5821] 13095 13096 13097 13098 13099 13100 13101 13102 13103 13104 13105 13106
[5833] 13107 13108 13109 13110 13111 13112 13113 13114 13115 13116 13117 13118
[5845] 13119 13120 13121 13122 13123 13124 13125 13126 13127 13172 13173 13174
[5857] 13175 13176 13177 13178 13179 13180 13181 13182 13183 13184 13185 13186
[5869] 13187 13188 13189 13190 13191 13192 13193 13194 13195 13196 13197 13198
[5881] 13199 13200 13201 13202 13203 13204 13205 13206 13207 13208 13209 13210
[5893] 13211 13212 13213 13214 13215 13216 13217 13218 13219 13220 13221 13222
[5905] 13223 13268 13269 13270 13271 13272 13273 13274 13275 13276 13277 13278
[5917] 13279 13280 13281 13282 13283 13284 13285 13286 13287 13288 13289 13290
[5929] 13291 13292 13293 13294 13295 13296 13297 13298 13299 13300 13301 13302
[5941] 13303 13304 13305 13306 13307 13308 13309 13310 13311 13312 13313 13314
[5953] 13315 13316 13317 13318 13319 13364 13365 13366 13367 13368 13369 13370
[5965] 13371 13372 13373 13374 13375 13376 13377 13378 13379 13380 13381 13382
[5977] 13383 13384 13385 13386 13387 13388 13389 13390 13391 13392 13393 13394
[5989] 13395 13396 13397 13398 13399 13400 13401 13402 13403 13404 13405 13406
[6001] 13407 13408 13409 13410 13411 13412 13413 13414 13415 13460 13461 13462
[6013] 13463 13464 13465 13466 13467 13468 13469 13470 13471 13472 13473 13474
[6025] 13475 13476 13477 13478 13479 13480 13481 13482 13483 13484 13485 13486
[6037] 13487 13488 13489 13490 13491 13492 13493 13494 13495 13496 13497 13498
[6049] 13499 13500 13501 13502 13503 13504 13505 13506 13507 13508 13509 13510
[6061] 13511 13556 13557 13558 13559 13560 13561 13562 13563 13564 13565 13566
[6073] 13567 13568 13569 13570 13571 13572 13573 13574 13575 13576 13577 13578
[6085] 13579 13580 13581 13582 13583 13584 13585 13586 13587 13588 13589 13590
[6097] 13591 13592 13593 13594 13595 13596 13597 13598 13599 13600 13601 13602
[6109] 13603 13604 13605 13606 13607 13652 13653 13654 13655 13656 13657 13658
[6121] 13659 13660 13661 13662 13663 13664 13665 13666 13667 13668 13669 13670
[6133] 13671 13672 13673 13674 13675 13676 13677 13678 13679 13680 13681 13682
[6145] 13683 13684 13685 13686 13687 13688 13689 13690 13691 13692 13693 13694
[6157] 13695 13696 13697 13698 13699 13700 13701 13702 13703 13748 13749 13750
[6169] 13751 13752 13753 13754 13755 13756 13757 13758 13759 13760 13761 13762
[6181] 13763 13764 13765 13766 13767 13768 13769 13770 13771 13772 13773 13774
[6193] 13775 13776 13777 13778 13779 13780 13781 13782 13783 13784 13785 13786
[6205] 13787 13788 13789 13790 13791 13792 13793 13794 13795 13796 13797 13798
[6217] 13799 13844 13845 13846 13847 13848 13849 13850 13851 13852 13853 13854
[6229] 13855 13856 13857 13858 13859 13860 13861 13862 13863 13864 13865 13866
[6241] 13867 13868 13869 13870 13871 13872 13873 13874 13875 13876 13877 13878
[6253] 13879 13880 13881 13882 13883 13884 13885 13886 13887 13888 13889 13890
[6265] 13891 13892 13893 13894 13895 13896 13939 13940 13941 13942 13943 13944
[6277] 13945 13946 13947 13948 13949 13950 13951 13952 13953 13954 13955 13956
[6289] 13957 13958 13959 13960 13961 13962 13963 13964 13965 13966 13967 13968
[6301] 13969 13970 13971 13972 13973 13974 13975 13976 13977 13978 13979 13980
[6313] 13981 13982 13983 13984 13985 13986 13987 13988 13989 13990 13991 13992
[6325] 14035 14036 14037 14038 14039 14040 14041 14042 14043 14044 14045 14046
[6337] 14047 14048 14049 14050 14051 14052 14053 14054 14055 14056 14057 14058
[6349] 14059 14060 14061 14062 14063 14064 14065 14066 14067 14068 14069 14070
[6361] 14071 14072 14073 14074 14075 14076 14077 14078 14079 14080 14081 14082
[6373] 14083 14084 14085 14086 14087 14088 14131 14132 14133 14134 14135 14136
[6385] 14137 14138 14139 14140 14141 14142 14143 14144 14145 14146 14147 14148
[6397] 14149 14150 14151 14152 14153 14154 14155 14156 14157 14158 14159 14160
[6409] 14161 14162 14163 14164 14165 14166 14167 14168 14169 14170 14171 14172
[6421] 14173 14174 14175 14176 14177 14178 14179 14180 14181 14182 14183 14184
[6433] 14227 14228 14229 14230 14231 14232 14233 14234 14235 14236 14237 14238
[6445] 14239 14240 14241 14242 14243 14244 14245 14246 14247 14248 14249 14250
[6457] 14251 14252 14253 14254 14255 14256 14257 14258 14259 14260 14261 14262
[6469] 14263 14264 14265 14266 14267 14268 14269 14270 14271 14272 14273 14274
[6481] 14275 14276 14277 14278 14279 14280 14323 14324 14325 14326 14327 14328
[6493] 14329 14330 14331 14332 14333 14334 14335 14336 14337 14338 14339 14340
[6505] 14341 14342 14343 14344 14345 14346 14347 14348 14349 14350 14351 14352
[6517] 14353 14354 14355 14356 14357 14358 14359 14360 14361 14362 14363 14364
[6529] 14365 14366 14367 14368 14369 14370 14371 14372 14373 14374 14375 14376
[6541] 14419 14420 14421 14422 14423 14424 14425 14426 14427 14428 14429 14430
[6553] 14431 14432 14433 14434 14435 14436 14437 14438 14439 14440 14441 14442
[6565] 14443 14444 14445 14446 14447 14448 14449 14450 14451 14452 14453 14454
[6577] 14455 14456 14457 14458 14459 14460 14461 14462 14463 14464 14465 14466
[6589] 14467 14468 14469 14470 14471 14472 14515 14516 14517 14518 14519 14520
[6601] 14521 14522 14523 14524 14525 14526 14527 14528 14529 14530 14531 14532
[6613] 14533 14534 14535 14536 14537 14538 14539 14540 14541 14542 14543 14544
[6625] 14545 14546 14547 14548 14549 14550 14551 14552 14553 14554 14555 14556
[6637] 14557 14558 14559 14560 14561 14562 14563 14564 14565 14566 14567 14568
[6649] 14611 14612 14613 14614 14615 14616 14617 14618 14619 14620 14621 14622
[6661] 14623 14624 14625 14626 14627 14628 14629 14630 14631 14632 14633 14634
[6673] 14635 14636 14637 14638 14639 14640 14641 14642 14643 14644 14645 14646
[6685] 14647 14648 14649 14650 14651 14652 14653 14654 14655 14656 14657 14658
[6697] 14659 14660 14661 14662 14663 14664 14707 14708 14709 14710 14711 14712
[6709] 14713 14714 14715 14716 14717 14718 14719 14720 14721 14722 14723 14724
[6721] 14725 14726 14727 14728 14729 14730 14731 14732 14733 14734 14735 14736
[6733] 14737 14738 14739 14740 14741 14742 14743 14744 14745 14746 14747 14748
[6745] 14749 14750 14751 14752 14753 14754 14755 14756 14757 14758 14759 14760
[6757] 14803 14804 14805 14806 14807 14808 14809 14810 14811 14812 14813 14814
[6769] 14815 14816 14817 14818 14819 14820 14821 14822 14823 14824 14825 14826
[6781] 14827 14828 14829 14830 14831 14832 14833 14834 14835 14836 14837 14838
[6793] 14839 14840 14841 14842 14843 14844 14845 14846 14847 14848 14849 14850
[6805] 14851 14852 14853 14854 14855 14856 14899 14900 14901 14902 14903 14904
[6817] 14905 14906 14907 14908 14909 14910 14911 14912 14913 14914 14915 14916
[6829] 14917 14918 14919 14920 14921 14922 14923 14924 14925 14926 14927 14928
[6841] 14929 14930 14931 14932 14933 14934 14935 14936 14937 14938 14939 14940
[6853] 14941 14942 14943 14944 14945 14946 14947 14948 14949 14950 14951 14952
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl[which(day_night == 'day')]),
+     do_diel_respiration = do_diel_production - sum(do_mgl[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 176 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "XDB4544"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date = 2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 175 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
gg.conmon.noaa
> Warning messages:
1: Removed 342 rows containing non-finite outside the scale range (`stat_poly_line()`).
2: Removed 342 rows containing non-finite outside the scale range (`stat_poly_eq()`).
3: Removed 342 rows containing missing values or values outside the scale range (`geom_point()`).
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("XEA3687"),
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
source('./mike_atm.R')
> source('../R/mike_atm.R')
+ library(unitted)
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> > > conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724035-13773-2007.gz'
Content type 'unknown' length 86337 bytes (84 KB)
==================================================
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
> conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
> cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
> conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> ## lmfit <- lm(conmon.y~sin(2*pi*conmon.x/366) + cos(2*pi*conmon.x/366))
+ lmfit <- lm(conmon.y~sin(conmon.x))
+ b0 <- coef(lmfit)[1]
+ alpha <- coef(lmfit)[2]
+ beta <- coef(lmfit)[3]
> ssp <- spectrum(conmon.y)
+ per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
+ reslm <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x))
+ summary(reslm)
rg <- diff(range(conmon.y))
+ plot(conmon.y ~ conmon.x, ylim=c(min(conmon.y)-0.1*rg, max(conmon.y)+0.1*rg))
+ ## lines(fitted(reslm)~conmon.x,col=4,lty=2)   # dashed blue line is sin fit
# including 2nd harmonic reallconmon.y improves the fit
+ reslm2 <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x)+sin(4*pi/per*conmon.x)+cos(4*pi/per*conmon.x))
+ summary(reslm2)
+ lines(fitted(reslm2)~conmon.x,col=3)    # solid green line is periodic with second harmonic
> cmn.month$act <- predict(reslm2, newdata=cmn.month)
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-7.9165 -1.8082 -0.0488  1.5912 11.3125

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                -1583.61    9018.72  -0.176    0.861
sin(2 * pi/per * conmon.x)   319.01      31.87  10.008   <2e-16 ***
cos(2 * pi/per * conmon.x)  1582.81    9018.68   0.176    0.861
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.376 on 21029 degrees of freedom
Multiple R-squared:  0.06604,	Adjusted R-squared:  0.06595
F-statistic: 743.5 on 2 and 21029 DF,  p-value: < 2.2e-16

> > pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x) + sin(4 * pi/per * conmon.x) + cos(4 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-8.0220 -1.6786 -0.0172  1.5974 10.5263

Coefficients: (1 not defined because of singularities)
                             Estimate Std. Error t value Pr(>|t|)
(Intercept)                   2147542      50830   42.25   <2e-16 ***
sin(2 * pi/per * conmon.x) -209610565    4885284  -42.91   <2e-16 ***
cos(2 * pi/per * conmon.x)   -2147541      50830  -42.25   <2e-16 ***
sin(4 * pi/per * conmon.x)  104803989    2442608   42.91   <2e-16 ***
cos(4 * pi/per * conmon.x)         NA         NA      NA       NA
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.279 on 21028 degrees of freedom
Multiple R-squared:  0.1412,	Adjusted R-squared:  0.1411
F-statistic:  1153 on 3 and 21028 DF,  p-value: < 2.2e-16

> > Warning message:
In predict.lm(reslm2, newdata = cmn.month) :
  prediction from a rank-deficient fit may be misleading
> > library(ggpmisc)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl[which(day_night == 'day')]),
+     do_diel_respiration = do_diel_production - sum(do_mgl[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 223 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "XEA3687"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date = 2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 222 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ > gg.conmon.noaa
There were 50 or more warnings (use warnings() to see the first 50)
> gg.conmon.regs
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl[which(day_night == 'day')]),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 223 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "XEA3687"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date = 2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 222 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
gg.conmon.noaa
> Error in `stat_poly_line()`:
! Problem while computing stat.
ℹ Error occurred in the 2nd layer.
Caused by error in `seq_len()`:
! argument must be coercible to non-negative integer
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
Warning messages:
1: Removed 446 rows containing non-finite outside the scale range (`stat_poly_line()`).
2: In max(f) : no non-missing arguments to max; returning -Inf
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl[which(day_night == 'day')]),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 223 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "XEA3687"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date = 2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 222 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
gg.conmon.noaa
> Error in `stat_poly_line()`:
! Problem while computing stat.
ℹ Error occurred in the 2nd layer.
Caused by error in `seq_len()`:
! argument must be coercible to non-negative integer
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
Warning messages:
1: Removed 446 rows containing non-finite outside the scale range (`stat_poly_line()`).
2: In max(f) : no non-missing arguments to max; returning -Inf
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("POH002.10"),
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> source('./mike_atm.R')
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> source('../R/mike_atm.R')
+ library(unitted)
> conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
> . + > cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
> conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> ## lmfit <- lm(conmon.y~sin(2*pi*conmon.x/366) + cos(2*pi*conmon.x/366))
+ lmfit <- lm(conmon.y~sin(conmon.x))
+ b0 <- coef(lmfit)[1]
+ alpha <- coef(lmfit)[2]
+ beta <- coef(lmfit)[3]
> ssp <- spectrum(conmon.y)
+ per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
+ reslm <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x))
+ summary(reslm)
rg <- diff(range(conmon.y))
+ plot(conmon.y ~ conmon.x, ylim=c(min(conmon.y)-0.1*rg, max(conmon.y)+0.1*rg))
+ ## lines(fitted(reslm)~conmon.x,col=4,lty=2)   # dashed blue line is sin fit
> Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.1578 -1.2515  0.0209  1.2855  8.5736

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.8175     0.1480   5.525 3.35e-08 ***
sin(2 * pi/per * conmon.x)   1.8963     0.1164  16.286  < 2e-16 ***
cos(2 * pi/per * conmon.x)  -0.8281     0.1198  -6.915 4.84e-12 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.947 on 18308 degrees of freedom
Multiple R-squared:  0.1533,	Adjusted R-squared:  0.1532
F-statistic:  1657 on 2 and 18308 DF,  p-value: < 2.2e-16

> > # including 2nd harmonic reallconmon.y improves the fit
+ reslm2 <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x)+sin(4*pi/per*conmon.x)+cos(4*pi/per*conmon.x))
+ summary(reslm2)
+ lines(fitted(reslm2)~conmon.x,col=3)    # solid green line is periodic with second harmonic
> >
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x) + sin(4 * pi/per * conmon.x) + cos(4 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.0553 -1.0516  0.1115  1.1293  7.6462

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.07039    2.51293   0.028    0.978
sin(2 * pi/per * conmon.x) -11.46616    2.44604  -4.688 2.78e-06 ***
cos(2 * pi/per * conmon.x)  13.57532    2.52172   5.383 7.40e-08 ***
sin(4 * pi/per * conmon.x)   0.07058    0.99937   0.071    0.944
cos(4 * pi/per * conmon.x) -11.88121    0.20318 -58.475  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.784 on 18306 degrees of freedom
Multiple R-squared:  0.289,	Adjusted R-squared:  0.2889
F-statistic:  1860 on 4 and 18306 DF,  p-value: < 2.2e-16

> > cmn.month$act <- predict(reslm2, newdata=cmn.month)
> pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> library(ggpmisc)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl[which(day_night == 'day')]),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: Removed 390 rows containing non-finite outside the scale range (`stat_poly_line()`).
2: Removed 390 rows containing non-finite outside the scale range (`stat_poly_eq()`).
3: Removed 390 rows containing missing values or values outside the scale range (`geom_point()`).
> cmn.poh.sum$do_diel_production
  [1] 479.10 479.10 514.37 514.37 571.01 571.01 629.52 629.52 601.22 601.22
 [11] 561.87 561.87 546.46 546.46 561.28 561.28 480.75 480.75 440.45 440.45
 [21] 475.42 475.42 504.69 504.69 503.92 503.92 435.32 435.32 429.53 429.53
 [31] 460.82 460.82 482.90 482.90 498.35 498.35 511.52 511.52 464.36 464.36
 [41] 423.81 423.81 421.97 421.97 427.51 427.51 393.97 393.97 388.56 388.56
 [51] 382.52 382.52 386.63 386.63 411.92 411.92 428.35 428.35 470.73 470.73
 [61] 508.54 508.54 537.84 537.84 575.30 575.30 569.52 569.52 506.87 506.87
 [71] 476.21 476.21 451.00 451.00 473.46 473.46 460.43 460.43 402.11 402.11
 [81] 294.07 294.07 265.12 265.12 263.28 263.28 289.93 289.93 296.05 296.05
 [91] 291.49 291.49 313.47 313.47   0.00   0.00 475.34 475.34 682.80 682.80
[101] 690.14 690.14 628.25 628.25 630.38 630.38 662.80 662.80 536.57 536.57
[111] 116.64 116.64 580.30 580.30 532.74 532.74 521.34 521.34 497.51 497.51
[121] 473.70 473.70 491.14 491.14 519.38 519.38 591.21 591.21 673.10 673.10
[131] 527.81 527.81 451.01 451.01 480.68 480.68 554.42 554.42 670.45 670.45
[141] 683.93 683.93 663.13 663.13 501.76 501.76 531.14 531.14 466.78 466.78
[151] 418.42 418.42 566.41 566.41 625.95 625.95 671.56 671.56 621.30 621.30
[161] 547.86 547.86 513.76 513.76 455.54 455.54 509.35 509.35 571.88 571.88
[171] 598.82 598.82 582.66 582.66 575.05 575.05 604.52 604.52 614.45 614.45
[181] 682.87 682.87 265.74 265.74 316.32 316.32 570.74 570.74 635.75 635.75
[191] 804.62 804.62 716.23 716.23 539.82 539.82 568.55 568.55 664.81 664.81
[201] 557.83 557.83 432.84 432.84  18.19  18.19 460.60 460.60 574.62 574.62
[211] 595.15 595.15 582.97 582.97 641.89 641.89 546.21 546.21 507.12 507.12
[221] 498.62 498.62 559.04 559.04 568.67 568.67 583.73 583.73 709.04 709.04
[231] 695.97 695.97 571.75 571.75 446.53 446.53 493.99 493.99 571.17 571.17
[241] 660.58 660.58 684.40 684.40 610.35 610.35 522.18 522.18 558.54 558.54
[251] 553.96 553.96 586.35 586.35 610.22 610.22 544.52 544.52 450.29 450.29
[261] 491.08 491.08 562.70 562.70 573.94 573.94 573.47 573.47 565.34 565.34
[271] 570.69 570.69 618.13 618.13 516.13 516.13 504.37 504.37 604.34 604.34
[281] 602.40 602.40 589.49 589.49 576.91 576.91 594.40 594.40 607.02 607.02
[291] 607.21 607.21 521.11 521.11 460.63 460.63 448.20 448.20 531.71 531.71
[301] 560.43 560.43 623.07 623.07 590.80 590.80 546.83 546.83 517.23 517.23
[311] 461.32 461.32 498.21 498.21 497.55 497.55 460.27 460.27 432.02 432.02
[321] 491.78 491.78 539.72 539.72 562.23 562.23 588.47 588.47 621.45 621.45
[331] 598.55 598.55 616.40 616.40 553.55 553.55 551.39 551.39 474.43 474.43
[341] 415.18 415.18 415.79 415.79 478.19 478.19 575.67 575.67 692.70 692.70
[351] 523.75 523.75 484.10 484.10 512.58 512.58 481.36 481.36 482.50 482.50
[361] 526.36 526.36 584.77 584.77 537.41 537.41 582.76 582.76 614.83 614.83
[371] 596.87 596.87 612.18 612.18 536.73 536.73 516.78 516.78 516.54 516.54
[381] 494.03 494.03 381.56 381.56 429.30 429.30 506.22 506.22 505.06 505.06
[391]   0.00   0.00
> cmn.poh.sum$do_diel_respiration
  [1] 274.29 274.29 474.93 474.93 521.22 521.22 564.13 564.13 591.20 591.20
 [11] 584.94 584.94 532.79 532.79 586.80 586.80 518.36 518.36 436.36 436.36
 [21] 465.96 465.96 497.50 497.50 480.25 480.25 461.00 461.00 399.82 399.82
 [31] 455.60 455.60 506.42 506.42 535.99 535.99 553.72 553.72 522.54 522.54
 [41] 512.47 512.47 461.96 461.96 442.52 442.52 438.47 438.47 404.79 404.79
 [51] 409.73 409.73 413.85 413.85 427.25 427.25 469.13 469.13 508.05 508.05
 [61] 592.44 592.44 650.86 650.86 698.98 698.98 706.77 706.77 661.73 661.73
 [71] 560.23 560.23 541.02 541.02 568.72 568.72 557.44 557.44 511.49 511.49
 [81] 410.24 410.24 351.06 351.06 343.39 343.39 332.37 332.37 364.53 364.53
 [91] 380.51 380.51 402.36 402.36 155.73 155.73  14.02  14.02 593.21 593.21
[101] 611.85 611.85 549.25 549.25 524.64 524.64 536.38 536.38 522.20 522.20
[111] 454.55 454.55 153.81 153.81 453.04 453.04 446.26 446.26 428.04 428.04
[121] 387.07 387.07 362.64 362.64 379.82 379.82 449.70 449.70 484.70 484.70
[131] 472.51 472.51 380.68 380.68 363.42 363.42 347.12 347.12 439.10 439.10
[141] 494.68 494.68 500.32 500.32 456.13 456.13 368.38 368.38 399.16 399.16
[151] 317.60 317.60 331.04 331.04 430.80 430.80 471.05 471.05 467.69 467.69
[161] 420.08 420.08 389.33 389.33 318.94 318.94 308.04 308.04 362.76 362.76
[171] 403.15 403.15 352.56 352.56 414.97 414.97 385.90 385.90 429.47 429.47
[181] 425.60 425.60 487.37 487.37   0.00   0.00 338.67 338.67 395.70 395.70
[191] 488.96 488.96 466.03 466.03 402.52 402.52 326.32 326.32 407.66 407.66
[201] 366.77 366.77 276.21 276.21 114.61 114.61 169.03 169.03 346.73 346.73
[211] 377.78 377.78 365.49 365.49 335.43 335.43 329.85 329.85 327.28 327.28
[221] 296.89 296.89 336.48 336.48 335.52 335.52 351.41 351.41 444.16 444.16
[231] 441.55 441.55 377.93 377.93 284.38 284.38 271.49 271.49 303.37 303.37
[241] 341.35 341.35 423.69 423.69 402.53 402.53 345.05 345.05 276.46 276.46
[251] 348.16 348.16 359.52 359.52 365.03 365.03 398.36 398.36 288.23 288.23
[261] 260.86 260.86 327.99 327.99 349.15 349.15 350.08 350.08 344.15 344.15
[271] 320.74 320.74 422.96 422.96 379.64 379.64 323.23 323.23 384.41 384.41
[281] 392.13 392.13 383.92 383.92 396.29 396.29 400.56 400.56 386.64 386.64
[291] 459.82 459.82 351.41 351.41 328.65 328.65 267.33 267.33 294.68 294.68
[301] 366.92 366.92 405.25 405.25 407.69 407.69 395.31 395.31 420.08 420.08
[311] 336.78 336.78 316.26 316.26 390.08 390.08 346.68 346.68 283.70 283.70
[321] 321.03 321.03 360.75 360.75 380.11 380.11 383.57 383.57 453.10 453.10
[331] 469.58 469.58 459.77 459.77 461.90 461.90 466.00 466.00 423.36 423.36
[341] 363.75 363.75 322.31 322.31 376.86 376.86 449.00 449.00 602.46 602.46
[351] 457.67 457.67 363.22 363.22 407.08 407.08 441.63 441.63 370.81 370.81
[361] 382.14 382.14 451.34 451.34 477.79 477.79 492.12 492.12 510.01 510.01
[371] 530.84 530.84 561.26 561.26 561.09 561.09 508.97 508.97 457.13 457.13
[381] 404.01 404.01 406.19 406.19 311.65 311.65 414.14 414.14 441.74 441.74
[391] 174.52 174.52
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl[which(day_night == 'day')]),
+     do_diel_respiration = do_diel_production - sum(do_mgl[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')]),
+     do_diel_respiration = do_diel_production - sum(do_mgl_from_eq[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
gg.conmon.noaa
> > head(cmn.poh.sum)
# A tibble: 6 × 26
# Groups:   station, year, season, month, date [3]
  station    year season month date       do_mgl_mean do_mgl_range do_mgl_min
  <chr>     <dbl> <chr>  <dbl> <date>           <dbl>        <dbl>      <dbl>
1 POH002.10  2007 Fall       9 2007-09-15        9.42         7.08       7.08
2 POH002.10  2007 Fall       9 2007-09-15        9.42        12.8        7.08
3 POH002.10  2007 Fall       9 2007-09-16       10.3          8.39       8.39
4 POH002.10  2007 Fall       9 2007-09-16       10.3         13.1        8.39
5 POH002.10  2007 Fall       9 2007-09-17       11.4          8.92       8.92
6 POH002.10  2007 Fall       9 2007-09-17       11.4         14.7        8.92
# ℹ 18 more variables: do_mgl_max <dbl>, do_mgl_median <dbl>,
#   do_time_min <dttm>, do_time_eq_min <dttm>, do_hour_min <dbl>,
#   do_hour_eq_min <dbl>, do_month_min <dbl>, do_diel_min <dbl>,
#   do_diel_max <dbl>, do_hour_max <int>, depth_mean_rounded <dbl>,
#   potomac_river_km <dbl>, sp_cond_mean <dbl>, sp_cond_at_do_min <dbl>,
#   temp_mean <dbl>, air_temp_mean <dbl>, do_diel_production <dbl>,
#   do_diel_respiration <dbl>
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 14 warnings (use warnings() to see them)
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("XFB0231"),
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> source('./mike_atm.R')
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> source('../R/mike_atm.R')
+ library(unitted)
> conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
> conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
> cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
> conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> ## lmfit <- lm(conmon.y~sin(2*pi*conmon.x/366) + cos(2*pi*conmon.x/366))
+ lmfit <- lm(conmon.y~sin(conmon.x))
+ b0 <- coef(lmfit)[1]
+ alpha <- coef(lmfit)[2]
+ beta <- coef(lmfit)[3]
> ssp <- spectrum(conmon.y)
+ per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
+ reslm <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x))
+ summary(reslm)
rg <- diff(range(conmon.y))
+ plot(conmon.y ~ conmon.x, ylim=c(min(conmon.y)-0.1*rg, max(conmon.y)+0.1*rg))
+ ## lines(fitted(reslm)~conmon.x,col=4,lty=2)   # dashed blue line is sin fit
# including 2nd harmonic reallconmon.y improves the fit
+ reslm2 <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x)+sin(4*pi/per*conmon.x)+cos(4*pi/per*conmon.x))
+ summary(reslm2)
+ lines(fitted(reslm2)~conmon.x,col=3)    # solid green line is periodic with second harmonic
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-7.3010 -2.0775 -0.4625  1.7681 11.0495

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.2909     0.2172   1.339    0.181
sin(2 * pi/per * conmon.x)   3.5387     0.1704  20.773  < 2e-16 ***
cos(2 * pi/per * conmon.x)  -0.7478     0.1759  -4.250 2.14e-05 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.81 on 17914 degrees of freedom
Multiple R-squared:  0.1787,	Adjusted R-squared:  0.1786
F-statistic:  1949 on 2 and 17914 DF,  p-value: < 2.2e-16

> > > >
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x) + sin(4 * pi/per * conmon.x) + cos(4 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.8099 -1.7511 -0.1527  1.6665  9.6383

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                  3.8805     3.6151   1.073    0.283
sin(2 * pi/per * conmon.x) -23.2242     3.5112  -6.614 3.84e-11 ***
cos(2 * pi/per * conmon.x)  18.1495     3.6333   4.995 5.93e-07 ***
sin(4 * pi/per * conmon.x)   2.1071     1.4358   1.467    0.142
cos(4 * pi/per * conmon.x) -19.5172     0.2918 -66.876  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.505 on 17912 degrees of freedom
Multiple R-squared:  0.3474,	Adjusted R-squared:  0.3473
F-statistic:  2384 on 4 and 17912 DF,  p-value: < 2.2e-16

> cmn.month$act <- predict(reslm2, newdata=cmn.month)
> > pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> library(ggpmisc)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')]),
+     do_diel_respiration = do_diel_production - sum(do_mgl_from_eq[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 201 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "XFB0231"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date = 2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 200 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ > gg.conmon.noaa
There were 16 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     do_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')]),
+     do_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 201 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "XFB0231"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date = 2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 200 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
+ > gg.conmon.noaa
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     do_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')]),
+     do_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 201 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "XFB0231"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date = 2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 200 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
> head(cmn.poh.sum)
# A tibble: 6 × 28
# Groups:   station, year, season, month, date [3]
  station  year season month date       do_mgl_mean do_mgl_range do_mgl_min
  <chr>   <dbl> <chr>  <dbl> <date>           <dbl>        <dbl>      <dbl>
1 XFB0231  2007 Fall       9 2007-09-15        10.7         7.47       7.47
2 XFB0231  2007 Fall       9 2007-09-15        10.7        15.5        7.47
3 XFB0231  2007 Fall       9 2007-09-16        11.1         7.39       7.39
4 XFB0231  2007 Fall       9 2007-09-16        11.1        16.6        7.39
5 XFB0231  2007 Fall       9 2007-09-17        12.7         8.91       8.91
6 XFB0231  2007 Fall       9 2007-09-17        12.7        17.4        8.91
# ℹ 20 more variables: do_mgl_max <dbl>, do_mgl_median <dbl>,
#   do_time_min <dttm>, do_time_eq_min <dttm>, do_hour_min <dbl>,
#   do_hour_eq_min <dbl>, do_month_min <dbl>, do_diel_min <dbl>,
#   do_diel_max <dbl>, do_hour_max <int>, depth_mean_rounded <dbl>,
#   potomac_river_km <dbl>, sp_cond_mean <dbl>, sp_cond_at_do_min <dbl>,
#   temp_mean <dbl>, air_temp_mean <dbl>, skycover_mean <dbl>,
#   dewtemp_mean <dbl>, do_diel_production <dbl>, do_diel_respiration <dbl>
> head(cmn.poh.sum$skycover_mean)
[1] NA NA NA NA NA NA
> cmn.month$skycover
    [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [25] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [49] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [73] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [97] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17905] NA NA NA NA NA NA NA NA NA NA NA NA NA
> conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
> conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
> cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
> cmn.month$skycover
    [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [25] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [49] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [73] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [97] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17905] NA NA NA NA NA NA NA NA NA NA NA NA NA
> cmn.month$air_kPa
    [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [25] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [49] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [73] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [97] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17905] NA NA NA NA NA NA NA NA NA NA NA NA NA
> cmn.month$air_temp
    [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [25] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [49] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [73] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
   [97] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
  [985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [1993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [2977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [3985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [4993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [5977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [6985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [7993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [8977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
 [9985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[10993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[11977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[12985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[13993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14905] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14929] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14953] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[14977] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15001] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15025] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15049] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15073] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15097] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15121] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15169] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15193] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15217] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15241] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15289] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15313] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15337] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15361] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15385] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15433] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15457] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15481] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15505] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15553] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15577] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15601] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15625] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15649] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15697] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15721] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15745] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15769] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15817] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15841] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15865] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15889] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15913] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15937] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15961] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[15985] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16009] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16033] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16081] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16105] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16129] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16153] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16225] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16249] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16273] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16297] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16345] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16369] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16393] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16417] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16465] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16489] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16513] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16537] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16561] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16609] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16633] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16657] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16681] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16729] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16753] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16777] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16801] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16825] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16873] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16897] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16921] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16945] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[16993] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17017] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17041] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17065] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17089] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17113] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17137] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17161] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17185] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17209] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17257] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17281] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17305] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17329] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17377] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17401] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17425] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17449] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17473] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17521] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17545] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17569] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17593] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17641] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17665] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17689] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17713] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17737] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17785] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17809] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17833] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17857] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[17905] NA NA NA NA NA NA NA NA NA NA NA NA NA
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_hour_min,
+                   y = do_hour_max,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("POH002.10"),
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> source('./mike_atm.R')
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> source('../R/mike_atm.R')
+ library(unitted)
> conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
> conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
> cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
> conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> ## lmfit <- lm(conmon.y~sin(2*pi*conmon.x/366) + cos(2*pi*conmon.x/366))
+ lmfit <- lm(conmon.y~sin(conmon.x))
+ b0 <- coef(lmfit)[1]
+ alpha <- coef(lmfit)[2]
+ beta <- coef(lmfit)[3]
> ssp <- spectrum(conmon.y)
+ per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
+ reslm <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x))
+ summary(reslm)
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.1578 -1.2515  0.0209  1.2855  8.5736

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.8175     0.1480   5.525 3.35e-08 ***
sin(2 * pi/per * conmon.x)   1.8963     0.1164  16.286  < 2e-16 ***
cos(2 * pi/per * conmon.x)  -0.8281     0.1198  -6.915 4.84e-12 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.947 on 18308 degrees of freedom
Multiple R-squared:  0.1533,	Adjusted R-squared:  0.1532
F-statistic:  1657 on 2 and 18308 DF,  p-value: < 2.2e-16

> rg <- diff(range(conmon.y))
+ plot(conmon.y ~ conmon.x, ylim=c(min(conmon.y)-0.1*rg, max(conmon.y)+0.1*rg))
+ ## lines(fitted(reslm)~conmon.x,col=4,lty=2)   # dashed blue line is sin fit
> # including 2nd harmonic reallconmon.y improves the fit
+ reslm2 <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x)+sin(4*pi/per*conmon.x)+cos(4*pi/per*conmon.x))
+ summary(reslm2)
+ lines(fitted(reslm2)~conmon.x,col=3)    # solid green line is periodic with second harmonic
> >
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x) + sin(4 * pi/per * conmon.x) + cos(4 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.0553 -1.0516  0.1115  1.1293  7.6462

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.07039    2.51293   0.028    0.978
sin(2 * pi/per * conmon.x) -11.46616    2.44604  -4.688 2.78e-06 ***
cos(2 * pi/per * conmon.x)  13.57532    2.52172   5.383 7.40e-08 ***
sin(4 * pi/per * conmon.x)   0.07058    0.99937   0.071    0.944
cos(4 * pi/per * conmon.x) -11.88121    0.20318 -58.475  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.784 on 18306 degrees of freedom
Multiple R-squared:  0.289,	Adjusted R-squared:  0.2889
F-statistic:  1860 on 4 and 18306 DF,  p-value: < 2.2e-16

> > cmn.month$act <- predict(reslm2, newdata=cmn.month)
> pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> library(ggpmisc)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     do_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')]),
+     do_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
There were 14 warnings (use warnings() to see them)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     do_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')]),
+     do_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')]),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> head(cmn.month)
            date_time   station layer depth temp sp_cond salinity do_sat    do
1 2007-04-09 09:30:00 POH002.10    AB  0.33 8.48     349     0.17   98.9 11.57
2 2007-04-09 09:45:00 POH002.10    AB  0.33 8.48     348     0.17   99.8 11.67
3 2007-04-09 10:00:00 POH002.10    AB  0.33 8.56     348     0.17  100.7 11.75
4 2007-04-09 10:15:00 POH002.10    AB  0.33 8.43     347     0.17  100.8 11.81
5 2007-04-09 10:30:00 POH002.10    AB  0.33 8.22     347     0.17  100.0 11.77
6 2007-04-09 10:45:00 POH002.10    AB  0.33 8.36     345     0.17   99.5 11.67
    ph turb fluor tchl_pre_cal chla       X       Y rowid
1 8.48   NA    NA          9.6   NA 4544579 5429477   242
2 8.50   NA    NA          9.5   NA 4544579 5429477   242
3 8.51   NA    NA         10.1   NA 4544579 5429477   242
4 8.49   NA    NA          9.0   NA 4544579 5429477   242
5 8.42   NA    NA          9.6   NA 4544579 5429477   242
6 8.40   NA    NA         10.0   NA 4544579 5429477   242
                          id    comid               fdate resolution gnis_id
1 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium  597915
2 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium  597915
3 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium  597915
4 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium  597915
5 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium  597915
6 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium  597915
      gnis_name lengthkm      reachcode        flowdir wbareacomi
1 Potomac River    3.688 02070010000004 With Digitized  120049842
2 Potomac River    3.688 02070010000004 With Digitized  120049842
3 Potomac River    3.688 02070010000004 With Digitized  120049842
4 Potomac River    3.688 02070010000004 With Digitized  120049842
5 Potomac River    3.688 02070010000004 With Digitized  120049842
6 Potomac River    3.688 02070010000004 With Digitized  120049842
           ftype fcode shape_length streamleve streamorde streamcalc  fromnode
1 ArtificialPath 55800   0.03488127          1          7          7 200087412
2 ArtificialPath 55800   0.03488127          1          7          7 200087412
3 ArtificialPath 55800   0.03488127          1          7          7 200087412
4 ArtificialPath 55800   0.03488127          1          7          7 200087412
5 ArtificialPath 55800   0.03488127          1          7          7 200087412
6 ArtificialPath 55800   0.03488127          1          7          7 200087412
     tonode  hydroseq levelpathi pathlength terminalpa arbolatesu divergence
1 200087415 200005272  200004858    151.054  200004858   22989.36          0
2 200087415 200005272  200004858    151.054  200004858   22989.36          0
3 200087415 200005272  200004858    151.054  200004858   22989.36          0
4 200087415 200005272  200004858    151.054  200004858   22989.36          0
5 200087415 200005272  200004858    151.054  200004858   22989.36          0
6 200087415 200005272  200004858    151.054  200004858   22989.36          0
  startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat dnminorhyd
1         0          0       1  200004858  200005277  200004858          0
2         0          0       1  200004858  200005277  200004858          0
3         0          0       1  200004858  200005277  200004858          0
4         0          0       1  200004858  200005277  200004858          0
5         0          0       1  200004858  200005277  200004858          0
6         0          0       1  200004858  200005277  200004858          0
  dndraincou dnhydroseq frommeas tomeas rtndiv vpuin vpuout areasqkm totdasqkm
1          1  200005268        0    100      1     0      0   4.9689  31332.21
2          1  200005268        0    100      1     0      0   4.9689  31332.21
3          1  200005268        0    100      1     0      0   4.9689  31332.21
4          1  200005268        0    100      1     0      0   4.9689  31332.21
5          1  200005268        0    100      1     0      0   4.9689  31332.21
6          1  200005268        0    100      1     0      0   4.9689  31332.21
  divdasqkm tidal totma  wbareatype pathtimema hwnodesqkm maxelevraw minelevraw
1  31332.21     1 -9999 StreamRiver      -9999         NA      -9998        -88
2  31332.21     1 -9999 StreamRiver      -9999         NA      -9998        -88
3  31332.21     1 -9999 StreamRiver      -9999         NA      -9998        -88
4  31332.21     1 -9999 StreamRiver      -9999         NA      -9998        -88
5  31332.21     1 -9999 StreamRiver      -9999         NA      -9998        -88
6  31332.21     1 -9999 StreamRiver      -9999         NA      -9998        -88
  maxelevsmo minelevsmo slope elevfixed hwtype slopelenkm    qa_ma va_ma
1          0          0 1e-05         0     NA      3.688 12829.27 -9999
2          0          0 1e-05         0     NA      3.688 12829.27 -9999
3          0          0 1e-05         0     NA      3.688 12829.27 -9999
4          0          0 1e-05         0     NA      3.688 12829.27 -9999
5          0          0 1e-05         0     NA      3.688 12829.27 -9999
6          0          0 1e-05         0     NA      3.688 12829.27 -9999
     qc_ma vc_ma    qe_ma ve_ma    qa_01 va_01    qc_01 vc_01    qe_01 ve_01
1 13880.12 -9999 13413.91 -9999 17827.03 -9999 15322.78 -9999 16219.54 -9999
2 13880.12 -9999 13413.91 -9999 17827.03 -9999 15322.78 -9999 16219.54 -9999
3 13880.12 -9999 13413.91 -9999 17827.03 -9999 15322.78 -9999 16219.54 -9999
4 13880.12 -9999 13413.91 -9999 17827.03 -9999 15322.78 -9999 16219.54 -9999
5 13880.12 -9999 13413.91 -9999 17827.03 -9999 15322.78 -9999 16219.54 -9999
6 13880.12 -9999 13413.91 -9999 17827.03 -9999 15322.78 -9999 16219.54 -9999
     qa_02 va_02    qc_02 vc_02    qe_02 ve_02    qa_03 va_03    qc_03 vc_03
1 19133.31 -9999 11121.65 -9999 18744.39 -9999 25024.92 -9999 19441.44 -9999
2 19133.31 -9999 11121.65 -9999 18744.39 -9999 25024.92 -9999 19441.44 -9999
3 19133.31 -9999 11121.65 -9999 18744.39 -9999 25024.92 -9999 19441.44 -9999
4 19133.31 -9999 11121.65 -9999 18744.39 -9999 25024.92 -9999 19441.44 -9999
5 19133.31 -9999 11121.65 -9999 18744.39 -9999 25024.92 -9999 19441.44 -9999
6 19133.31 -9999 11121.65 -9999 18744.39 -9999 25024.92 -9999 19441.44 -9999
     qe_03 ve_03    qa_04 va_04    qc_04 vc_04    qe_04 ve_04    qa_05 va_05
1 25348.35 -9999 21358.42 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999
2 25348.35 -9999 21358.42 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999
3 25348.35 -9999 21358.42 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999
4 25348.35 -9999 21358.42 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999
5 25348.35 -9999 21358.42 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999
6 25348.35 -9999 21358.42 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999
     qc_05 vc_05    qe_05 ve_05    qa_06 va_06    qc_06 vc_06    qe_06 ve_06
1 9426.704 -9999 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999
2 9426.704 -9999 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999
3 9426.704 -9999 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999
4 9426.704 -9999 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999
5 9426.704 -9999 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999
6 9426.704 -9999 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999
     qa_07 va_07    qc_07 vc_07   qe_07 ve_07    qa_08 va_08    qc_08 vc_08
1 5702.503 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999
2 5702.503 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999
3 5702.503 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999
4 5702.503 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999
5 5702.503 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999
6 5702.503 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999
     qe_08 ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09    qa_10 va_10
1 4731.121 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
2 4731.121 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
3 4731.121 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
4 4731.121 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
5 4731.121 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
6 4731.121 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
     qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11    qe_11 ve_11
1 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365 -9999
2 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365 -9999
3 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365 -9999
4 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365 -9999
5 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365 -9999
6 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365 -9999
     qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract surfarea rareahload
1 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA         NA
2 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA         NA
3 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA         NA
4 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA         NA
5 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA         NA
6 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA         NA
  rpuid vpuid enabled seg_len_m  seg_len_km total_len_km   src src_sub
1   02a    02       1  3.999503 0.003999503     44.64021 VECOS  CONMON
2   02a    02       1  3.999503 0.003999503     44.64021 VECOS  CONMON
3   02a    02       1  3.999503 0.003999503     44.64021 VECOS  CONMON
4   02a    02       1  3.999503 0.003999503     44.64021 VECOS  CONMON
5   02a    02       1  3.999503 0.003999503     44.64021 VECOS  CONMON
6   02a    02       1  3.999503 0.003999503     44.64021 VECOS  CONMON
  data_type     watershed watershed_sub  site_name latitude longitude
1        WQ Potomac River   PohickCreek Pohick Bay 38.67591 -77.16641
2        WQ Potomac River   PohickCreek Pohick Bay 38.67591 -77.16641
3        WQ Potomac River   PohickCreek Pohick Bay 38.67591 -77.16641
4        WQ Potomac River   PohickCreek Pohick Bay 38.67591 -77.16641
5        WQ Potomac River   PohickCreek Pohick Bay 38.67591 -77.16641
6        WQ Potomac River   PohickCreek Pohick Bay 38.67591 -77.16641
  start_year end_year station_depth top_sensor_depth_m station_depth_m DO
1       2007     2009          <NA>              FIXED            NULL  1
2       2007     2009          <NA>              FIXED            NULL  1
3       2007     2009          <NA>              FIXED            NULL  1
4       2007     2009          <NA>              FIXED            NULL  1
5       2007     2009          <NA>              FIXED            NULL  1
6       2007     2009          <NA>              FIXED            NULL  1
  WQ_fixed WQ_fixed_waterlevel                                url notes
1        1                   1 http://vecos.vims.edu/Default.aspx  <NA>
2        1                   1 http://vecos.vims.edu/Default.aspx  <NA>
3        1                   1 http://vecos.vims.edu/Default.aspx  <NA>
4        1                   1 http://vecos.vims.edu/Default.aspx  <NA>
5        1                   1 http://vecos.vims.edu/Default.aspx  <NA>
6        1                   1 http://vecos.vims.edu/Default.aspx  <NA>
             DateTime            DateTime_UTC       date dec_date year quarter
1 2007-04-09 09:30:00 2007-04-09 14:30:00 UTC 2007-04-09 2007.268 2007       2
2 2007-04-09 09:45:00 2007-04-09 14:45:00 UTC 2007-04-09 2007.268 2007       2
3 2007-04-09 10:00:00 2007-04-09 15:00:00 UTC 2007-04-09 2007.268 2007       2
4 2007-04-09 10:15:00 2007-04-09 15:15:00 UTC 2007-04-09 2007.268 2007       2
5 2007-04-09 10:30:00 2007-04-09 15:30:00 UTC 2007-04-09 2007.268 2007       2
6 2007-04-09 10:45:00 2007-04-09 15:45:00 UTC 2007-04-09 2007.268 2007       2
  month week do_rollmean30 do_modeled depth_bucket      diel daynight  air_kPa
1     4   15      9.740667   11.69869          0.5  9.323223     TRUE 102.0050
2     4   15      9.909667   11.69339          0.5  9.573223     TRUE 102.0025
3     4   15     10.083000   11.66832          0.5  9.823223     TRUE 102.0000
4     4   15     10.264333   11.71627          0.5 10.073223     TRUE 101.9925
5     4   15     10.454667   11.77000          0.5 10.323223     TRUE 101.9850
6     4   15     10.653333   11.72864          0.5 10.573223     TRUE 101.9775
  air_temp dewtemp winddir windspeed skycover precip1h   precip6h
1    5.300     -67   285.0     46.00    7.250        0 -0.4362745
2    5.450     -67   277.5     43.50    7.375        0 -0.4387255
3    5.600     -67   270.0     41.00    7.500        0 -0.4411765
4    5.725     -67   265.0     39.75    7.625        0 -0.4436275
5    5.850     -67   260.0     38.50    7.750        0 -0.4460784
6    5.975     -67   255.0     37.25    7.875        0 -0.4485294
  do_mgl_from_eq day_night       act
1    -0.12868554       day 0.6132000
2    -0.02338677       day 0.6996239
3     0.08167825       day 0.7888059
4     0.09373016       day 0.8804234
5     0.00000000       day 0.9741502
6    -0.05864322       day 1.0696573
> head(cmn.month[cmn.month$month == 9,])
                date_time   station layer depth  temp sp_cond salinity do_sat
12453 2007-08-31 19:00:00 POH002.10    AB  0.33 28.80     454     0.22  158.0
12454 2007-08-31 19:15:00 POH002.10    AB  0.33 28.77     453     0.22  152.6
12455 2007-08-31 19:30:00 POH002.10    AB  0.33 28.73     454     0.22  149.5
12456 2007-08-31 19:45:00 POH002.10    AB  0.33 28.70     454     0.22  149.0
12457 2007-08-31 20:00:00 POH002.10    AB  0.33 28.68     455     0.22  146.3
12458 2007-08-31 20:15:00 POH002.10    AB  0.33 28.65     455     0.22  145.0
         do   ph turb fluor tchl_pre_cal chla       X       Y rowid
12453 12.18 9.11  5.0   1.4          5.7   NA 4544579 5429477   242
12454 11.77 9.06  5.0   1.4          6.0   NA 4544579 5429477   242
12455 11.54 9.03  5.1   1.4          5.6   NA 4544579 5429477   242
12456 11.51 9.05  4.2   1.2          4.8   NA 4544579 5429477   242
12457 11.30 9.00  4.8   1.3          5.4   NA 4544579 5429477   242
12458 11.20 8.99  4.1   1.3          5.2   NA 4544579 5429477   242
                              id    comid               fdate resolution
12453 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
12454 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
12455 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
12456 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
12457 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
12458 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
      gnis_id     gnis_name lengthkm      reachcode        flowdir wbareacomi
12453  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
12454  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
12455  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
12456  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
12457  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
12458  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
               ftype fcode shape_length streamleve streamorde streamcalc
12453 ArtificialPath 55800   0.03488127          1          7          7
12454 ArtificialPath 55800   0.03488127          1          7          7
12455 ArtificialPath 55800   0.03488127          1          7          7
12456 ArtificialPath 55800   0.03488127          1          7          7
12457 ArtificialPath 55800   0.03488127          1          7          7
12458 ArtificialPath 55800   0.03488127          1          7          7
       fromnode    tonode  hydroseq levelpathi pathlength terminalpa arbolatesu
12453 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
12454 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
12455 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
12456 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
12457 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
12458 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
      divergence startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat
12453          0         0          0       1  200004858  200005277  200004858
12454          0         0          0       1  200004858  200005277  200004858
12455          0         0          0       1  200004858  200005277  200004858
12456          0         0          0       1  200004858  200005277  200004858
12457          0         0          0       1  200004858  200005277  200004858
12458          0         0          0       1  200004858  200005277  200004858
      dnminorhyd dndraincou dnhydroseq frommeas tomeas rtndiv vpuin vpuout
12453          0          1  200005268        0    100      1     0      0
12454          0          1  200005268        0    100      1     0      0
12455          0          1  200005268        0    100      1     0      0
12456          0          1  200005268        0    100      1     0      0
12457          0          1  200005268        0    100      1     0      0
12458          0          1  200005268        0    100      1     0      0
      areasqkm totdasqkm divdasqkm tidal totma  wbareatype pathtimema
12453   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
12454   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
12455   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
12456   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
12457   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
12458   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
      hwnodesqkm maxelevraw minelevraw maxelevsmo minelevsmo slope elevfixed
12453         NA      -9998        -88          0          0 1e-05         0
12454         NA      -9998        -88          0          0 1e-05         0
12455         NA      -9998        -88          0          0 1e-05         0
12456         NA      -9998        -88          0          0 1e-05         0
12457         NA      -9998        -88          0          0 1e-05         0
12458         NA      -9998        -88          0          0 1e-05         0
      hwtype slopelenkm    qa_ma va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01
12453     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
12454     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
12455     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
12456     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
12457     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
12458     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
      va_01    qc_01 vc_01    qe_01 ve_01    qa_02 va_02    qc_02 vc_02
12453 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
12454 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
12455 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
12456 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
12457 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
12458 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
         qe_02 ve_02    qa_03 va_03    qc_03 vc_03    qe_03 ve_03    qa_04
12453 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
12454 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
12455 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
12456 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
12457 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
12458 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
      va_04    qc_04 vc_04    qe_04 ve_04    qa_05 va_05    qc_05 vc_05
12453 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
12454 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
12455 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
12456 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
12457 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
12458 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
         qe_05 ve_05    qa_06 va_06    qc_06 vc_06    qe_06 ve_06    qa_07
12453 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
12454 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
12455 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
12456 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
12457 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
12458 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
      va_07    qc_07 vc_07   qe_07 ve_07    qa_08 va_08    qc_08 vc_08    qe_08
12453 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
12454 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
12455 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
12456 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
12457 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
12458 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
      ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09    qa_10 va_10
12453 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
12454 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
12455 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
12456 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
12457 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
12458 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
         qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11    qe_11
12453 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
12454 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
12455 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
12456 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
12457 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
12458 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
      ve_11    qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract surfarea
12453 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
12454 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
12455 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
12456 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
12457 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
12458 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
      rareahload rpuid vpuid enabled seg_len_m  seg_len_km total_len_km   src
12453         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
12454         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
12455         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
12456         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
12457         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
12458         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
      src_sub data_type     watershed watershed_sub  site_name latitude
12453  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
12454  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
12455  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
12456  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
12457  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
12458  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
      longitude start_year end_year station_depth top_sensor_depth_m
12453 -77.16641       2007     2009          <NA>              FIXED
12454 -77.16641       2007     2009          <NA>              FIXED
12455 -77.16641       2007     2009          <NA>              FIXED
12456 -77.16641       2007     2009          <NA>              FIXED
12457 -77.16641       2007     2009          <NA>              FIXED
12458 -77.16641       2007     2009          <NA>              FIXED
      station_depth_m DO WQ_fixed WQ_fixed_waterlevel
12453            NULL  1        1                   1
12454            NULL  1        1                   1
12455            NULL  1        1                   1
12456            NULL  1        1                   1
12457            NULL  1        1                   1
12458            NULL  1        1                   1
                                     url notes            DateTime
12453 http://vecos.vims.edu/Default.aspx  <NA> 2007-08-31 19:00:00
12454 http://vecos.vims.edu/Default.aspx  <NA> 2007-08-31 19:15:00
12455 http://vecos.vims.edu/Default.aspx  <NA> 2007-08-31 19:30:00
12456 http://vecos.vims.edu/Default.aspx  <NA> 2007-08-31 19:45:00
12457 http://vecos.vims.edu/Default.aspx  <NA> 2007-08-31 20:00:00
12458 http://vecos.vims.edu/Default.aspx  <NA> 2007-08-31 20:15:00
                 DateTime_UTC       date dec_date year quarter month week
12453 2007-09-01 00:00:00 UTC 2007-09-01 2007.666 2007       3     9   35
12454 2007-09-01 00:15:00 UTC 2007-09-01 2007.666 2007       3     9   35
12455 2007-09-01 00:30:00 UTC 2007-09-01 2007.666 2007       3     9   35
12456 2007-09-01 00:45:00 UTC 2007-09-01 2007.666 2007       3     9   35
12457 2007-09-01 01:00:00 UTC 2007-09-01 2007.666 2007       3     9   35
12458 2007-09-01 01:15:00 UTC 2007-09-01 2007.666 2007       3     9   35
      do_rollmean30 do_modeled depth_bucket    diel daynight air_kPa air_temp
12453      11.99367   7.708861          0.5 18.8404    FALSE  101.52   26.700
12454      11.89767   7.712975          0.5 19.0904    FALSE  101.54   26.425
12455      11.79633   7.719064          0.5 19.3404    FALSE  101.56   26.150
12456      11.71567   7.724832          0.5 19.5904    FALSE  101.58   25.875
12457      11.64033   7.723855          0.5 19.8404    FALSE  101.60   25.600
12458      11.55400   7.724138          0.5 20.0904    FALSE  101.62   25.450
      dewtemp winddir windspeed skycover precip1h precip6h do_mgl_from_eq
12453  172.00      10     62.00        2        0 24.17647       4.471139
12454  172.00      10     62.00        2        0 24.11765       4.057025
12455  172.00      10     62.00        2        0 24.05882       3.820936
12456  172.00      10     62.00        2        0 24.00000       3.785168
12457  172.00      10     62.00        2        0 23.94118       3.576145
12458  170.75      95     59.25        2        0 23.88235       3.475862
      day_night      act
12453     night 3.066489
12454     night 3.031859
12455     night 2.988765
12456     night 2.937035
12457     night 2.876512
12458     night 2.807045
> head(cmn.month[cmn.month$week == 38,])
                date_time   station layer depth  temp sp_cond salinity do_sat
13989 2007-09-16 19:00:00 POH002.10    AB  0.33 23.33     598     0.29  147.2
13990 2007-09-16 19:15:00 POH002.10    AB  0.33 23.28     597     0.29  147.6
13991 2007-09-16 19:30:00 POH002.10    AB  0.33 23.20     594     0.29  146.0
13992 2007-09-16 19:45:00 POH002.10    AB  0.33 23.16     593     0.29  145.8
13993 2007-09-16 20:00:00 POH002.10    AB  0.33 23.12     592     0.29  147.8
13994 2007-09-16 20:15:00 POH002.10    AB  0.33 23.10     588     0.28  146.0
         do   ph turb fluor tchl_pre_cal chla       X       Y rowid
13989 12.53 8.99   NA   1.0          4.5   NA 4544579 5429477   242
13990 12.58 9.02   NA   1.1          4.7   NA 4544579 5429477   242
13991 12.46 8.99   NA   1.0          4.3   NA 4544579 5429477   242
13992 12.45 8.95   NA   1.2          5.1   NA 4544579 5429477   242
13993 12.63 9.00   NA   1.1          4.6   NA 4544579 5429477   242
13994 12.48 8.99   NA   1.5          6.5   NA 4544579 5429477   242
                              id    comid               fdate resolution
13989 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13990 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13991 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13992 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13993 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13994 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
      gnis_id     gnis_name lengthkm      reachcode        flowdir wbareacomi
13989  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13990  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13991  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13992  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13993  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13994  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
               ftype fcode shape_length streamleve streamorde streamcalc
13989 ArtificialPath 55800   0.03488127          1          7          7
13990 ArtificialPath 55800   0.03488127          1          7          7
13991 ArtificialPath 55800   0.03488127          1          7          7
13992 ArtificialPath 55800   0.03488127          1          7          7
13993 ArtificialPath 55800   0.03488127          1          7          7
13994 ArtificialPath 55800   0.03488127          1          7          7
       fromnode    tonode  hydroseq levelpathi pathlength terminalpa arbolatesu
13989 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13990 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13991 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13992 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13993 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13994 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
      divergence startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat
13989          0         0          0       1  200004858  200005277  200004858
13990          0         0          0       1  200004858  200005277  200004858
13991          0         0          0       1  200004858  200005277  200004858
13992          0         0          0       1  200004858  200005277  200004858
13993          0         0          0       1  200004858  200005277  200004858
13994          0         0          0       1  200004858  200005277  200004858
      dnminorhyd dndraincou dnhydroseq frommeas tomeas rtndiv vpuin vpuout
13989          0          1  200005268        0    100      1     0      0
13990          0          1  200005268        0    100      1     0      0
13991          0          1  200005268        0    100      1     0      0
13992          0          1  200005268        0    100      1     0      0
13993          0          1  200005268        0    100      1     0      0
13994          0          1  200005268        0    100      1     0      0
      areasqkm totdasqkm divdasqkm tidal totma  wbareatype pathtimema
13989   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13990   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13991   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13992   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13993   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13994   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
      hwnodesqkm maxelevraw minelevraw maxelevsmo minelevsmo slope elevfixed
13989         NA      -9998        -88          0          0 1e-05         0
13990         NA      -9998        -88          0          0 1e-05         0
13991         NA      -9998        -88          0          0 1e-05         0
13992         NA      -9998        -88          0          0 1e-05         0
13993         NA      -9998        -88          0          0 1e-05         0
13994         NA      -9998        -88          0          0 1e-05         0
      hwtype slopelenkm    qa_ma va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01
13989     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13990     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13991     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13992     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13993     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13994     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
      va_01    qc_01 vc_01    qe_01 ve_01    qa_02 va_02    qc_02 vc_02
13989 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13990 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13991 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13992 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13993 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13994 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
         qe_02 ve_02    qa_03 va_03    qc_03 vc_03    qe_03 ve_03    qa_04
13989 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13990 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13991 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13992 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13993 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13994 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
      va_04    qc_04 vc_04    qe_04 ve_04    qa_05 va_05    qc_05 vc_05
13989 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13990 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13991 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13992 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13993 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13994 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
         qe_05 ve_05    qa_06 va_06    qc_06 vc_06    qe_06 ve_06    qa_07
13989 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13990 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13991 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13992 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13993 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13994 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
      va_07    qc_07 vc_07   qe_07 ve_07    qa_08 va_08    qc_08 vc_08    qe_08
13989 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13990 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13991 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13992 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13993 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13994 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
      ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09    qa_10 va_10
13989 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13990 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13991 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13992 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13993 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13994 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
         qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11    qe_11
13989 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13990 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13991 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13992 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13993 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13994 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
      ve_11    qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract surfarea
13989 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13990 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13991 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13992 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13993 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13994 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
      rareahload rpuid vpuid enabled seg_len_m  seg_len_km total_len_km   src
13989         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13990         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13991         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13992         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13993         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13994         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
      src_sub data_type     watershed watershed_sub  site_name latitude
13989  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13990  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13991  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13992  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13993  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13994  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
      longitude start_year end_year station_depth top_sensor_depth_m
13989 -77.16641       2007     2009          <NA>              FIXED
13990 -77.16641       2007     2009          <NA>              FIXED
13991 -77.16641       2007     2009          <NA>              FIXED
13992 -77.16641       2007     2009          <NA>              FIXED
13993 -77.16641       2007     2009          <NA>              FIXED
13994 -77.16641       2007     2009          <NA>              FIXED
      station_depth_m DO WQ_fixed WQ_fixed_waterlevel
13989            NULL  1        1                   1
13990            NULL  1        1                   1
13991            NULL  1        1                   1
13992            NULL  1        1                   1
13993            NULL  1        1                   1
13994            NULL  1        1                   1
                                     url notes            DateTime
13989 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 19:00:00
13990 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 19:15:00
13991 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 19:30:00
13992 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 19:45:00
13993 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 20:00:00
13994 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 20:15:00
                 DateTime_UTC       date dec_date year quarter month week
13989 2007-09-17 00:00:00 UTC 2007-09-17  2007.71 2007       3     9   38
13990 2007-09-17 00:15:00 UTC 2007-09-17  2007.71 2007       3     9   38
13991 2007-09-17 00:30:00 UTC 2007-09-17  2007.71 2007       3     9   38
13992 2007-09-17 00:45:00 UTC 2007-09-17  2007.71 2007       3     9   38
13993 2007-09-17 01:00:00 UTC 2007-09-17  2007.71 2007       3     9   38
13994 2007-09-17 01:15:00 UTC 2007-09-17  2007.71 2007       3     9   38
      do_rollmean30 do_modeled depth_bucket     diel daynight  air_kPa air_temp
13989      12.08600   8.512228          0.5 18.93179    FALSE 102.5500   16.100
13990      12.06033   8.523035          0.5 19.18179    FALSE 102.5625   15.975
13991      12.04067   8.534247          0.5 19.43179    FALSE 102.5750   15.850
13992      12.02167   8.539095          0.5 19.68179    FALSE 102.5875   15.725
13993      12.00033   8.545332          0.5 19.93179    FALSE 102.6000   15.600
13994      11.97533   8.547945          0.5 20.18179    FALSE 102.6075   15.600
      dewtemp winddir windspeed skycover precip1h     precip6h do_mgl_from_eq
13989   72.00   130.0      41.0      4.0        0 -0.040000000       4.017772
13990   70.75   127.5      36.0      3.5        0 -0.033333333       4.056965
13991   69.50   125.0      31.0      3.0        0 -0.026666667       3.925753
13992   68.25   122.5      26.0      2.5        0 -0.020000000       3.910905
13993   67.00   120.0      21.0      2.0        0 -0.013333333       4.084668
13994   65.50   110.0      19.5      2.0        0 -0.006666667       3.932055
      day_night      act
13989     night 3.054800
13990     night 3.017096
13991     night 2.970864
13992     night 2.915938
13993     night 2.852161
13994     night 2.779391
> head(cmn.month[cmn.month$week == 37,])
                date_time   station layer depth  temp sp_cond salinity do_sat
13317 2007-09-09 19:00:00 POH002.10    AB  0.33 29.51     558     0.27  137.8
13318 2007-09-09 19:15:00 POH002.10    AB  0.33 29.47     557     0.27  136.8
13319 2007-09-09 19:30:00 POH002.10    AB  0.33 29.43     555     0.27  133.8
13320 2007-09-09 19:45:00 POH002.10    AB  0.33 29.42     556     0.27  132.0
13321 2007-09-09 20:00:00 POH002.10    AB  0.33 29.42     555     0.27  133.4
13322 2007-09-09 20:15:00 POH002.10    AB  0.33 29.44     558     0.27  132.4
         do   ph turb fluor tchl_pre_cal chla       X       Y rowid
13317 10.49 8.80 12.5   1.3          5.1   NA 4544579 5429477   242
13318 10.42 8.82  8.2   1.1          4.5   NA 4544579 5429477   242
13319 10.20 8.81  8.6   1.3          5.4   NA 4544579 5429477   242
13320 10.07 8.81  7.8   0.9          3.6   NA 4544579 5429477   242
13321 10.17 8.82  6.5   1.3          5.5   NA 4544579 5429477   242
13322 10.09 8.81  6.7   1.1          4.4   NA 4544579 5429477   242
                              id    comid               fdate resolution
13317 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13318 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13319 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13320 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13321 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13322 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
      gnis_id     gnis_name lengthkm      reachcode        flowdir wbareacomi
13317  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13318  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13319  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13320  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13321  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13322  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
               ftype fcode shape_length streamleve streamorde streamcalc
13317 ArtificialPath 55800   0.03488127          1          7          7
13318 ArtificialPath 55800   0.03488127          1          7          7
13319 ArtificialPath 55800   0.03488127          1          7          7
13320 ArtificialPath 55800   0.03488127          1          7          7
13321 ArtificialPath 55800   0.03488127          1          7          7
13322 ArtificialPath 55800   0.03488127          1          7          7
       fromnode    tonode  hydroseq levelpathi pathlength terminalpa arbolatesu
13317 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13318 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13319 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13320 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13321 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13322 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
      divergence startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat
13317          0         0          0       1  200004858  200005277  200004858
13318          0         0          0       1  200004858  200005277  200004858
13319          0         0          0       1  200004858  200005277  200004858
13320          0         0          0       1  200004858  200005277  200004858
13321          0         0          0       1  200004858  200005277  200004858
13322          0         0          0       1  200004858  200005277  200004858
      dnminorhyd dndraincou dnhydroseq frommeas tomeas rtndiv vpuin vpuout
13317          0          1  200005268        0    100      1     0      0
13318          0          1  200005268        0    100      1     0      0
13319          0          1  200005268        0    100      1     0      0
13320          0          1  200005268        0    100      1     0      0
13321          0          1  200005268        0    100      1     0      0
13322          0          1  200005268        0    100      1     0      0
      areasqkm totdasqkm divdasqkm tidal totma  wbareatype pathtimema
13317   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13318   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13319   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13320   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13321   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13322   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
      hwnodesqkm maxelevraw minelevraw maxelevsmo minelevsmo slope elevfixed
13317         NA      -9998        -88          0          0 1e-05         0
13318         NA      -9998        -88          0          0 1e-05         0
13319         NA      -9998        -88          0          0 1e-05         0
13320         NA      -9998        -88          0          0 1e-05         0
13321         NA      -9998        -88          0          0 1e-05         0
13322         NA      -9998        -88          0          0 1e-05         0
      hwtype slopelenkm    qa_ma va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01
13317     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13318     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13319     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13320     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13321     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13322     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
      va_01    qc_01 vc_01    qe_01 ve_01    qa_02 va_02    qc_02 vc_02
13317 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13318 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13319 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13320 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13321 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13322 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
         qe_02 ve_02    qa_03 va_03    qc_03 vc_03    qe_03 ve_03    qa_04
13317 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13318 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13319 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13320 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13321 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13322 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
      va_04    qc_04 vc_04    qe_04 ve_04    qa_05 va_05    qc_05 vc_05
13317 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13318 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13319 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13320 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13321 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13322 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
         qe_05 ve_05    qa_06 va_06    qc_06 vc_06    qe_06 ve_06    qa_07
13317 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13318 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13319 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13320 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13321 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13322 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
      va_07    qc_07 vc_07   qe_07 ve_07    qa_08 va_08    qc_08 vc_08    qe_08
13317 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13318 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13319 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13320 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13321 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13322 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
      ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09    qa_10 va_10
13317 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13318 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13319 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13320 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13321 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13322 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
         qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11    qe_11
13317 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13318 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13319 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13320 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13321 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13322 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
      ve_11    qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract surfarea
13317 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13318 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13319 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13320 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13321 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13322 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
      rareahload rpuid vpuid enabled seg_len_m  seg_len_km total_len_km   src
13317         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13318         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13319         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13320         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13321         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13322         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
      src_sub data_type     watershed watershed_sub  site_name latitude
13317  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13318  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13319  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13320  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13321  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13322  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
      longitude start_year end_year station_depth top_sensor_depth_m
13317 -77.16641       2007     2009          <NA>              FIXED
13318 -77.16641       2007     2009          <NA>              FIXED
13319 -77.16641       2007     2009          <NA>              FIXED
13320 -77.16641       2007     2009          <NA>              FIXED
13321 -77.16641       2007     2009          <NA>              FIXED
13322 -77.16641       2007     2009          <NA>              FIXED
      station_depth_m DO WQ_fixed WQ_fixed_waterlevel
13317            NULL  1        1                   1
13318            NULL  1        1                   1
13319            NULL  1        1                   1
13320            NULL  1        1                   1
13321            NULL  1        1                   1
13322            NULL  1        1                   1
                                     url notes            DateTime
13317 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-09 19:00:00
13318 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-09 19:15:00
13319 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-09 19:30:00
13320 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-09 19:45:00
13321 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-09 20:00:00
13322 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-09 20:15:00
                 DateTime_UTC       date dec_date year quarter month week
13317 2007-09-10 00:00:00 UTC 2007-09-10  2007.69 2007       3     9   37
13318 2007-09-10 00:15:00 UTC 2007-09-10  2007.69 2007       3     9   37
13319 2007-09-10 00:30:00 UTC 2007-09-10  2007.69 2007       3     9   37
13320 2007-09-10 00:45:00 UTC 2007-09-10  2007.69 2007       3     9   37
13321 2007-09-10 01:00:00 UTC 2007-09-10  2007.69 2007       3     9   37
13322 2007-09-10 01:15:00 UTC 2007-09-10  2007.69 2007       3     9   37
      do_rollmean30 do_modeled depth_bucket     diel daynight  air_kPa air_temp
13317      10.65600   7.612482          0.5 18.88976    FALSE 101.4100   28.300
13318      10.56533   7.616959          0.5 19.13976    FALSE 101.4250   28.175
13319      10.46067   7.623318          0.5 19.38976    FALSE 101.4400   28.050
13320      10.35167   7.628788          0.5 19.63976    FALSE 101.4550   27.925
13321      10.22700   7.623688          0.5 19.88976    FALSE 101.4700   27.800
13322      10.10700   7.620846          0.5 20.13976    FALSE 101.4725   27.650
      dewtemp winddir windspeed skycover precip1h precip6h do_mgl_from_eq
13317   211.0   120.0      36.0     6.00        0 80.53846       2.877518
13318   211.0    90.0      27.0     6.25        0 80.69231       2.803041
13319   211.0    60.0      18.0     6.50        0 80.84615       2.576682
13320   211.0    30.0       9.0     6.75        0 81.00000       2.441212
13321   211.0     0.0       0.0     7.00        0 81.15385       2.546312
13322   212.5    17.5       6.5     7.00        0 81.30769       2.469154
      day_night      act
13317     night 3.060314
13318     night 3.024027
13319     night 2.979241
13320     night 2.925787
13321     night 2.863509
13322     night 2.792260
> tail(cmn.month[cmn.month$week == 37,])
                date_time   station layer depth  temp sp_cond salinity do_sat
13983 2007-09-16 17:30:00 POH002.10    AB  0.33 23.48     609     0.30  151.2
13984 2007-09-16 17:45:00 POH002.10    AB  0.33 23.42     606     0.29  154.3
13985 2007-09-16 18:00:00 POH002.10    AB  0.33 23.41     609     0.29  152.2
13986 2007-09-16 18:15:00 POH002.10    AB  0.33 23.38     607     0.29  149.0
13987 2007-09-16 18:30:00 POH002.10    AB  0.33 23.35     604     0.29  148.4
13988 2007-09-16 18:45:00 POH002.10    AB  0.33 23.34     600     0.29  146.3
         do   ph turb fluor tchl_pre_cal chla       X       Y rowid
13983 12.84 9.02   NA   1.0          4.4   NA 4544579 5429477   242
13984 13.11 9.05   NA   1.2          5.0   NA 4544579 5429477   242
13985 12.94 9.01   NA   1.0          4.3   NA 4544579 5429477   242
13986 12.67 8.99   NA   0.9          4.0   NA 4544579 5429477   242
13987 12.62 8.98   NA   1.2          5.1   NA 4544579 5429477   242
13988 12.45 8.99   NA   1.0          4.3   NA 4544579 5429477   242
                              id    comid               fdate resolution
13983 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13984 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13985 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13986 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13987 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
13988 nhdflowline_network.159245 22340825 2008-07-22 04:00:00     Medium
      gnis_id     gnis_name lengthkm      reachcode        flowdir wbareacomi
13983  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13984  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13985  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13986  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13987  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
13988  597915 Potomac River    3.688 02070010000004 With Digitized  120049842
               ftype fcode shape_length streamleve streamorde streamcalc
13983 ArtificialPath 55800   0.03488127          1          7          7
13984 ArtificialPath 55800   0.03488127          1          7          7
13985 ArtificialPath 55800   0.03488127          1          7          7
13986 ArtificialPath 55800   0.03488127          1          7          7
13987 ArtificialPath 55800   0.03488127          1          7          7
13988 ArtificialPath 55800   0.03488127          1          7          7
       fromnode    tonode  hydroseq levelpathi pathlength terminalpa arbolatesu
13983 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13984 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13985 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13986 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13987 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
13988 200087412 200087415 200005272  200004858    151.054  200004858   22989.36
      divergence startflag terminalfl dnlevel uplevelpat uphydroseq dnlevelpat
13983          0         0          0       1  200004858  200005277  200004858
13984          0         0          0       1  200004858  200005277  200004858
13985          0         0          0       1  200004858  200005277  200004858
13986          0         0          0       1  200004858  200005277  200004858
13987          0         0          0       1  200004858  200005277  200004858
13988          0         0          0       1  200004858  200005277  200004858
      dnminorhyd dndraincou dnhydroseq frommeas tomeas rtndiv vpuin vpuout
13983          0          1  200005268        0    100      1     0      0
13984          0          1  200005268        0    100      1     0      0
13985          0          1  200005268        0    100      1     0      0
13986          0          1  200005268        0    100      1     0      0
13987          0          1  200005268        0    100      1     0      0
13988          0          1  200005268        0    100      1     0      0
      areasqkm totdasqkm divdasqkm tidal totma  wbareatype pathtimema
13983   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13984   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13985   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13986   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13987   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
13988   4.9689  31332.21  31332.21     1 -9999 StreamRiver      -9999
      hwnodesqkm maxelevraw minelevraw maxelevsmo minelevsmo slope elevfixed
13983         NA      -9998        -88          0          0 1e-05         0
13984         NA      -9998        -88          0          0 1e-05         0
13985         NA      -9998        -88          0          0 1e-05         0
13986         NA      -9998        -88          0          0 1e-05         0
13987         NA      -9998        -88          0          0 1e-05         0
13988         NA      -9998        -88          0          0 1e-05         0
      hwtype slopelenkm    qa_ma va_ma    qc_ma vc_ma    qe_ma ve_ma    qa_01
13983     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13984     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13985     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13986     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13987     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
13988     NA      3.688 12829.27 -9999 13880.12 -9999 13413.91 -9999 17827.03
      va_01    qc_01 vc_01    qe_01 ve_01    qa_02 va_02    qc_02 vc_02
13983 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13984 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13985 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13986 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13987 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
13988 -9999 15322.78 -9999 16219.54 -9999 19133.31 -9999 11121.65 -9999
         qe_02 ve_02    qa_03 va_03    qc_03 vc_03    qe_03 ve_03    qa_04
13983 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13984 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13985 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13986 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13987 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
13988 18744.39 -9999 25024.92 -9999 19441.44 -9999 25348.35 -9999 21358.42
      va_04    qc_04 vc_04    qe_04 ve_04    qa_05 va_05    qc_05 vc_05
13983 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13984 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13985 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13986 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13987 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
13988 -9999 21812.97 -9999 22446.43 -9999 15941.03 -9999 9426.704 -9999
         qe_05 ve_05    qa_06 va_06    qc_06 vc_06    qe_06 ve_06    qa_07
13983 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13984 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13985 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13986 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13987 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
13988 16809.89 -9999 9070.622 -9999 5229.309 -9999 10666.96 -9999 5702.503
      va_07    qc_07 vc_07   qe_07 ve_07    qa_08 va_08    qc_08 vc_08    qe_08
13983 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13984 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13985 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13986 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13987 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
13988 -9999 2514.268 -9999 5531.09 -9999 3820.042 -9999 2309.167 -9999 4731.121
      ve_08    qa_09 va_09    qc_09 vc_09    qe_09 ve_09    qa_10 va_10
13983 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13984 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13985 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13986 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13987 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
13988 -9999 3622.987 -9999 1918.561 -9999 5976.902 -9999 4519.342 -9999
         qc_10 vc_10    qe_10 ve_10    qa_11 va_11    qc_11 vc_11    qe_11
13983 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13984 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13985 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13986 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13987 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
13988 2121.644 -9999 7489.477 -9999 11112.25 -9999 5790.373 -9999 9198.365
      ve_11    qa_12 va_12    qc_12 vc_12    qe_12 ve_12 lakefract surfarea
13983 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13984 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13985 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13986 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13987 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
13988 -9999 16898.49 -9999 18801.18 -9999 13880.66 -9999        NA       NA
      rareahload rpuid vpuid enabled seg_len_m  seg_len_km total_len_km   src
13983         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13984         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13985         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13986         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13987         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
13988         NA   02a    02       1  3.999503 0.003999503     44.64021 VECOS
      src_sub data_type     watershed watershed_sub  site_name latitude
13983  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13984  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13985  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13986  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13987  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
13988  CONMON        WQ Potomac River   PohickCreek Pohick Bay 38.67591
      longitude start_year end_year station_depth top_sensor_depth_m
13983 -77.16641       2007     2009          <NA>              FIXED
13984 -77.16641       2007     2009          <NA>              FIXED
13985 -77.16641       2007     2009          <NA>              FIXED
13986 -77.16641       2007     2009          <NA>              FIXED
13987 -77.16641       2007     2009          <NA>              FIXED
13988 -77.16641       2007     2009          <NA>              FIXED
      station_depth_m DO WQ_fixed WQ_fixed_waterlevel
13983            NULL  1        1                   1
13984            NULL  1        1                   1
13985            NULL  1        1                   1
13986            NULL  1        1                   1
13987            NULL  1        1                   1
13988            NULL  1        1                   1
                                     url notes            DateTime
13983 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 17:30:00
13984 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 17:45:00
13985 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 18:00:00
13986 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 18:15:00
13987 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 18:30:00
13988 http://vecos.vims.edu/Default.aspx  <NA> 2007-09-16 18:45:00
                 DateTime_UTC       date dec_date year quarter month week
13983 2007-09-16 22:30:00 UTC 2007-09-16 2007.707 2007       3     9   37
13984 2007-09-16 22:45:00 UTC 2007-09-16 2007.707 2007       3     9   37
13985 2007-09-16 23:00:00 UTC 2007-09-16 2007.707 2007       3     9   37
13986 2007-09-16 23:15:00 UTC 2007-09-16 2007.707 2007       3     9   37
13987 2007-09-16 23:30:00 UTC 2007-09-16 2007.707 2007       3     9   37
13988 2007-09-16 23:45:00 UTC 2007-09-16 2007.707 2007       3     9   37
      do_rollmean30 do_modeled depth_bucket     diel daynight  air_kPa air_temp
13983      12.12033   8.492063          0.5 17.43179     TRUE 102.4950   18.300
13984      12.13967   8.496436          0.5 17.68179     TRUE 102.4975   17.750
13985      12.14067   8.501971          0.5 17.93179     TRUE 102.5000   17.200
13986      12.14067   8.503356          0.5 18.18179    FALSE 102.5125   16.925
13987      12.12833   8.504043          0.5 18.43179    FALSE 102.5250   16.650
13988      12.10500   8.509911          0.5 18.68179    FALSE 102.5375   16.375
      dewtemp winddir windspeed skycover precip1h    precip6h do_mgl_from_eq
13983   39.00     350     20.50        4        0 -0.08000000       4.347937
13984   39.00     350     23.25        4        0 -0.07333333       4.613564
13985   39.00     350     26.00        4        0 -0.06666667       4.438029
13986   47.25     295     29.75        4        0 -0.06000000       4.166644
13987   55.50     240     33.50        4        0 -0.05333333       4.115957
13988   63.75     185     37.25        4        0 -0.04666667       3.940089
      day_night      act
13983       day 3.112526
13984       day 3.121931
13985       day 3.124017
13986     night 3.118558
13987     night 3.105339
13988     night 3.084152
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
There were 14 warnings (use warnings() to see them)
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = act
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'act' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     act_mean = mean(act),
+     do_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')]),
+     do_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')]),
+ )
`summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = act
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'act' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = act
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `FUN()`:
! object 'act' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = act_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
There were 14 warnings (use warnings() to see them)
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
There were 14 warnings (use warnings() to see them)
> colnames(cmn.month)
  [1] "date_time"           "station"             "layer"
  [4] "depth"               "temp"                "sp_cond"
  [7] "salinity"            "do_sat"              "do"
 [10] "ph"                  "turb"                "fluor"
 [13] "tchl_pre_cal"        "chla"                "X"
 [16] "Y"                   "rowid"               "id"
 [19] "comid"               "fdate"               "resolution"
 [22] "gnis_id"             "gnis_name"           "lengthkm"
 [25] "reachcode"           "flowdir"             "wbareacomi"
 [28] "ftype"               "fcode"               "shape_length"
 [31] "streamleve"          "streamorde"          "streamcalc"
 [34] "fromnode"            "tonode"              "hydroseq"
 [37] "levelpathi"          "pathlength"          "terminalpa"
 [40] "arbolatesu"          "divergence"          "startflag"
 [43] "terminalfl"          "dnlevel"             "uplevelpat"
 [46] "uphydroseq"          "dnlevelpat"          "dnminorhyd"
 [49] "dndraincou"          "dnhydroseq"          "frommeas"
 [52] "tomeas"              "rtndiv"              "vpuin"
 [55] "vpuout"              "areasqkm"            "totdasqkm"
 [58] "divdasqkm"           "tidal"               "totma"
 [61] "wbareatype"          "pathtimema"          "hwnodesqkm"
 [64] "maxelevraw"          "minelevraw"          "maxelevsmo"
 [67] "minelevsmo"          "slope"               "elevfixed"
 [70] "hwtype"              "slopelenkm"          "qa_ma"
 [73] "va_ma"               "qc_ma"               "vc_ma"
 [76] "qe_ma"               "ve_ma"               "qa_01"
 [79] "va_01"               "qc_01"               "vc_01"
 [82] "qe_01"               "ve_01"               "qa_02"
 [85] "va_02"               "qc_02"               "vc_02"
 [88] "qe_02"               "ve_02"               "qa_03"
 [91] "va_03"               "qc_03"               "vc_03"
 [94] "qe_03"               "ve_03"               "qa_04"
 [97] "va_04"               "qc_04"               "vc_04"
[100] "qe_04"               "ve_04"               "qa_05"
[103] "va_05"               "qc_05"               "vc_05"
[106] "qe_05"               "ve_05"               "qa_06"
[109] "va_06"               "qc_06"               "vc_06"
[112] "qe_06"               "ve_06"               "qa_07"
[115] "va_07"               "qc_07"               "vc_07"
[118] "qe_07"               "ve_07"               "qa_08"
[121] "va_08"               "qc_08"               "vc_08"
[124] "qe_08"               "ve_08"               "qa_09"
[127] "va_09"               "qc_09"               "vc_09"
[130] "qe_09"               "ve_09"               "qa_10"
[133] "va_10"               "qc_10"               "vc_10"
[136] "qe_10"               "ve_10"               "qa_11"
[139] "va_11"               "qc_11"               "vc_11"
[142] "qe_11"               "ve_11"               "qa_12"
[145] "va_12"               "qc_12"               "vc_12"
[148] "qe_12"               "ve_12"               "lakefract"
[151] "surfarea"            "rareahload"          "rpuid"
[154] "vpuid"               "enabled"             "seg_len_m"
[157] "seg_len_km"          "total_len_km"        "src"
[160] "src_sub"             "data_type"           "watershed"
[163] "watershed_sub"       "site_name"           "latitude"
[166] "longitude"           "start_year"          "end_year"
[169] "station_depth"       "top_sensor_depth_m"  "station_depth_m"
[172] "DO"                  "WQ_fixed"            "WQ_fixed_waterlevel"
[175] "url"                 "notes"               "DateTime"
[178] "DateTime_UTC"        "date"                "dec_date"
[181] "year"                "quarter"             "month"
[184] "week"                "do_rollmean30"       "do_modeled"
[187] "depth_bucket"        "diel"                "daynight"
[190] "air_kPa"             "air_temp"            "dewtemp"
[193] "winddir"             "windspeed"           "skycover"
[196] "precip1h"            "precip6h"            "do_mgl_from_eq"
[199] "day_night"           "act"
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     windspeed_mean = mean(windspeed),
+     act_mean = mean(act),
+     do_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')]),
+     do_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')]),
+ )
`summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = (windspeed_mean)
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
There were 14 warnings (use warnings() to see them)
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("POH002.10"),
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          sunrise_time = solartime::computeSunriseHour(timestamp = DateTime, longDeg = longitude),
+          sunset_time = solartime::computeSunsetHour(timestamp = DateTime, longDeg = longitude),
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ Error in `mutate()`:
ℹ In argument: `sunrise_time = solartime::computeSunriseHour(timestamp = DateTime, longDeg =
  longitude)`.
Caused by error in `computeSunriseHourDoy()`:
! argument "latDeg" is missing, with no default
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("POH002.10"),
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          sunrise_time = solartime::computeSunriseHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          sunset_time = solartime::computeSunsetHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> source('./mike_atm.R')
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> source('../R/mike_atm.R')
+ library(unitted)
> conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
> conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
> cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
> conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> ## lmfit <- lm(conmon.y~sin(2*pi*conmon.x/366) + cos(2*pi*conmon.x/366))
+ lmfit <- lm(conmon.y~sin(conmon.x))
+ b0 <- coef(lmfit)[1]
+ alpha <- coef(lmfit)[2]
+ beta <- coef(lmfit)[3]
> ssp <- spectrum(conmon.y)
+ per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
+ reslm <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x))
+ summary(reslm)
rg <- diff(range(conmon.y))
+ plot(conmon.y ~ conmon.x, ylim=c(min(conmon.y)-0.1*rg, max(conmon.y)+0.1*rg))
+ ## lines(fitted(reslm)~conmon.x,col=4,lty=2)   # dashed blue line is sin fit
# including 2nd harmonic reallconmon.y improves the fit
+ reslm2 <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x)+sin(4*pi/per*conmon.x)+cos(4*pi/per*conmon.x))
+ summary(reslm2)
+ lines(fitted(reslm2)~conmon.x,col=3)    # solid green line is periodic with second harmonic
cmn.month$act <- predict(reslm2, newdata=cmn.month)
> Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.1578 -1.2515  0.0209  1.2855  8.5736

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.8175     0.1480   5.525 3.35e-08 ***
sin(2 * pi/per * conmon.x)   1.8963     0.1164  16.286  < 2e-16 ***
cos(2 * pi/per * conmon.x)  -0.8281     0.1198  -6.915 4.84e-12 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.947 on 18308 degrees of freedom
Multiple R-squared:  0.1533,	Adjusted R-squared:  0.1532
F-statistic:  1657 on 2 and 18308 DF,  p-value: < 2.2e-16

> > > >
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x) + sin(4 * pi/per * conmon.x) + cos(4 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.0553 -1.0516  0.1115  1.1293  7.6462

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.07039    2.51293   0.028    0.978
sin(2 * pi/per * conmon.x) -11.46616    2.44604  -4.688 2.78e-06 ***
cos(2 * pi/per * conmon.x)  13.57532    2.52172   5.383 7.40e-08 ***
sin(4 * pi/per * conmon.x)   0.07058    0.99937   0.071    0.944
cos(4 * pi/per * conmon.x) -11.88121    0.20318 -58.475  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.784 on 18306 degrees of freedom
Multiple R-squared:  0.289,	Adjusted R-squared:  0.2889
F-statistic:  1860 on 4 and 18306 DF,  p-value: < 2.2e-16

> > > pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> library(ggpmisc)
> head(conmon.poh$sunrise_time)
[1] 5.803325 5.803325 5.803325 5.803325 5.803325 5.803325
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("POH002.10"),
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          fraction_hour <- solartime::getFractionalHours(DateTime),
+          sunrise_time = solartime::computeSunriseHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          sunset_time = solartime::computeSunsetHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> head(conmon.poh$sunrise_time)
[1] 5.803325 5.803325 5.803325 5.803325 5.803325 5.803325
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("POH002.10"),
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          fraction_hour = solartime::getFractionalHours(DateTime),
+          sunrise_time = solartime::computeSunriseHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          sunset_time = solartime::computeSunsetHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > head(conmon.poh$fraction_hour)
[1]  9.50  9.75 10.00 10.25 10.50 10.75
> lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
> conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
> cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
> conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> ## lmfit <- lm(conmon.y~sin(2*pi*conmon.x/366) + cos(2*pi*conmon.x/366))
+ lmfit <- lm(conmon.y~sin(conmon.x))
+ b0 <- coef(lmfit)[1]
+ alpha <- coef(lmfit)[2]
+ beta <- coef(lmfit)[3]
> ssp <- spectrum(conmon.y)
+ per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
+ reslm <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x))
+ summary(reslm)
rg <- diff(range(conmon.y))
+ plot(conmon.y ~ conmon.x, ylim=c(min(conmon.y)-0.1*rg, max(conmon.y)+0.1*rg))
+ ## lines(fitted(reslm)~conmon.x,col=4,lty=2)   # dashed blue line is sin fit
# including 2nd harmonic reallconmon.y improves the fit
+ reslm2 <- lm(conmon.y ~ sin(2*pi/per*conmon.x)+cos(2*pi/per*conmon.x)+sin(4*pi/per*conmon.x)+cos(4*pi/per*conmon.x))
+ summary(reslm2)
+ lines(fitted(reslm2)~conmon.x,col=3)    # solid green line is periodic with second harmonic
cmn.month$act <- predict(reslm2, newdata=cmn.month)
Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.1578 -1.2515  0.0209  1.2855  8.5736

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.8175     0.1480   5.525 3.35e-08 ***
sin(2 * pi/per * conmon.x)   1.8963     0.1164  16.286  < 2e-16 ***
cos(2 * pi/per * conmon.x)  -0.8281     0.1198  -6.915 4.84e-12 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.947 on 18308 degrees of freedom
Multiple R-squared:  0.1533,	Adjusted R-squared:  0.1532
F-statistic:  1657 on 2 and 18308 DF,  p-value: < 2.2e-16

> > Call:
lm(formula = conmon.y ~ sin(2 * pi/per * conmon.x) + cos(2 *
    pi/per * conmon.x) + sin(4 * pi/per * conmon.x) + cos(4 *
    pi/per * conmon.x))

Residuals:
    Min      1Q  Median      3Q     Max
-6.0553 -1.0516  0.1115  1.1293  7.6462

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)
(Intercept)                  0.07039    2.51293   0.028    0.978
sin(2 * pi/per * conmon.x) -11.46616    2.44604  -4.688 2.78e-06 ***
cos(2 * pi/per * conmon.x)  13.57532    2.52172   5.383 7.40e-08 ***
sin(4 * pi/per * conmon.x)   0.07058    0.99937   0.071    0.944
cos(4 * pi/per * conmon.x) -11.88121    0.20318 -58.475  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.784 on 18306 degrees of freedom
Multiple R-squared:  0.289,	Adjusted R-squared:  0.2889
F-statistic:  1860 on 4 and 18306 DF,  p-value: < 2.2e-16

> > > pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     windspeed_mean = mean(windspeed),
+     act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')]),
+     do_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')]),
+ )
`summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     windspeed_mean = mean(windspeed),
+     act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl[which(day_night == 'day')] - sunrise_do),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')] - sunset_do),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = (windspeed_mean)
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
There were 14 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 15 warnings (use warnings() to see them)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     windspeed_mean = mean(windspeed),
+     act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl[which(day_night == 'day')] - sunrise_do),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')] - sunset_do),
+     sunrise_do_from_eq = do_from_eq_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do_from_eq = do_from_eq_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_from_eq_diel_production = sum(do_from_eq_mgl[which(day_night == 'day')] - sunrise_do_from_eq),
+     do_from_eq_diel_respiration = sum(do_from_eq_mgl[which(day_night == 'night')] - sunset_do_from_eq),
+     )
+ Error in `summarize()`:
ℹ In argument: `sunrise_do_from_eq = do_from_eq_mgl[which.min(abs(fraction_hour -
  sunrise_time))]`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by error:
! object 'do_from_eq_mgl' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
Warning message:
There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     windspeed_mean = mean(windspeed),
+     act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl[which(day_night == 'day')] - sunrise_do),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')] - sunset_do),
+     sunrise_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunset_time))],
+     do_mgl_from_eq_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')] - sunrise_do),
+     do_mgl_from_eq_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')] - sunset_do),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = (windspeed_mean)
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
gg.conmon.regs
gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
There were 14 warnings (use warnings() to see them)
> . + > gg.conmon.noaa
There were 14 warnings (use warnings() to see them)
> . + > There were 15 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 14 warnings (use warnings() to see them)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     windspeed_mean = mean(windspeed),
+     act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl[which(day_night == 'day')] - sunrise_do),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')] - sunset_do),
+     sunrise_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunset_time))],
+     do_mgl_from_eq_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')] - sunrise_do_mgl_from_eq),
+     do_mgl_from_eq_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')] - sunset_do_mgl_from_eq),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 196 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 195 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = (windspeed_mean)
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_max,
+                   y = do_mgl_min,
+                   col = temp_mean/air_temp_mean
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
gg.conmon.regs
gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
gg.conmon.noaa
gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
gg.conmon.noaa
There were 14 warnings (use warnings() to see them)
> . + > There were 14 warnings (use warnings() to see them)
> . + > There were 15 warnings (use warnings() to see them)
> . + > There were 14 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 15 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 14 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 15 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 14 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month + year) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 14 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + year + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 14 warnings (use warnings() to see them)
> conmon.poh <- conmon %>%
+   filter(
+     station %in% c("POH002.10", "XEA3687"),
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          fraction_hour = solartime::getFractionalHours(DateTime),
+          sunrise_time = solartime::computeSunriseHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          sunset_time = solartime::computeSunsetHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ lat <- conmon.poh$latitude
+ long <- conmon.poh$longitude
+ station <- unique(conmon.poh$station)
> > dtSt = min(conmon.poh$date)
+ dtEnd = max(conmon.poh$date)
> source('./mike_atm.R')
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> source('../R/mike_atm.R')
+ library(unitted)
> conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                    long = unique(long),
+                                    start_datetime = dtSt,
+                                    end_datetime = dtEnd)
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724035-13773-2007.gz'
Content type 'unknown' length 86337 bytes (84 KB)
==================================================
> conmon.noaa <- conmon_NOAA %>%
+   mutate(
+     DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+     station = station,
+   )
Error in `mutate()`:
ℹ In argument: `station = station`.
Caused by error:
! `station` must be size 21601 or 1, not 2.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> conmon.poh.noaa <- conmon.poh %>%
+   left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+   mutate(
+       do_modeled = (do*100) / do_sat,
+       do_mgl_from_eq = do - do_modeled
+   )
> subset_stations <- c("POH002.10", "XEA3687")
> subset_stations <- c("POH002.10", "XEA3687", "XBF7904")
> conmon.poh <- conmon %>%
+   filter(
+     station %in% subset_stations,
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          fraction_hour = solartime::getFractionalHours(DateTime),
+          sunrise_time = solartime::computeSunriseHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          sunset_time = solartime::computeSunsetHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > dtSt = min(target_data$date)
+   dtEnd = max(target_data$date)
Error: object 'target_data' not found
> Error: object 'target_data' not found
> rm(conmon.noaa.df)
Warning message:
In rm(conmon.noaa.df) : object 'conmon.noaa.df' not found
> for(s in subset_stations) {
+
+   target_data <- conm.poh[conmon.poh$station == s,]
+
+   lat <- target_data$latitude
+   long <- target_data$longitude
+   station <- unique(target_data$station)
+
+   dtSt = min(target_data$date)
+   dtEnd = max(target_data$date)
+
+   conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                      long = unique(long),
+                                      start_datetime = dtSt,
+                                      end_datetime = dtEnd)
+
+   conmon.noaa <- conmon_NOAA %>%
+     mutate(
+       DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+       station = station,
+     )
+
+   if(!exists("conmon.noaa.df")) {
+     conmon.noaa.df <- conmon.noaa
+   } else {
+     conmon.noaa.df <- rbind(conmon.noaa.df, conmon.noaa)
+   }
+
+
+ }
Error in conm.poh : object 'conm.poh' not found
> for(s in subset_stations) {
+
+   target_data <- conmon.poh[conmon.poh$station == s,]
+
+   lat <- target_data$latitude
+   long <- target_data$longitude
+   station <- unique(target_data$station)
+
+   dtSt = min(target_data$date)
+   dtEnd = max(target_data$date)
+
+   conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                      long = unique(long),
+                                      start_datetime = dtSt,
+                                      end_datetime = dtEnd)
+
+   conmon.noaa <- conmon_NOAA %>%
+     mutate(
+       DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+       station = station,
+     )
+
+   if(!exists("conmon.noaa.df")) {
+     conmon.noaa.df <- conmon.noaa
+   } else {
+     conmon.noaa.df <- rbind(conmon.noaa.df, conmon.noaa)
+   }
+
+
+ }
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724035-13773-2007.gz'
Content type 'unknown' length 86337 bytes (84 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/725514-03757-2007.gz'
Content type 'unknown' length 85853 bytes (83 KB)
==================================================
> conmon.poh.noaa <- conmon.poh %>%
+     left_join(conmon.noaa, by = c("station", "DateTime_UTC")) %>%
+     mutate(
+         do_modeled = (do*100) / do_sat,
+         do_mgl_from_eq = do - do_modeled
+     )
+ > cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
+ > conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> pal <- wesanderson::wes_palette("Zissou1", 10, type = "continuous")
> library(ggpmisc)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     windspeed_mean = mean(windspeed),
+     act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl[which(day_night == 'day')] - sunrise_do),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')] - sunset_do),
+     sunrise_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunset_time))],
+     do_mgl_from_eq_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')] - sunrise_do_mgl_from_eq),
+     do_mgl_from_eq_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')] - sunset_do_mgl_from_eq),
+     )
+ Error in `summarize()`:
ℹ In argument: `act_mean = mean(act)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by error in `mean()`:
! object 'act' not found
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
Warning message:
There were 625 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 624 remaining warnings.
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     windspeed_mean = mean(windspeed),
+     ## act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl[which(day_night == 'day')] - sunrise_do),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')] - sunset_do),
+     sunrise_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunset_time))],
+     do_mgl_from_eq_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')] - sunrise_do_mgl_from_eq),
+     do_mgl_from_eq_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')] - sunset_do_mgl_from_eq),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 625 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 624 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = (windspeed_mean)
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + year + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
5: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
6: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
7: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
8: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~station + month) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
5: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
6: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
7: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
8: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~month+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
3: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
4: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
5: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
6: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
7: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
8: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> conmon.poh.noaa <- conmon.poh %>%
+     left_join(conmon.noaa.df, by = c("station", "DateTime_UTC")) %>%
+     mutate(
+         do_modeled = (do*100) / do_sat,
+         do_mgl_from_eq = do - do_modeled
+     )
+ > cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
+ > conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     windspeed_mean = mean(windspeed),
+     ## act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl[which(day_night == 'day')] - sunrise_do),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')] - sunset_do),
+     sunrise_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunset_time))],
+     do_mgl_from_eq_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')] - sunrise_do_mgl_from_eq),
+     do_mgl_from_eq_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')] - sunset_do_mgl_from_eq),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 625 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "POH002.10"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 624 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~month+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 22 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_diel_production,
+                   y = do_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = 'skycover\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~month+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 23 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~month+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 22 warnings (use warnings() to see them)
> subset_stations <- c("POH002.10", "OCC002.47", "POM000.97", "MON000.18")
> conmon.poh <- conmon %>%
+   filter(
+     station %in% subset_stations,
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          fraction_hour = solartime::getFractionalHours(DateTime),
+          sunrise_time = solartime::computeSunriseHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          sunset_time = solartime::computeSunsetHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > source('./mike_atm.R')
+ source('../R/mike_atm.R')
+ library(unitted)
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> > > rm(conmon.noaa.df)
> for(s in subset_stations) {
+ target_data <- conmon.poh[conmon.poh$station == s,]
+ lat <- target_data$latitude
+   long <- target_data$longitude
+   station <- unique(target_data$station)
+ dtSt = min(target_data$date)
+   dtEnd = max(target_data$date)
+ conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                      long = unique(long),
+                                      start_datetime = dtSt,
+                                      end_datetime = dtEnd)
+ conmon.noaa <- conmon_NOAA %>%
+     mutate(
+       DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+       station = station,
+     )
+ if(!exists("conmon.noaa.df")) {
+     conmon.noaa.df <- conmon.noaa
+   } else {
+     conmon.noaa.df <- rbind(conmon.noaa.df, conmon.noaa)
+   }
+ if(!exists("conmon.noaa.df")) {
+     conmon.noaa.df <- conmon.noaa
+   } else {
+     conmon.noaa.df <- rbind(conmon.noaa.df, conmon.noaa)
+   }
+   C-c C-c
> for(s in subset_stations) {
+
+   target_data <- conmon.poh[conmon.poh$station == s,]
+
+   lat <- target_data$latitude
+   long <- target_data$longitude
+   station <- unique(target_data$station)
+
+   dtSt = min(target_data$date)
+   dtEnd = max(target_data$date)
+
+   conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                      long = unique(long),
+                                      start_datetime = dtSt,
+                                      end_datetime = dtEnd)
+
+   conmon.noaa <- conmon_NOAA %>%
+     mutate(
+       DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+       station = station,
+     )
+
+   if(!exists("conmon.noaa.df")) {
+     conmon.noaa.df <- conmon.noaa
+   } else {
+     conmon.noaa.df <- rbind(conmon.noaa.df, conmon.noaa)
+   }
+ }
+ trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
Error in `filter()`:
ℹ In argument: `&...`.
Caused by error:
! `..1` must be of size 28454 or 1, not size 0.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
Warning messages:
1: In min.default(numeric(0), na.rm = FALSE) :
  no non-missing arguments to min; returning Inf
2: In max.default(numeric(0), na.rm = FALSE) :
  no non-missing arguments to max; returning -Inf
> rm(conmon.noaa.df)
> for(s in subset_stations) {
+
+   target_data <- conmon.poh[conmon.poh$station == s,]
+
+   lat <- target_data$latitude
+   long <- target_data$longitude
+   station <- unique(target_data$station)
+
+   dtSt = min(target_data$date)
+   dtEnd = max(target_data$date)
+
+   print(paste('NOAA query for', station, '       \n', '   ', dtSt, 'to', dtEnd))
+
+   conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                      long = unique(long),
+                                      start_datetime = dtSt,
+                                      end_datetime = dtEnd)
+
+   conmon.noaa <- conmon_NOAA %>%
+     mutate(
+       DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+       station = station,
+     )
+
+   if(!exists("conmon.noaa.df")) {
+     conmon.noaa.df <- conmon.noaa
+   } else {
+     conmon.noaa.df <- rbind(conmon.noaa.df, conmon.noaa)
+   }
+ }
[1] "NOAA query for POH002.10        \n     2007-04-09 to 2007-11-01"
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
[1] "NOAA query for         \n     Inf to -Inf"
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
Error in `filter()`:
ℹ In argument: `&...`.
Caused by error:
! `..1` must be of size 28454 or 1, not size 0.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
Warning messages:
1: In min.default(numeric(0), na.rm = FALSE) :
  no non-missing arguments to min; returning Inf
2: In max.default(numeric(0), na.rm = FALSE) :
  no non-missing arguments to max; returning -Inf
> subset_stations
[1] "POH002.10" "OCC002.47" "POM000.97" "MON000.18"
> unique(conmon$station)
 [1] "XFB2184"   "XFB0231"   "POH002.10" "XEA3687"   "XDA8236"   "POM000.97"
 [7] "XDB4544"   "XDB8884"   "XDC3807"   "XCC8346"   "XCC9680"   "MON000.18"
[13] "NOM002.36" "XCD5599"   "XBE8396"   "XCF1440"   "XBF7904"   "WES000.18"
[19] "XBF6843"
> subset_stations <- c("POH002.10", "WES000.18", "POM000.97", "MON000.18")
> conmon.poh <- conmon %>%
+   filter(
+     station %in% subset_stations,
+     ) %>%
+   mutate(
+          DateTime = as.POSIXct(date_time, format = "%Y-%m-%d %H:%M:%S", tz = "America/New_York"),
+          DateTime_UTC = format(date_time, tz = "UTC", usetz = TRUE),
+          date = as.Date(DateTime, format = "%Y-%m-%d"),
+          dec_date = lubridate::decimal_date(as.Date(DateTime, format = "%Y-%m-%d")),
+          year = lubridate::year(date),
+          quarter = lubridate::quarter(date, fiscal_start = 1),
+          month = lubridate::month(date),
+          week = lubridate::week(date),
+          do_rollmean30 = zoo::rollmean(do, 30, na.pad = TRUE),
+          do_modeled = (do*100) / do_sat,
+          depth_bucket = round(depth/ 0.5) * 0.5,
+          fraction_hour = solartime::getFractionalHours(DateTime),
+          sunrise_time = solartime::computeSunriseHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          sunset_time = solartime::computeSunsetHour(timestamp = DateTime, longDeg = longitude, latDeg = latitude),
+          diel = solartime::getSolarTimeHour(timestamp = DateTime, longDeg = longitude),
+          daynight = solartime::computeIsDayByLocation(timestamp = DateTime,
+                                              latDeg = latitude,
+                                              longDeg = longitude),
+   ) %>%
+   filter(
+     year %in% years[1],
+   )
+ > source('./mike_atm.R')
+ source('../R/mike_atm.R')
+ library(unitted)
Error in file(filename, "r", encoding = encoding) :
  cannot open the connection
In addition: Warning message:
In file(filename, "r", encoding = encoding) :
  cannot open file './mike_atm.R': No such file or directory
> > > rm(conmon.noaa.df)
> for(s in subset_stations) {
+
+   target_data <- conmon.poh[conmon.poh$station == s,]
+
+   lat <- target_data$latitude
+   long <- target_data$longitude
+   station <- unique(target_data$station)
+
+   dtSt = min(target_data$date)
+   dtEnd = max(target_data$date)
+
+   print(paste('NOAA query for', station, '       /n', '   ', dtSt, 'to', dtEnd))
+
+   conmon_NOAA <- FindandCollect_NOAA(lat = unique(lat),
+                                      long = unique(long),
+                                      start_datetime = dtSt,
+                                      end_datetime = dtEnd)
+
+   conmon.noaa <- conmon_NOAA %>%
+     mutate(
+       DateTime_UTC = format(DateTime_UTC, tz = "UTC", usetz = TRUE),
+       station = station,
+     )
+
+   if(!exists("conmon.noaa.df")) {
+     conmon.noaa.df <- conmon.noaa
+   } else {
+     conmon.noaa.df <- rbind(conmon.noaa.df, conmon.noaa)
+   }
+ }
[1] "NOAA query for POH002.10        /n     2007-04-09 to 2007-11-01"
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724037-93728-2007.gz'
Content type 'unknown' length 73293 bytes (71 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724050-13743-2007.gz'
Content type 'unknown' length 90806 bytes (88 KB)
==================================================
[1] "NOAA query for WES000.18        /n     2007-03-28 to 2007-10-31"
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/725514-03757-2007.gz'
Content type 'unknown' length 85853 bytes (83 KB)
==================================================
[1] "NOAA query for POM000.97        /n     2007-03-20 to 2007-10-31"
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/720317-03735-2007.gz'
Content type 'unknown' length 55745 bytes (54 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724033-03706-2007.gz'
Content type 'unknown' length 42265 bytes (41 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724035-13773-2007.gz'
Content type 'unknown' length 86337 bytes (84 KB)
==================================================
[1] "NOAA query for MON000.18        /n     2007-03-20 to 2007-11-28"
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.txt'
Content type 'unknown' length 2965100 bytes (2.8 MB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/720389-99999-2007.gz'
Content type 'unknown' length 19065 bytes (18 KB)
==================================================
trying URL 'ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-lite/2007/724035-13773-2007.gz'
Content type 'unknown' length 86337 bytes (84 KB)
==================================================
> conmon.poh.noaa <- conmon.poh %>%
+     left_join(conmon.noaa.df, by = c("station", "DateTime_UTC")) %>%
+     mutate(
+         do_modeled = (do*100) / do_sat,
+         do_mgl_from_eq = do - do_modeled
+     )
+ > cmn.month <- conmon.poh.noaa[!is.na(conmon.poh.noaa$do_mgl_from_eq),] %>%
+   mutate(
+     day_night = case_when(daynight ~ "day", .default = "night")
+   )
+ > conmon.x = cmn.month$diel
+ conmon.y = cmn.month$do_mgl_from_eq
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     air_temp_mean = mean(air_temp),
+     skycover_mean = mean(skycover),
+     dewtemp_mean = mean(dewtemp),
+     windspeed_mean = mean(windspeed),
+     ## act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl[which(day_night == 'day')] - sunrise_do),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')] - sunset_do),
+     sunrise_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunset_time))],
+     do_mgl_from_eq_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')] - sunrise_do_mgl_from_eq),
+     do_mgl_from_eq_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')] - sunset_do_mgl_from_eq),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 867 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "MON000.18"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 866 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = (windspeed_mean)
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.regs
There were 50 or more warnings (use warnings() to see the first 50)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~month+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 50 or more warnings (use warnings() to see the first 50)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = dewtemp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = dewtemp_mean/temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean/temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Air Temp (C) vs DO (mg/L from eq.) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage skycover data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production/skycover_mean,
+                   y = do_mgl_from_eq_diel_respiration/skycover_mean,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production/skycover_mean,
+                   y = do_mgl_from_eq_diel_respiration/skycover_mean,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 33 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production/skycover_mean,
+                   y = do_mgl_from_eq_diel_respiration/skycover_mean,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   scale_y_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 50 or more warnings (use warnings() to see the first 50)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production/skycover_mean,
+                   y = do_mgl_from_eq_diel_respiration/skycover_mean,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$skycover_mean < 2],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
Error in `cmn.poh.sum[cmn.poh.sum$skycover_mean < 2]`:
! Can't subset columns with `i`.
✖ Logical subscript `i` must be size 1 or 37, not 1734.
Run `]8;;rstudio:run:rlang::last_trace()rlang::last_trace()]8;;` to see where the error occurred.
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$skycover_mean < 2,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 25 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$skycover_mean < 3,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$skycover_mean < 9,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> head(conmon.noaa)
# A tibble: 6 × 10
  DateTime_UTC      air_kPa air_temp dewtemp winddir windspeed skycover precip1h
  <chr>               <dbl>    <dbl>   <dbl>   <dbl>     <dbl>    <dbl>    <dbl>
1 2007-03-20 00:00…    102.     12.8  -11       210       57       7           0
2 2007-03-20 00:15…    102.     12.5   -6.75    210       58.2     7           0
3 2007-03-20 00:30…    102.     12.2   -2.5     210       59.5     7           0
4 2007-03-20 00:45…    102.     12.0    1.75    210       60.8     7           0
5 2007-03-20 01:00…    102.     11.7    6       210       62       7           0
6 2007-03-20 01:15…    102.     11.4   10       208.      62       5.25        0
# ℹ 2 more variables: precip6h <dbl>, station <chr>
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 3,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: Removed 8 rows containing non-finite outside the scale range (`stat_poly_line()`).
2: Removed 8 rows containing non-finite outside the scale range (`stat_poly_eq()`).
3: Removed 8 rows containing missing values or values outside the scale range (`geom_point()`).
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 10,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 50 or more warnings (use warnings() to see the first 50)
> head(conmon.noaa$windspeed)
[1] 57.00 58.25 59.50 60.75 62.00 62.00
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 50,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 50,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = windspeed_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = windspeed_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = sp_cond_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_range = range(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     temp_range = range(temp),
+     air_temp_mean = mean(air_temp),
+     air_temp_range = range(air_temp),
+     skycover_mean = mean(skycover),
+     skycover_range = range(skycover),
+     dewtemp_mean = mean(dewtemp),
+     dewtemp_range = range(dewtemp),
+     windspeed_mean = mean(windspeed),
+     windspeed_range = range(windspeed),
+     ## act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl[which(day_night == 'day')] - sunrise_do),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')] - sunset_do),
+     sunrise_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunset_time))],
+     do_mgl_from_eq_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')] - sunrise_do_mgl_from_eq),
+     do_mgl_from_eq_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')] - sunset_do_mgl_from_eq),
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 867 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "MON000.18"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 866 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.regs <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_max,
+                   y = do_mgl_from_eq_min,
+                   col = (windspeed_mean)
+                 )) +
+   geom_point() +
+   ## geom_line(aes(diel, act)) +
+   ## scale_color_discrete(colours = pal) +
+   scale_color_gradientn(colours = pal) +
+   ## stat_poly_line(formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x)) +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 36),
+     axis.text.y = element_text(size = 22),
+     plot.title = element_text(size = 36)
+   ) +
+   facet_wrap(~station + month) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = sp_cond_range
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_temp_range
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = windspeed_range
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> cmn.poh.sum <- cmn.month %>%
+   rename(do_mgl = do) %>%
+   mutate(season = getSeason(date_time)) %>%
+   group_by(station, year, season, month, date) %>%
+   filter(!is.na(do), !is.na(do_modeled)) %>%
+   summarize(
+     do_mgl_mean = mean(do_mgl),
+     do_mgl_range = range(do_mgl),
+     do_mgl_min = min(do_mgl),
+     do_mgl_max = max(do_mgl),
+     do_mgl_median = median(do_mgl),
+     do_time_min = date_time[which.min(do_mgl)],
+     do_time_eq_min = date_time[which.min(do_modeled)],
+     do_hour_min = as.numeric(lubridate::hour(do_time_min)),
+     do_mgl_from_eq_min = min(do_mgl_from_eq),
+     do_mgl_from_eq_max = max(do_mgl_from_eq),
+     do_hour_eq_min = as.numeric(lubridate::hour(do_time_eq_min)),
+     do_month_min = as.numeric(lubridate::month(do_time_min)),
+     do_diel_min = diel[which.min(do_mgl)],
+     do_diel_max = diel[which.max(do_mgl)],
+     do_hour_max = lubridate::hour(date_time[which.max(do_mgl)]),
+     depth_mean_rounded = round(mean(depth)/ 0.5) * 0.5,
+     potomac_river_km = max(total_len_km),
+     sp_cond_mean = mean(sp_cond),
+     sp_cond_range = range(sp_cond),
+     sp_cond_at_do_min = sp_cond[which.min(do_mgl)],
+     temp_mean = mean(temp),
+     temp_range = range(temp),
+     air_temp_mean = mean(air_temp),
+     air_temp_range = range(air_temp),
+     skycover_mean = mean(skycover),
+     skycover_range = range(skycover),
+     dewtemp_mean = mean(dewtemp),
+     dewtemp_range = range(dewtemp),
+     windspeed_mean = mean(windspeed),
+     windspeed_range = range(windspeed),
+     ## act_mean = mean(act),
+     sunrise_do = do_mgl[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do = do_mgl[which.min(abs(fraction_hour - sunset_time))],
+     do_diel_production = sum(do_mgl[which(day_night == 'day')] - sunrise_do),
+     do_diel_respiration = sum(do_mgl[which(day_night == 'night')] - sunset_do),
+     sunrise_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunrise_time))],
+     sunset_do_mgl_from_eq = do_mgl_from_eq[which.min(abs(fraction_hour - sunset_time))],
+     do_mgl_from_eq_diel_production = sum(do_mgl_from_eq[which(day_night == 'day')] - sunrise_do_mgl_from_eq),
+     do_mgl_from_eq_diel_respiration = sum(do_mgl_from_eq[which(day_night == 'night')] - sunset_do_mgl_from_eq),
+     air_wtr_mean = mean(air_temp/temp)
+     )
+ `summarise()` has grouped output by 'station', 'year', 'season', 'month', 'date'. You can override using
the `.groups` argument.
Warning messages:
1: There were 867 warnings in `filter()`.
The first warning was:
ℹ In argument: `!is.na(do)`.
ℹ In group 1: `station = "MON000.18"`, `year = 2007`, `season = "Fall"`, `month = 9`, `date =
  2007-09-15`.
Caused by warning in `is.na()`:
! is.na() applied to non-(list or vector) of type 'closure'
ℹ Run `dplyr::last_dplyr_warnings()` to see the 866 remaining warnings.
2: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
ℹ Please use `reframe()` instead.
ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped
  data frame and adjust accordingly.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
> cmn.poh.sum <- cmn.poh.sum[order(cmn.poh.sum$potomac_river_km),]
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_wtr_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = air_wtr_mean * dewtemp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = dewtemp_mean/air_wtr_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = dewtemp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = windspeed_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = temp_range
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 27 warnings (use warnings() to see them)
> plotly::ggplotly(gg.conmon.noaa)
Error in match.fun(FUN) :
  'ggfun("scales_transform_df")' is not a function, character or symbol
> plotly::ggplotly(gg.conmon.noaa)
Error in match.fun(FUN) :
  'ggfun("scales_transform_df")' is not a function, character or symbol
> gg.conmon.noaa <- ggplot(cmn.poh.sum[cmn.poh.sum$windspeed_mean < 30,],
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = temp_range
+                 )) +
+   geom_point() +
+   ## scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
plotly::ggplotly(gg.conmon.noaa)
There were 27 warnings (use warnings() to see them)
> Error in match.fun(FUN) :
  'ggfun("scales_transform_df")' is not a function, character or symbol
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = temp_range
+                 )) +
+   geom_point() +
+   ## scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = temp_range
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = temp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = skycover_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = windspeed_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = dewtemp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
There were 24 warnings (use warnings() to see them)
> plotly::ggplotly(gg.conmon.noaa)
Error in match.fun(FUN) :
  'ggfun("scales_transform_df")' is not a function, character or symbol
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = dewtemp_mean
+                 )) +
+   geom_point() +
+   scale_color_gradientn(colours = pal)+ #, name = '\n') +
+   stat_poly_line() +
+   stat_poly_eq(use_label(c("eq", "R2", "p"), sep = "*\"; \"*"),
+                      size = 10,
+                      ## label.y = 0.75,
+                      ) +
+   theme_bw() +
+   theme(
+     text = element_text(size = 46),
+     axis.text.y = element_text(size = 52),
+     plot.title = element_text(size = 56)
+   ) +
+   ## ylim(-2.75,7.5) +
+   ## scale_x_log10() +
+   ## facet_wrap(~season+station) +
+   ggtitle(paste0("Sunrise-Sunset DO Production (eq-subtracted mgl) vs Sunset-Sunrise DO Consumption (eq-subtracted mgl) at ", station),
+           subtitle = paste0('colored by nearest NOAA gage weather data')) +
+   geom_hline(yintercept = 0, col = 'black', size = 0.75)
> gg.conmon.noaa
Warning messages:
1: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
2: The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?
> plotly::ggplotly(gg.conmon.noaa)
Error in match.fun(FUN) :
  'ggfun("scales_transform_df")' is not a function, character or symbol
> library(plotly)
+ plotly::ggplotly(gg.conmon.noaa)

Attaching package: ‘plotly’

The following object is masked from ‘package:ggplot2’:

    last_plot

The following object is masked from ‘package:stats’:

    filter

The following object is masked from ‘package:graphics’:

    layout

> Error in match.fun(FUN) :
  'ggfun("scales_transform_df")' is not a function, character or symbol
> install.packages('plotly')
Installing package into ‘/home/weston/R/x86_64-pc-linux-gnu-library/4.2’
(as ‘lib’ is unspecified)
trying URL 'https://cloud.r-project.org/src/contrib/plotly_4.10.4.tar.gz'
Content type 'application/x-gzip' length 3903133 bytes (3.7 MB)
==================================================
downloaded 3.7 MB

* installing *source* package ‘plotly’ ...
** package ‘plotly’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** demo
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
*** copying figures
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (plotly)

The downloaded source packages are in
	‘/tmp/RtmpnJypJC/downloaded_packages’
> library(plotly)
> plotly::ggplotly(gg.conmon.noaa)
Error in match.fun(FUN) :
  'ggfun("scales_transform_df")' is not a function, character or symbol
> gg.conmon.noaa <- ggplot(cmn.poh.sum,
+ ## gg.conmon <- ggplot(conmon.ts[conmon.ts$year == 2022,],
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = dewtemp_mean
+                 )) +
+   geom_point()
> library(plotly)
> plotly::ggplotly(gg.conmon.noaa)
Error in match.fun(FUN) :
  'ggfun("scales_transform_df")' is not a function, character or symbol
> gg.conmon.noaa <- ggplot(cmn.poh.sum
+                 ) +
+   geom_point(
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration,
+                   col = dewtemp_mean
+                 )
+   )
> plotly::ggplotly(gg.conmon.noaa)
Error in match.fun(FUN) :
  'ggfun("scales_transform_df")' is not a function, character or symbol
> gg.conmon.noaa <- ggplot(cmn.poh.sum
+                 ) +
+   geom_point(
+                 aes(
+                   x = do_mgl_from_eq_diel_production,
+                   y = do_mgl_from_eq_diel_respiration
+                   ## col = dewtemp_mean
+                 )
+   )
> library(plotly)
> plotly::ggplotly(gg.conmon.noaa)
Error in match.fun(FUN) :
  'ggfun("scales_transform_df")' is not a function, character or symbol
>
